let jobConfig = {
    "jobs": [
        {
            "collectionName": "fis_positions",
			"notificationFilter":[],
            "create": {
                "source": `
                        SELECT *
                        FROM (
                        SELECT '<%-ASONDATE%>' asondate, os_asset_class asset_class, os_holding HOLDING, os_subsidiaryname subsidiaryname, os_bookname bookname, os_portfolio portfolio, costing_policy COSTING_POLICY, p.symbol SECURITYSYMBOL, os_security_desc security_desc, os_security_type security_type, (os_total_facevalue / os_total_quantity) FACEVALUE_PERUNIT, os_quantity quantity, os_cl_quantity cl_quantity, os_total_quantity total_quantity, os_cl_facevalue cl_facevalue, os_total_facevalue total_facevalue, os_wac wac, os_cl_bookvalue cl_bookvalue, os_total_bookvalue total_bookvalue, 0 revalwac, 0 REVAL_BOOKVALUE, SecAccrual.accruals, secaccrual.ACCRUAL_PER_DAY_UNIT, secaccrual.ACCRUALDATE accrual_date, ACCRUALSGLOBAL, ACCRUALLCYCURR, ACCRUALLCYRATE, ACCRUALLCY, ACCRUALSGROUP, ACCRUALSGROUPRATE, ACCRUALSGROUPCURR, ACCRUALSGLOBALCURR, ACCRUALSOSAMT, ACCRUALSGLOBALRATE, MTMDATE mtm_value_date, mtmprice * os_total_quantity mtm, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, MTMGLOBAL, MTMGROUP, pv01, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, NETACCRUALS, CONVEXITY, MTMYIELD, CREDITEXPOSURE, lastammortdate, secammort.AMMORT_PU, secammort.AMMORTIZATION, AMRT_GROUPRATE, AMRT_GROUPAMT, AMRT_GLOBALCURR, AMRT_GLOBALRATE, AMRT_GLOBALAMT, AMRT_GROUPCURR, AMRT_LCYAMT, AMRT_LCYRATE, AMRT_LCYCURR, decode(p.product, 'SECU', p.os_WAC - ((os_total_facevalue / os_total_quantity) + Nvl(Decode(alm.description, 'Irregular Redemption', premium, 'Irregular Cashflows', premium, REDEMPTION_PREMIUM), 0)), 0) premium_val, alm.TYPE, alm.REPORTING_ASSET_CLASS, alm.INTERESTMODE, alm.INTEREST, alm.ISSUER, p.os_issuername, (To_Date(alm.enddate) - To_Date('<%-ASONDATE%>')) residual, alm.ISIN_FACEVALUE, Nvl(Round((p.os_facevalue / decode(alm.isin_facevalue, 0, 1, alm.isin_facevalue)), 12), 0) ISIN_QTY, alm.isino_code isin, alm.CURRENCY, alm.description cashflow_type, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN To_Date('') ELSE ENDDATE END maturity, p.asset, sectorname sector, industryname industry, alm.category_subtype MIS_CATEGORY_NAME, p.portfolio portcode, p.pos_bookid bookid, p.pos_subsidiarycode SUBSIDIARYCODE, nvl(newmtmmethod, decode(product, 'SECU', 'Interpolation', 'Swaps')) mtmmethod, 'Securitywise' viewdata, os_workflow workflow, alm.contractcode, p.asset assetclass, 'dealsymbol.symbol' subproduct, alm.INTERESTDIRECTION, alm.DISCOUNTED, alm.contractdesc PRODUCT_DESCRIPTION, p.os_total_quantity OUTSTANDINGAMT, p.os_total_quantity OSQUANTITY, p.product PRODUCT_CODE, alm.COUPONAT, alm.DISCOUNTCURVE, alm.DAYCOUNT, alm.FRN_COMPOUNDING, alm.SETTLEMENTCONV, alm.MARKUP, alm.NOTIONALSTEPRULE, alm.RESETCALN, alm.SPREADCOMPOUNDING, alm.BENCHMARKID, alm.FRN_RESET_UNIT, alm.COUPYEAR, alm.CALCULATIONPERIOD, alm.RESETCALCTYPE, alm.FRN_RESETTYPE, alm.FRN_FLR, alm.FRN_CAP, alm.BEGN_STUB, alm.BEGN_STUBDATE, alm.BEGN_STUBIN, alm.BEGN_REFERENCEBENCHMARK, alm.BEGN_STUBVALUE, alm.END_STUB, alm.END_STUBDATE, alm.END_STUBIN, alm.END_REFERENCEBENCHMARK, alm.END_STUBVALUE, alm.ONMONTHENDS, alm.SHUT_PERIOD, alm.EOMADHERENCE, alm.CAPS, alm.FLOORS, alm.RANGEBARRIERS, alm.DESCRIPTION, alm.ENDDATE MATDATE, alm.STARTDATE, alm.ENDDATE, alm.INCLUDEIPDATE, alm.REDEMPTION_PREMIUM, alm.HEDGEON, alm.RATING1, p.os_osunit OSUNIT, alm.CP_EOM_CURRENTDATE, alm.DEPOSITORY_ID, alm.INCLUDE_LAST_IP_DATE, alm.CP_INCLUDE_ALL_IP_DATE, alm.CP_INCLUDE_IP_DATE, alm.INCLUDE_ALL_IP_DATE, p.event TRANSACTION_TYPE_CODE, 'NA' SELECTIONFLAG, alm.INT_ACC_IPDATE, nvl(exchangerate.mid, 1) exchrate, alm.newuploadkey uploadkey, '' EVENT, alm.ACCOUNTNO, alm.BANKCODE, alm.EARLYTERMINATION, alm.CANCELLABLE, alm.SPOTDATE, alm.RESETDATE, alm.FRN_RESET, alm.FRN_COMPOUNDING_TYPE, ALM.FRN, alm.YIELD_TYPE, alm.UNADJUSTEDENDDATE, alm.TRADEDATE, decode(Lower(p.os_workflow), 'security', decode(description, 'Discounted', 'Accretion', 'Ammortization'), 'NA') RESULT_FOR, alm.MANUAL_CASHFLOW, p.posamt_groupcurr GROUPCURR_CLEAR_AMT, p.POSAMT_GROUPCURR, p.GLOBALCURR, p.POSAMT_GLOBALCURR, posamt_globalcurr GLOBALCURR_CLEAR_AMT, p.GROUPCURR, p.LOCALCURR, p.POSAMT_LCY, posamt_lcy LCY_CLEAR_AMT, p.os_total_facevalue FACEVALUE, p.SYMBOL, alm.NPI_STATUS, alm.NPI_EFFECTIVE_DATE, alm.LISTED, p.os_clear_qty CLEAR_QTY, p.os_bookvalue pos_bookvalue, p.os_cl_facevalue CLEARFACEVALUE, p.os_cl_bookvalue CLEAR_BOOKVALUE, Decode(Upper(listed), 'TRUE', 1, 'FALSE', 0) listingstatus, Decode(Upper(p.os_workflow), 'FUTURES', Decode(Sign(p.POS_BOOKVALUE), - 1, 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND'), os_HOLDING) HOLDINGTYPE, To_Date(enddate) - To_Date('<%-ASONDATE%>') RES_MATURITY, alm.ISSUER_GROUP, alm.CAR_PERC, alm.NETWORTH, alm.illiquid LIQUIDITYSTATUS, alm.ISSUER_RATING, alm.ISSUER_GRP_RATING, alm.REGULATORY_CATEGORY, alm.RATED_AMOUNT, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN 0 ELSE Round((To_Date(enddate) - To_Date('<%-ASONDATE%>')) / 365, 2) END AS RESIDUAL_IN_YRS, Decode(listed, 'True', 'Listed', 'False', 'UnListed', listed) LISTING_CATEGORY, alm.sec_remarks DEAL_TYPE, p.os_holding HOLDINGFOROPTM, (nvl(p.os_total_bookvalue, 0) * alm.interestdirection) NET_MM_BORROWING, alm.SEC_DEAL_LOC, CASE WHEN p.os_workflow = 'Options' AND To_Date('<%-ASONDATE%>', 'dd/MM/yyyy') >= To_Date(ENDDATE, 'dd/MM/yyyy') THEN 'True' ELSE 'False' END OPTREDEM, Decode(p.os_holding, 'SECURITY IN SHORT', nvl(p.os_total_facevalue, 0), nvl(p.os_total_facevalue, 0) * - 1) net_short_position, to_date('', 'dd/MM/yyyy') LASTIPDATE, to_date('', 'dd/MM/yyyy') IPSTARTDATE, to_date('', 'dd/MM/yyyy') NEXTINTDATE, 0 INFLATION_ADJ_FACE_VALUE, 0 INDEX_RATIO, 0 INFLATION_ADJ_CL_FACE_VALUE, Nvl(secaccrual.taxrate, 0) TAXRATE, Nvl(secaccrual.GROSSAMT, 0) GROSSAMT, Nvl(secaccrual.TAXAMT, 0) TAXAMT, decode(product, 'IRSC', '8', 'LOAN', '6') WORKFLOWCODE, '' LASTISSUEDATE, '' NEXTRESETDATE, To_Date('<%-ASONDATE%>') || p.symbol || p.os_subsidiaryname || p.os_bookname || p.os_portfolio || p.os_holding eventkey, (CASE WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') ELSE 0 END) NOTIFIED_AMOUNT, alm.payment_mode PAYMENT_MODE, notch RATING_NOTCH, p.os_issuername issuername, mtmprice price, p.
                            os_yield YIELD, alm.mm_workflow, pm.isconstituent isconstituent, 'Trade' next_action
                        FROM positions p, portmast pm, (
                            SELECT *
                            FROM swapaccruals
                            WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND accrualdate = (
                                SELECT Max(accrualdate) accrualdate
                                FROM swapaccruals
                                WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND trunc(accrualdate) = to_date('<%-ASONDATE%>')
                                )
                            ) SecAccrual, (
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(MTM_WORKFLOW, 'Options', CASE WHEN holding_type = 'Short Call' OR holding_type = 'Short Put' THEN 'SECURITY IN HAND - SHORT' WHEN holding_type = 'Long Call' OR holding_type = 'Long Put' THEN 'SECURITY IN HAND' ELSE holding_type END, holding_type) holding_type
                            FROM (
                                SELECT SECURITYSYMBOL, MTMDATE, MTMVALUE, MTMMETHOD, NETACCRUALS, NETACCRUALSPV, CONTRACTCODE, ENTRYTYPE, PV01, CREDITEXPOSURE, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, SYSTEMVALUE, REMARKS, DELTA, GAMMA, VEGA, THETA, RHO_CURR1, RHO_CURR2, MARGIN, MTMGLOBAL, MTMGROUP, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTM_ASSETCLASS, MTMPRICE, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, MTM_VIEWDATA, MTMYIELD, CONVEXITY, MTM_BOOKVALUE, MTM_WORKFLOW, MTM_OPTIONTYPE, DEALBUCKET, PV_FACTOR, REVISED_PL, INTERPOLATED_BENCHMARK_RATE, SPOT_MTMRATE, SPOT_MTMAMOUNT, SPOT_MTMPL, RECORD_ID, HOLDING_TYPE
                                FROM mtmvalues
								WHERE mtm_product IN ('Security', 'Equity', 'Mutual Funds', 'Options', 'Alternative Investment') 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                )
                    
                            UNION ALL
                    
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(holding_type, 'Short Futures', 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND') holding_type
                            FROM (
                                SELECT contractcode SECURITYSYMBOL, MTMDATE, 0 MTMVALUE, '' MTMMETHOD, 0 NETACCRUALS, 0 NETACCRUALSPV, CONTRACTCODE, '' ENTRYTYPE, 0 PV01, 0 CREDITEXPOSURE, 0 MTMEXCHRATE, 0 MTMLCY, 0 DURATION, 0 MODIFIEDDURATION, 0 SYSTEMVALUE, '' REMARKS, 0 DELTA, 0 GAMMA, 0 VEGA, 0 THETA, 0 RHO_CURR1, 0 RHO_CURR2, 0 MARGIN, '' MTMGLOBAL, '' MTMGROUP, '' MTMGLOBALCURR, '' MTMGROUPCURR, '' MTMLCYCURR, MTM_ASSETCLASS, Avg(MTMPRICE) MTMPRICE, 0 MTMGLOBALRATE, 0 MTMGROUPRATE, 0 MTMLCYRATE, 0 MTMPL, 0 MTMPLLCY, 0 MTMPLGLOBAL, 0 MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, '' MTM_VIEWDATA, 0 MTMYIELD, 0 CONVEXITY, 0 MTM_BOOKVALUE, '' MTM_WORKFLOW, '' MTM_OPTIONTYPE, '' DEALBUCKET, 0 PV_FACTOR, 0 REVISED_PL, 0 INTERPOLATED_BENCHMARK_RATE, 0 SPOT_MTMRATE, 0 SPOT_MTMAMOUNT, 0 SPOT_MTMPL, 0 RECORD_ID, holding_type
                                FROM mtmvalues
								WHERE mtm_product = 'Futures' 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                GROUP BY contractcode, mtm_subsidiary, mtm_bookid, mtm_assetclass, mtm_product, mtm_portfolio, mtm_product, mtm_curr, MTMDATE, holding_type
                                )
                            ) secmtm, holding_wac hw, (
                            SELECT *
                            FROM ammortization
                            WHERE (ammortdate, AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL) IN (
                                SELECT Max(ammortdate), AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                FROM ammortization
                                WHERE trunc(AMMORTDATE) <= to_date( '<%-ASONDATE%>')
                                GROUP BY AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                )
                            ) SecAmmort, (
                            SELECT contractcode, max(ammortdate) LastAmmortDate
                            FROM ammortization
                            WHERE ammortdate <= '<%-ASONDATE%>'
                            GROUP BY contractcode
                            ) LastAmmortDate, allmasters alm, (
                            SELECT *
                            FROM spotratesources sp, exchangerate e
                            WHERE trunc(exchangedate) = to_date('<%-ASONDATE%>', 'dd/MM/yyyy') AND e.source = sp.spotratesources_id
                            ) ExchangeRate, (
                            SELECT Sum(premium) premium, securitysymbol
                            FROM securityevents
                            WHERE ACTUALDATE >= '<%-ASONDATE%>' AND EVENTDESCRIPTION = 'Partial Redemption'
                            GROUP BY securitysymbol
                            ) premium
                        WHERE nvl(lastdeal, 0) = 1 AND p.portfolio = pm.portcode AND Nvl(deletionstatus, 'ND') = 'ND' AND alm.securitysymbol(+) = p.symbol AND lower(product) NOT IN ('cash') AND lower(asset) IN ('interest rate', 'security', 'equity', 'mutual funds', 'currency', 'alternative investment') AND p.holding = hw.ORIGINAL_HOLDING_TYPE(+) AND p.symbol = SecAccrual.contractcode(+) AND p.symbol = SecMTM.contractcode(+) AND p.os_subsidiaryname = SecMTM.mtm_subsidiary(+) AND p.os_bookname = SecMTM.mtm_bookid(+) AND p.asset = SecMTM.mtm_assetclass(+) AND p.os_workflow = SecMTM.mtm_product(+) AND p.os_portfolio = SecMTM.mtm_portfolio(+) AND p.os_holding = SecMTM.holding_type(+) AND p.symbol = SecAmmort.contractcode(+) AND p.os_subsidiaryname = SecAmmort.amrt_subsidiaryname(+) AND p.os_bookname = secammort.amrt_bookname(+) AND p.os_portfolio = secammort.amrt_portfolio(+) AND LastAmmortDate.contractcode(+) = p.symbol AND p.os_subsidiaryname = SecAccrual.acc_subsidiary(+) AND p.os_bookname = SecAccrual.acc_bookid(+) AND p.asset = SecAccrual.acc_assetclass(+) AND p.os_workflow = SecAccrual.acc_product(+) AND p.os_portfolio = SecAccrual.acc_portfolio(+) AND alm.Currency = ExchangeRate.base(+) AND ExchangeRate.derive(+) = 'INR' AND PREMIUM.securitysymbol(+) = alm.securitysymbol AND p.os_total_quantity > 0
                        )
                        WHERE 1 = 1 AND holding = 'SECURITY IN HAND' AND SECURITYSYMBOL = '<%-SECURITYSYMBOL%>' 
						AND SUBSIDIARYCODE = '<%-SUBSIDIARYCODE%>' AND BOOKID = '<%-BOOKID%>' AND PORTCODE = '<%-PORTCODE%>'
						and asset_class in ('SLR','NSLR')  AND bookname = 'SELF'
    `,
                "filter": ["ASONDATE","SUBSIDIARYCODE","BOOKID","PORTCODE","SECURITYSYMBOL"]
            },
            "refresh": {
                "source": `
                        SELECT *
                        FROM (
                        SELECT '<%-ASONDATE%>' asondate, os_asset_class asset_class, os_holding HOLDING, os_subsidiaryname subsidiaryname, os_bookname bookname, os_portfolio portfolio, costing_policy COSTING_POLICY, p.symbol SECURITYSYMBOL, os_security_desc security_desc, os_security_type security_type, (os_total_facevalue / os_total_quantity) FACEVALUE_PERUNIT, os_quantity quantity, os_cl_quantity cl_quantity, os_total_quantity total_quantity, os_cl_facevalue cl_facevalue, os_total_facevalue total_facevalue, os_wac wac, os_cl_bookvalue cl_bookvalue, os_total_bookvalue total_bookvalue, 0 revalwac, 0 REVAL_BOOKVALUE, SecAccrual.accruals, secaccrual.ACCRUAL_PER_DAY_UNIT, secaccrual.ACCRUALDATE accrual_date, ACCRUALSGLOBAL, ACCRUALLCYCURR, ACCRUALLCYRATE, ACCRUALLCY, ACCRUALSGROUP, ACCRUALSGROUPRATE, ACCRUALSGROUPCURR, ACCRUALSGLOBALCURR, ACCRUALSOSAMT, ACCRUALSGLOBALRATE, MTMDATE mtm_value_date, mtmprice * os_total_quantity mtm, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, MTMGLOBAL, MTMGROUP, pv01, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, NETACCRUALS, CONVEXITY, MTMYIELD, CREDITEXPOSURE, lastammortdate, secammort.AMMORT_PU, secammort.AMMORTIZATION, AMRT_GROUPRATE, AMRT_GROUPAMT, AMRT_GLOBALCURR, AMRT_GLOBALRATE, AMRT_GLOBALAMT, AMRT_GROUPCURR, AMRT_LCYAMT, AMRT_LCYRATE, AMRT_LCYCURR, decode(p.product, 'SECU', p.os_WAC - ((os_total_facevalue / os_total_quantity) + Nvl(Decode(alm.description, 'Irregular Redemption', premium, 'Irregular Cashflows', premium, REDEMPTION_PREMIUM), 0)), 0) premium_val, alm.TYPE, alm.REPORTING_ASSET_CLASS, alm.INTERESTMODE, alm.INTEREST, alm.ISSUER, p.os_issuername, (To_Date(alm.enddate) - To_Date('<%-ASONDATE%>')) residual, alm.ISIN_FACEVALUE, Nvl(Round((p.os_facevalue / decode(alm.isin_facevalue, 0, 1, alm.isin_facevalue)), 12), 0) ISIN_QTY, alm.isino_code isin, alm.CURRENCY, alm.description cashflow_type, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN To_Date('') ELSE ENDDATE END maturity, p.asset, sectorname sector, industryname industry, alm.category_subtype MIS_CATEGORY_NAME, p.portfolio portcode, p.pos_bookid bookid, p.pos_subsidiarycode SUBSIDIARYCODE, nvl(newmtmmethod, decode(product, 'SECU', 'Interpolation', 'Swaps')) mtmmethod, 'Securitywise' viewdata, os_workflow workflow, alm.contractcode, p.asset assetclass, 'dealsymbol.symbol' subproduct, alm.INTERESTDIRECTION, alm.DISCOUNTED, alm.contractdesc PRODUCT_DESCRIPTION, p.os_total_quantity OUTSTANDINGAMT, p.os_total_quantity OSQUANTITY, p.product PRODUCT_CODE, alm.COUPONAT, alm.DISCOUNTCURVE, alm.DAYCOUNT, alm.FRN_COMPOUNDING, alm.SETTLEMENTCONV, alm.MARKUP, alm.NOTIONALSTEPRULE, alm.RESETCALN, alm.SPREADCOMPOUNDING, alm.BENCHMARKID, alm.FRN_RESET_UNIT, alm.COUPYEAR, alm.CALCULATIONPERIOD, alm.RESETCALCTYPE, alm.FRN_RESETTYPE, alm.FRN_FLR, alm.FRN_CAP, alm.BEGN_STUB, alm.BEGN_STUBDATE, alm.BEGN_STUBIN, alm.BEGN_REFERENCEBENCHMARK, alm.BEGN_STUBVALUE, alm.END_STUB, alm.END_STUBDATE, alm.END_STUBIN, alm.END_REFERENCEBENCHMARK, alm.END_STUBVALUE, alm.ONMONTHENDS, alm.SHUT_PERIOD, alm.EOMADHERENCE, alm.CAPS, alm.FLOORS, alm.RANGEBARRIERS, alm.DESCRIPTION, alm.ENDDATE MATDATE, alm.STARTDATE, alm.ENDDATE, alm.INCLUDEIPDATE, alm.REDEMPTION_PREMIUM, alm.HEDGEON, alm.RATING1, p.os_osunit OSUNIT, alm.CP_EOM_CURRENTDATE, alm.DEPOSITORY_ID, alm.INCLUDE_LAST_IP_DATE, alm.CP_INCLUDE_ALL_IP_DATE, alm.CP_INCLUDE_IP_DATE, alm.INCLUDE_ALL_IP_DATE, p.event TRANSACTION_TYPE_CODE, 'NA' SELECTIONFLAG, alm.INT_ACC_IPDATE, nvl(exchangerate.mid, 1) exchrate, alm.newuploadkey uploadkey, '' EVENT, alm.ACCOUNTNO, alm.BANKCODE, alm.EARLYTERMINATION, alm.CANCELLABLE, alm.SPOTDATE, alm.RESETDATE, alm.FRN_RESET, alm.FRN_COMPOUNDING_TYPE, ALM.FRN, alm.YIELD_TYPE, alm.UNADJUSTEDENDDATE, alm.TRADEDATE, decode(Lower(p.os_workflow), 'security', decode(description, 'Discounted', 'Accretion', 'Ammortization'), 'NA') RESULT_FOR, alm.MANUAL_CASHFLOW, p.posamt_groupcurr GROUPCURR_CLEAR_AMT, p.POSAMT_GROUPCURR, p.GLOBALCURR, p.POSAMT_GLOBALCURR, posamt_globalcurr GLOBALCURR_CLEAR_AMT, p.GROUPCURR, p.LOCALCURR, p.POSAMT_LCY, posamt_lcy LCY_CLEAR_AMT, p.os_total_facevalue FACEVALUE, p.SYMBOL, alm.NPI_STATUS, alm.NPI_EFFECTIVE_DATE, alm.LISTED, p.os_clear_qty CLEAR_QTY, p.os_bookvalue pos_bookvalue, p.os_cl_facevalue CLEARFACEVALUE, p.os_cl_bookvalue CLEAR_BOOKVALUE, Decode(Upper(listed), 'TRUE', 1, 'FALSE', 0) listingstatus, Decode(Upper(p.os_workflow), 'FUTURES', Decode(Sign(p.POS_BOOKVALUE), - 1, 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND'), os_HOLDING) HOLDINGTYPE, To_Date(enddate) - To_Date('<%-ASONDATE%>') RES_MATURITY, alm.ISSUER_GROUP, alm.CAR_PERC, alm.NETWORTH, alm.illiquid LIQUIDITYSTATUS, alm.ISSUER_RATING, alm.ISSUER_GRP_RATING, alm.REGULATORY_CATEGORY, alm.RATED_AMOUNT, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN 0 ELSE Round((To_Date(enddate) - To_Date('<%-ASONDATE%>')) / 365, 2) END AS RESIDUAL_IN_YRS, Decode(listed, 'True', 'Listed', 'False', 'UnListed', listed) LISTING_CATEGORY, alm.sec_remarks DEAL_TYPE, p.os_holding HOLDINGFOROPTM, (nvl(p.os_total_bookvalue, 0) * alm.interestdirection) NET_MM_BORROWING, alm.SEC_DEAL_LOC, CASE WHEN p.os_workflow = 'Options' AND To_Date('<%-ASONDATE%>', 'dd/MM/yyyy') >= To_Date(ENDDATE, 'dd/MM/yyyy') THEN 'True' ELSE 'False' END OPTREDEM, Decode(p.os_holding, 'SECURITY IN SHORT', nvl(p.os_total_facevalue, 0), nvl(p.os_total_facevalue, 0) * - 1) net_short_position, to_date('', 'dd/MM/yyyy') LASTIPDATE, to_date('', 'dd/MM/yyyy') IPSTARTDATE, to_date('', 'dd/MM/yyyy') NEXTINTDATE, 0 INFLATION_ADJ_FACE_VALUE, 0 INDEX_RATIO, 0 INFLATION_ADJ_CL_FACE_VALUE, Nvl(secaccrual.taxrate, 0) TAXRATE, Nvl(secaccrual.GROSSAMT, 0) GROSSAMT, Nvl(secaccrual.TAXAMT, 0) TAXAMT, decode(product, 'IRSC', '8', 'LOAN', '6') WORKFLOWCODE, '' LASTISSUEDATE, '' NEXTRESETDATE, To_Date('<%-ASONDATE%>') || p.symbol || p.os_subsidiaryname || p.os_bookname || p.os_portfolio || p.os_holding eventkey, (CASE WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') ELSE 0 END) NOTIFIED_AMOUNT, alm.payment_mode PAYMENT_MODE, notch RATING_NOTCH, p.os_issuername issuername, mtmprice price, p.
                            os_yield YIELD, alm.mm_workflow, pm.isconstituent isconstituent, 'Trade' next_action
                        FROM positions p, portmast pm, (
                            SELECT *
                            FROM swapaccruals
                            WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND accrualdate = (
                                SELECT Max(accrualdate) accrualdate
                                FROM swapaccruals
                                WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND trunc(accrualdate) = to_date('<%-ASONDATE%>')
                                )
                            ) SecAccrual, (
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(MTM_WORKFLOW, 'Options', CASE WHEN holding_type = 'Short Call' OR holding_type = 'Short Put' THEN 'SECURITY IN HAND - SHORT' WHEN holding_type = 'Long Call' OR holding_type = 'Long Put' THEN 'SECURITY IN HAND' ELSE holding_type END, holding_type) holding_type
                            FROM (
                                SELECT SECURITYSYMBOL, MTMDATE, MTMVALUE, MTMMETHOD, NETACCRUALS, NETACCRUALSPV, CONTRACTCODE, ENTRYTYPE, PV01, CREDITEXPOSURE, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, SYSTEMVALUE, REMARKS, DELTA, GAMMA, VEGA, THETA, RHO_CURR1, RHO_CURR2, MARGIN, MTMGLOBAL, MTMGROUP, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTM_ASSETCLASS, MTMPRICE, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, MTM_VIEWDATA, MTMYIELD, CONVEXITY, MTM_BOOKVALUE, MTM_WORKFLOW, MTM_OPTIONTYPE, DEALBUCKET, PV_FACTOR, REVISED_PL, INTERPOLATED_BENCHMARK_RATE, SPOT_MTMRATE, SPOT_MTMAMOUNT, SPOT_MTMPL, RECORD_ID, HOLDING_TYPE
                                FROM mtmvalues
								WHERE mtm_product IN ('Security', 'Equity', 'Mutual Funds', 'Options', 'Alternative Investment') 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                )
                    
                            UNION ALL
                    
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(holding_type, 'Short Futures', 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND') holding_type
                            FROM (
                                SELECT contractcode SECURITYSYMBOL, MTMDATE, 0 MTMVALUE, '' MTMMETHOD, 0 NETACCRUALS, 0 NETACCRUALSPV, CONTRACTCODE, '' ENTRYTYPE, 0 PV01, 0 CREDITEXPOSURE, 0 MTMEXCHRATE, 0 MTMLCY, 0 DURATION, 0 MODIFIEDDURATION, 0 SYSTEMVALUE, '' REMARKS, 0 DELTA, 0 GAMMA, 0 VEGA, 0 THETA, 0 RHO_CURR1, 0 RHO_CURR2, 0 MARGIN, '' MTMGLOBAL, '' MTMGROUP, '' MTMGLOBALCURR, '' MTMGROUPCURR, '' MTMLCYCURR, MTM_ASSETCLASS, Avg(MTMPRICE) MTMPRICE, 0 MTMGLOBALRATE, 0 MTMGROUPRATE, 0 MTMLCYRATE, 0 MTMPL, 0 MTMPLLCY, 0 MTMPLGLOBAL, 0 MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, '' MTM_VIEWDATA, 0 MTMYIELD, 0 CONVEXITY, 0 MTM_BOOKVALUE, '' MTM_WORKFLOW, '' MTM_OPTIONTYPE, '' DEALBUCKET, 0 PV_FACTOR, 0 REVISED_PL, 0 INTERPOLATED_BENCHMARK_RATE, 0 SPOT_MTMRATE, 0 SPOT_MTMAMOUNT, 0 SPOT_MTMPL, 0 RECORD_ID, holding_type
                                FROM mtmvalues
								WHERE mtm_product = 'Futures' 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                GROUP BY contractcode, mtm_subsidiary, mtm_bookid, mtm_assetclass, mtm_product, mtm_portfolio, mtm_product, mtm_curr, MTMDATE, holding_type
                                )
                            ) secmtm, holding_wac hw, (
                            SELECT *
                            FROM ammortization
                            WHERE (ammortdate, AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL) IN (
                                SELECT Max(ammortdate), AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                FROM ammortization
                                WHERE trunc(AMMORTDATE) <= to_date( '<%-ASONDATE%>')
                                GROUP BY AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                )
                            ) SecAmmort, (
                            SELECT contractcode, max(ammortdate) LastAmmortDate
                            FROM ammortization
                            WHERE ammortdate <= '<%-ASONDATE%>'
                            GROUP BY contractcode
                            ) LastAmmortDate, allmasters alm, (
                            SELECT *
                            FROM spotratesources sp, exchangerate e
                            WHERE trunc(exchangedate) = to_date('<%-ASONDATE%>', 'dd/MM/yyyy') AND e.source = sp.spotratesources_id
                            ) ExchangeRate, (
                            SELECT Sum(premium) premium, securitysymbol
                            FROM securityevents
                            WHERE ACTUALDATE >= '<%-ASONDATE%>' AND EVENTDESCRIPTION = 'Partial Redemption'
                            GROUP BY securitysymbol
                            ) premium
                        WHERE nvl(lastdeal, 0) = 1 AND p.portfolio = pm.portcode AND Nvl(deletionstatus, 'ND') = 'ND' AND alm.securitysymbol(+) = p.symbol 
						AND lower(product) NOT IN ('cash') AND lower(asset) IN ('interest rate', 'security','commodity','capital') AND p.holding = hw.ORIGINAL_HOLDING_TYPE(+) AND p.symbol = SecAccrual.contractcode(+) AND p.symbol = SecMTM.contractcode(+) AND p.os_subsidiaryname = SecMTM.mtm_subsidiary(+) AND p.os_bookname = SecMTM.mtm_bookid(+) AND p.asset = SecMTM.mtm_assetclass(+) AND p.os_workflow = SecMTM.mtm_product(+) AND p.os_portfolio = SecMTM.mtm_portfolio(+) AND p.os_holding = SecMTM.holding_type(+) AND p.symbol = SecAmmort.contractcode(+) AND p.os_subsidiaryname = SecAmmort.amrt_subsidiaryname(+) AND p.os_bookname = secammort.amrt_bookname(+) AND p.os_portfolio = secammort.amrt_portfolio(+) AND LastAmmortDate.contractcode(+) = p.symbol AND p.os_subsidiaryname = SecAccrual.acc_subsidiary(+) AND p.os_bookname = SecAccrual.acc_bookid(+) AND p.asset = SecAccrual.acc_assetclass(+) AND p.os_workflow = SecAccrual.acc_product(+) AND p.os_portfolio = SecAccrual.acc_portfolio(+) AND alm.Currency = ExchangeRate.base(+) AND ExchangeRate.derive(+) = 'INR' AND PREMIUM.securitysymbol(+) = alm.securitysymbol AND p.os_total_quantity > 0
                        )
                        WHERE 1 = 1 AND holding = 'SECURITY IN HAND' and asset_class in ('SLR','NSLR')
                        `,
                "filter": [""]
            },
            "update": {
                "source": `
                        SELECT *
                        FROM (
                        SELECT '<%-ASONDATE%>' asondate, os_asset_class asset_class, os_holding HOLDING, os_subsidiaryname subsidiaryname, os_bookname bookname, os_portfolio portfolio, costing_policy COSTING_POLICY, p.symbol SECURITYSYMBOL, os_security_desc security_desc, os_security_type security_type, (os_total_facevalue / os_total_quantity) FACEVALUE_PERUNIT, os_quantity quantity, os_cl_quantity cl_quantity, os_total_quantity total_quantity, os_cl_facevalue cl_facevalue, os_total_facevalue total_facevalue, os_wac wac, os_cl_bookvalue cl_bookvalue, os_total_bookvalue total_bookvalue, 0 revalwac, 0 REVAL_BOOKVALUE, SecAccrual.accruals, secaccrual.ACCRUAL_PER_DAY_UNIT, secaccrual.ACCRUALDATE accrual_date, ACCRUALSGLOBAL, ACCRUALLCYCURR, ACCRUALLCYRATE, ACCRUALLCY, ACCRUALSGROUP, ACCRUALSGROUPRATE, ACCRUALSGROUPCURR, ACCRUALSGLOBALCURR, ACCRUALSOSAMT, ACCRUALSGLOBALRATE, MTMDATE mtm_value_date, mtmprice * os_total_quantity mtm, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, MTMGLOBAL, MTMGROUP, pv01, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, NETACCRUALS, CONVEXITY, MTMYIELD, CREDITEXPOSURE, lastammortdate, secammort.AMMORT_PU, secammort.AMMORTIZATION, AMRT_GROUPRATE, AMRT_GROUPAMT, AMRT_GLOBALCURR, AMRT_GLOBALRATE, AMRT_GLOBALAMT, AMRT_GROUPCURR, AMRT_LCYAMT, AMRT_LCYRATE, AMRT_LCYCURR, decode(p.product, 'SECU', p.os_WAC - ((os_total_facevalue / os_total_quantity) + Nvl(Decode(alm.description, 'Irregular Redemption', premium, 'Irregular Cashflows', premium, REDEMPTION_PREMIUM), 0)), 0) premium_val, alm.TYPE, alm.REPORTING_ASSET_CLASS, alm.INTERESTMODE, alm.INTEREST, alm.ISSUER, p.os_issuername, (To_Date(alm.enddate) - To_Date('<%-ASONDATE%>')) residual, alm.ISIN_FACEVALUE, Nvl(Round((p.os_facevalue / decode(alm.isin_facevalue, 0, 1, alm.isin_facevalue)), 12), 0) ISIN_QTY, alm.isino_code isin, alm.CURRENCY, alm.description cashflow_type, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN To_Date('') ELSE ENDDATE END maturity, p.asset, sectorname sector, industryname industry, alm.category_subtype MIS_CATEGORY_NAME, p.portfolio portcode, p.pos_bookid bookid, p.pos_subsidiarycode SUBSIDIARYCODE, nvl(newmtmmethod, decode(product, 'SECU', 'Interpolation', 'Swaps')) mtmmethod, 'Securitywise' viewdata, os_workflow workflow, alm.contractcode, p.asset assetclass, 'dealsymbol.symbol' subproduct, alm.INTERESTDIRECTION, alm.DISCOUNTED, alm.contractdesc PRODUCT_DESCRIPTION, p.os_total_quantity OUTSTANDINGAMT, p.os_total_quantity OSQUANTITY, p.product PRODUCT_CODE, alm.COUPONAT, alm.DISCOUNTCURVE, alm.DAYCOUNT, alm.FRN_COMPOUNDING, alm.SETTLEMENTCONV, alm.MARKUP, alm.NOTIONALSTEPRULE, alm.RESETCALN, alm.SPREADCOMPOUNDING, alm.BENCHMARKID, alm.FRN_RESET_UNIT, alm.COUPYEAR, alm.CALCULATIONPERIOD, alm.RESETCALCTYPE, alm.FRN_RESETTYPE, alm.FRN_FLR, alm.FRN_CAP, alm.BEGN_STUB, alm.BEGN_STUBDATE, alm.BEGN_STUBIN, alm.BEGN_REFERENCEBENCHMARK, alm.BEGN_STUBVALUE, alm.END_STUB, alm.END_STUBDATE, alm.END_STUBIN, alm.END_REFERENCEBENCHMARK, alm.END_STUBVALUE, alm.ONMONTHENDS, alm.SHUT_PERIOD, alm.EOMADHERENCE, alm.CAPS, alm.FLOORS, alm.RANGEBARRIERS, alm.DESCRIPTION, alm.ENDDATE MATDATE, alm.STARTDATE, alm.ENDDATE, alm.INCLUDEIPDATE, alm.REDEMPTION_PREMIUM, alm.HEDGEON, alm.RATING1, p.os_osunit OSUNIT, alm.CP_EOM_CURRENTDATE, alm.DEPOSITORY_ID, alm.INCLUDE_LAST_IP_DATE, alm.CP_INCLUDE_ALL_IP_DATE, alm.CP_INCLUDE_IP_DATE, alm.INCLUDE_ALL_IP_DATE, p.event TRANSACTION_TYPE_CODE, 'NA' SELECTIONFLAG, alm.INT_ACC_IPDATE, nvl(exchangerate.mid, 1) exchrate, alm.newuploadkey uploadkey, '' EVENT, alm.ACCOUNTNO, alm.BANKCODE, alm.EARLYTERMINATION, alm.CANCELLABLE, alm.SPOTDATE, alm.RESETDATE, alm.FRN_RESET, alm.FRN_COMPOUNDING_TYPE, ALM.FRN, alm.YIELD_TYPE, alm.UNADJUSTEDENDDATE, alm.TRADEDATE, decode(Lower(p.os_workflow), 'security', decode(description, 'Discounted', 'Accretion', 'Ammortization'), 'NA') RESULT_FOR, alm.MANUAL_CASHFLOW, p.posamt_groupcurr GROUPCURR_CLEAR_AMT, p.POSAMT_GROUPCURR, p.GLOBALCURR, p.POSAMT_GLOBALCURR, posamt_globalcurr GLOBALCURR_CLEAR_AMT, p.GROUPCURR, p.LOCALCURR, p.POSAMT_LCY, posamt_lcy LCY_CLEAR_AMT, p.os_total_facevalue FACEVALUE, p.SYMBOL, alm.NPI_STATUS, alm.NPI_EFFECTIVE_DATE, alm.LISTED, p.os_clear_qty CLEAR_QTY, p.os_bookvalue pos_bookvalue, p.os_cl_facevalue CLEARFACEVALUE, p.os_cl_bookvalue CLEAR_BOOKVALUE, Decode(Upper(listed), 'TRUE', 1, 'FALSE', 0) listingstatus, Decode(Upper(p.os_workflow), 'FUTURES', Decode(Sign(p.POS_BOOKVALUE), - 1, 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND'), os_HOLDING) HOLDINGTYPE, To_Date(enddate) - To_Date('<%-ASONDATE%>') RES_MATURITY, alm.ISSUER_GROUP, alm.CAR_PERC, alm.NETWORTH, alm.illiquid LIQUIDITYSTATUS, alm.ISSUER_RATING, alm.ISSUER_GRP_RATING, alm.REGULATORY_CATEGORY, alm.RATED_AMOUNT, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN 0 ELSE Round((To_Date(enddate) - To_Date('<%-ASONDATE%>')) / 365, 2) END AS RESIDUAL_IN_YRS, Decode(listed, 'True', 'Listed', 'False', 'UnListed', listed) LISTING_CATEGORY, alm.sec_remarks DEAL_TYPE, p.os_holding HOLDINGFOROPTM, (nvl(p.os_total_bookvalue, 0) * alm.interestdirection) NET_MM_BORROWING, alm.SEC_DEAL_LOC, CASE WHEN p.os_workflow = 'Options' AND To_Date('<%-ASONDATE%>', 'dd/MM/yyyy') >= To_Date(ENDDATE, 'dd/MM/yyyy') THEN 'True' ELSE 'False' END OPTREDEM, Decode(p.os_holding, 'SECURITY IN SHORT', nvl(p.os_total_facevalue, 0), nvl(p.os_total_facevalue, 0) * - 1) net_short_position, to_date('', 'dd/MM/yyyy') LASTIPDATE, to_date('', 'dd/MM/yyyy') IPSTARTDATE, to_date('', 'dd/MM/yyyy') NEXTINTDATE, 0 INFLATION_ADJ_FACE_VALUE, 0 INDEX_RATIO, 0 INFLATION_ADJ_CL_FACE_VALUE, Nvl(secaccrual.taxrate, 0) TAXRATE, Nvl(secaccrual.GROSSAMT, 0) GROSSAMT, Nvl(secaccrual.TAXAMT, 0) TAXAMT, decode(product, 'IRSC', '8', 'LOAN', '6') WORKFLOWCODE, '' LASTISSUEDATE, '' NEXTRESETDATE, To_Date('<%-ASONDATE%>') || p.symbol || p.os_subsidiaryname || p.os_bookname || p.os_portfolio || p.os_holding eventkey, (CASE WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') ELSE 0 END) NOTIFIED_AMOUNT, alm.payment_mode PAYMENT_MODE, notch RATING_NOTCH, p.os_issuername issuername, mtmprice price, p.
                            os_yield YIELD, alm.mm_workflow, pm.isconstituent isconstituent, 'Trade' next_action
                        FROM positions p, portmast pm, (
                            SELECT *
                            FROM swapaccruals
                            WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND accrualdate = (
                                SELECT Max(accrualdate) accrualdate
                                FROM swapaccruals
                                WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND trunc(accrualdate) = to_date('<%-ASONDATE%>')
                                )
                            ) SecAccrual, (
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(MTM_WORKFLOW, 'Options', CASE WHEN holding_type = 'Short Call' OR holding_type = 'Short Put' THEN 'SECURITY IN HAND - SHORT' WHEN holding_type = 'Long Call' OR holding_type = 'Long Put' THEN 'SECURITY IN HAND' ELSE holding_type END, holding_type) holding_type
                            FROM (
                                SELECT SECURITYSYMBOL, MTMDATE, MTMVALUE, MTMMETHOD, NETACCRUALS, NETACCRUALSPV, CONTRACTCODE, ENTRYTYPE, PV01, CREDITEXPOSURE, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, SYSTEMVALUE, REMARKS, DELTA, GAMMA, VEGA, THETA, RHO_CURR1, RHO_CURR2, MARGIN, MTMGLOBAL, MTMGROUP, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTM_ASSETCLASS, MTMPRICE, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, MTM_VIEWDATA, MTMYIELD, CONVEXITY, MTM_BOOKVALUE, MTM_WORKFLOW, MTM_OPTIONTYPE, DEALBUCKET, PV_FACTOR, REVISED_PL, INTERPOLATED_BENCHMARK_RATE, SPOT_MTMRATE, SPOT_MTMAMOUNT, SPOT_MTMPL, RECORD_ID, HOLDING_TYPE
                                FROM mtmvalues
								WHERE mtm_product IN ('Security', 'Equity', 'Mutual Funds', 'Options', 'Alternative Investment') 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                )
                    
                            UNION ALL
                    
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(holding_type, 'Short Futures', 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND') holding_type
                            FROM (
                                SELECT contractcode SECURITYSYMBOL, MTMDATE, 0 MTMVALUE, '' MTMMETHOD, 0 NETACCRUALS, 0 NETACCRUALSPV, CONTRACTCODE, '' ENTRYTYPE, 0 PV01, 0 CREDITEXPOSURE, 0 MTMEXCHRATE, 0 MTMLCY, 0 DURATION, 0 MODIFIEDDURATION, 0 SYSTEMVALUE, '' REMARKS, 0 DELTA, 0 GAMMA, 0 VEGA, 0 THETA, 0 RHO_CURR1, 0 RHO_CURR2, 0 MARGIN, '' MTMGLOBAL, '' MTMGROUP, '' MTMGLOBALCURR, '' MTMGROUPCURR, '' MTMLCYCURR, MTM_ASSETCLASS, Avg(MTMPRICE) MTMPRICE, 0 MTMGLOBALRATE, 0 MTMGROUPRATE, 0 MTMLCYRATE, 0 MTMPL, 0 MTMPLLCY, 0 MTMPLGLOBAL, 0 MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, '' MTM_VIEWDATA, 0 MTMYIELD, 0 CONVEXITY, 0 MTM_BOOKVALUE, '' MTM_WORKFLOW, '' MTM_OPTIONTYPE, '' DEALBUCKET, 0 PV_FACTOR, 0 REVISED_PL, 0 INTERPOLATED_BENCHMARK_RATE, 0 SPOT_MTMRATE, 0 SPOT_MTMAMOUNT, 0 SPOT_MTMPL, 0 RECORD_ID, holding_type
                                FROM mtmvalues
								WHERE mtm_product = 'Futures' 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                GROUP BY contractcode, mtm_subsidiary, mtm_bookid, mtm_assetclass, mtm_product, mtm_portfolio, mtm_product, mtm_curr, MTMDATE, holding_type
                                )
                            ) secmtm, holding_wac hw, (
                            SELECT *
                            FROM ammortization
                            WHERE (ammortdate, AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL) IN (
                                SELECT Max(ammortdate), AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                FROM ammortization
                                WHERE trunc(AMMORTDATE) <= to_date( '<%-ASONDATE%>')
                                GROUP BY AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                )
                            ) SecAmmort, (
                            SELECT contractcode, max(ammortdate) LastAmmortDate
                            FROM ammortization
                            WHERE ammortdate <= '<%-ASONDATE%>'
                            GROUP BY contractcode
                            ) LastAmmortDate, allmasters alm, (
                            SELECT *
                            FROM spotratesources sp, exchangerate e
                            WHERE trunc(exchangedate) = to_date('<%-ASONDATE%>', 'dd/MM/yyyy') AND e.source = sp.spotratesources_id
                            ) ExchangeRate, (
                            SELECT Sum(premium) premium, securitysymbol
                            FROM securityevents
                            WHERE ACTUALDATE >= '<%-ASONDATE%>' AND EVENTDESCRIPTION = 'Partial Redemption'
                            GROUP BY securitysymbol
                            ) premium
                        WHERE nvl(lastdeal, 0) = 1 AND p.portfolio = pm.portcode AND Nvl(deletionstatus, 'ND') = 'ND' AND alm.securitysymbol(+) = p.symbol AND lower(product) NOT IN ('cash') AND lower(asset) IN ('interest rate', 'security', 'equity', 'mutual funds', 'currency', 'alternative investment') AND p.holding = hw.ORIGINAL_HOLDING_TYPE(+) AND p.symbol = SecAccrual.contractcode(+) AND p.symbol = SecMTM.contractcode(+) AND p.os_subsidiaryname = SecMTM.mtm_subsidiary(+) AND p.os_bookname = SecMTM.mtm_bookid(+) AND p.asset = SecMTM.mtm_assetclass(+) AND p.os_workflow = SecMTM.mtm_product(+) AND p.os_portfolio = SecMTM.mtm_portfolio(+) AND p.os_holding = SecMTM.holding_type(+) AND p.symbol = SecAmmort.contractcode(+) AND p.os_subsidiaryname = SecAmmort.amrt_subsidiaryname(+) AND p.os_bookname = secammort.amrt_bookname(+) AND p.os_portfolio = secammort.amrt_portfolio(+) AND LastAmmortDate.contractcode(+) = p.symbol AND p.os_subsidiaryname = SecAccrual.acc_subsidiary(+) AND p.os_bookname = SecAccrual.acc_bookid(+) AND p.asset = SecAccrual.acc_assetclass(+) AND p.os_workflow = SecAccrual.acc_product(+) AND p.os_portfolio = SecAccrual.acc_portfolio(+) AND alm.Currency = ExchangeRate.base(+) AND ExchangeRate.derive(+) = 'INR' AND PREMIUM.securitysymbol(+) = alm.securitysymbol AND p.os_total_quantity > 0
                        )
                        WHERE 1 = 1 AND holding = 'SECURITY IN HAND' and asset_class in ('SLR','NSLR')  AND bookid = '2' AND SECURITYSYMBOL = '<%-SECURITYSYMBOL%>' AND SUBSIDIARYCODE = '<%-SUBSIDIARYCODE%>' AND BOOKID = '<%-BOOKID%>' AND PORTCODE = '<%-PORTCODE%>'
            `,
                "filter": ["ASONDATE","SUBSIDIARYCODE","BOOKID","PORTCODE","SECURITYSYMBOL"]
            },
            "delete": {
                "source": "",
                "filter": ["ASONDATE","SUBSIDIARYCODE","BOOKID","PORTCODE","SECURITYSYMBOL","HOLDING"]
            },
        },
		{
			"collectionName":"fis_deallisting",
			"notificationFilter":[],
			"create":{
			"source":`SELECT mainqry.*, dc.total_charge, dc.charge, Decode(Upper(Nvl(AUTHORISATIONSTATUS, 'NA')), 'NA', 'Authorise', 'A', 'Confirm', '') next_action
					FROM (
						SELECT SUBSIDIARYNAME, BOOKNAME, PORTFOLIO, PRODUCT, SUBPRODUCT, currency CURR, Decode(TRANSACTIONTYPE, 'Split In', 'Split', TRANSACTIONTYPE) TRANSACTIONTYPE, Decode(TRANSACTION_TYPE, 'Split In', 'Split', TRANSACTION_TYPE) TRANSACTION_TYPE, CONTRACTCODE, Decode(product, 'Swaps', SECURITYSYMBOL, CONTRACTCODE) CONTRACT_ID, TRADEDATE, To_Char(TRADEDATE, 'dd/MM/yyyy hh24:mi:ss') AS TRANSACTIONDATETIME, VALUEDATE, MATDATE, TRADERID, COUNTERPARTY, CATEGORY, '' TRANS_CATEGORY, SECURITY_DESC, PRINCIPAL, 0 WITHHOLDINGTAX, AMOUNT_LEG1, QTY_LEG1, PRICE_LEG1, 0 GROSSAMT, YIELD_LEG1, 0 ACCR_INTR_PU, ACCRUEDINTEREST, CONSIDERATION, POST_CONSIDERATION, POST_ACC_INTEREST_LEG1, POST_ACCRUEDINTEREST, SL_YIELD, SL_PRICE, SL_ACC_INT, contract_wac wac, contract_revalwac revalwac, CASE WHEN TRANSACTIONTYPECODE IN ('112', '127', '108', '204', '161', '104', '391') THEN (nvl(price_leg1, 0) - nvl(contract_wac, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('101') THEN (nvl(contract_wac, 0) - nvl(price_leg1, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328') THEN SLB_PROFIT_LOSS ELSE 0 END profit_loss, REPO_RATE, REFERENCE_NO REFCONTRACTNO, YIELDTO, BANKCURR, AGENCY1 AGENCY1NAME, BANKNAME1, ACCOUNT1, AGENCY2 AGENCY2NAME, BANKNAME2, ACCOUNT2, THEIR_AGENCY1 THEIR_AGENCY1NAME, '' THEIR_BANKNAME1, THEIR_ACCOUNT1, '' THEIR_AGENCY2NAME, THEIR_BANKNAME2, THEIR_ACCOUNT2, LOCALCURR, LOCALCURRRATE, LOCALCURRAMT, GLOBALCURR, GLOBALCURRRATE, GLOBALCURRAMT, GROUPCURR, GROUPCURRAMT, GROUPCURRRATE, 0 WITHHOLDINGTAX_PER, 0 EFFECTIVERATE_PER, 0 EFFECTIVERATE_AMT, 0 UPFRONTFEES_PER, 0 UPFRONTFEES_AMT, 0 OTHERS_PER, 0 OTHERS_AMT, 0 COVERRATE, 0 PREMIA_PER, '' PREMIA, 0 STAMPDUTY, SECURED, '' NEGOTIABLE, BROKERAGEDATE, 0 BROKERAGETYPEVALUE, '' BROKERNAME, BROKERCODE, BROKERAGE, BROKERAGE_CURR, '' BROKERAGETYPE, REMARKS, 0 SERVICETAXTYPE, 0 SERVICETAXRATE, 0 SERVICETAXAMT, 0 ACCOUNTCHARGE, 0 NETRATEFLAG, nvl(authorisationstatus, 'NA') AUTHORISATIONSTATUSCODE, AUTHORISATIONSTATUS, AUTHSTATUSBY, AUTHSTATUSON, AUTHSTATUSREMARKS, CONFIRMATIONSTATUS, CONFSTATUSBY, CONFSTATUSON, CONFSTATUSREMARKS, TRANSACTIONTYPE TRANSTYPE, '' CONTRACTTEMPLATE, DEALNO, GROUPDEALNO, 0 PAY_WASHRATE, '' HEDGEON, NOTIONALSTEPRULE, 0 CAPS, 0 FLOORS, RANGEBARRIERS, BRANCH, DEALTYPE, OPTIONAL01, OPTIONAL02, OPTIONAL03, OPTIONAL04, OPTIONAL05, '' SPOTRATESOURCES_ID, PRODUCT_TYPE, 0 EXCHANGE_RATE, 0 WASHRATE, '' SETTLEMENT, 0 STRATEGYID, SUBPRODUCT PRODUCT_CODE, CONTRACTSTRUCTURE, WORKFLOW, '' INITIAL_EXCHANGE, '' CASHFLOWGENERATION, '' EARLYTERMINATION, BOOKID, deal_location_code, DEPOSITORY, '' DELIVERY_MODE, DELIVERY_MODE_CODE, EXCHANGECODE, PORTCODE, TRANSACTIONTYPECODE TRANSACTION_TYPE_CODE, PAYMENTMODE1, BANKCODE1, PAYMENTMODE2, BANKCODE2, '' CP_PAYMENTMODE1, '' CP_BANKCODE1, SUBSIDIARYCODE, COUNTERCODE, '' COUNTERPARTY_DEALER, ASSETCLASS, currency CONSCURRENCY, NOSTRO_REF_NO, NOSTRODATE, REFERENCE_NO, RESTRUCTURE_CONTRACTCODE, ROLLOVER_CONTRACTCODE, BRANCH_REF_NO, CURRNAME, '' BORROW_TERM, BENCHMARKID, 0 PARVALUE, 0 OFFERINGPRICE, '' INTERESTMODE, INTEREST, MARKUP, DAYCOUNT, INTERESTDIRECTION, 0 PAYMENTFREQ, 0 RESETFREQ, '' RESETDATE, DISCOUNTCURVE, 0 COUPYEAR, DEALSOURCE, AMOUNT, QUANTITY, RATE, PRODUCTDESC, BROKER_NAME, BROKERAGEBANKCODE, BROKERAGEBANKNAME, BROKERAGE_AC, '' LOAN_DESCRIPTION, FACEVALUE, ISINO_CODE, SECURITYSYMBOL, 0 INTEREST_TAX_CAT_CODE, PRODUCT1, PCHARGERATE, PCHARGEAMT, 0 XIRRVALUE, '' CUSTOM_CONTRACTCODE, 0 TERMVALUE, '' ACCOUNTINGTYPE, '' REPAY_COMMENCEMENT_DATE, 0 LRN_NUMBER, 0 CUSTOM_PENALTYRATE, 0 LGBG_NUMBER, '' SUPPLIER, '' VESSEL_NAME, 0 CHARGES_PAID_TILL, '' LATEST_DATE_OF_SHIPMENT, '' PAYMENT_TERMS, 0 ORIGINAL_AMOUNT, 0 COMMISSION_PERCENTAGE, REMARKS REMARK, DEAL_REMARKS, EMAIL_STATUS, AUID, MATDATE MATURITY, INDEX_RATIO, Nvl(ORDER_STATUS, 'Order Pending') ORDER_STATUS, To_Char(order_conf_date, 'dd/MM/yyyy hh24:mi:ss') AS order_conf_date, order_conf_by, Nvl(RECON_STATUS, 'Unreconciled') RECON_STATUS, decode(upper(RECON_STATUS), 'RECONCILED', '', RECON_REMARKS) RECON_REMARKS, FD_NUMBER, FD_INTEREST_RATE, FD_TENOR, FD_AMOUNT, FD_AMOUNT_PER, (
								SELECT descr
								FROM default_static_table
								WHERE code = '365' AND module_name = 'asba_fd_daycount'
								) FD_DAY_COUNT, FD_INTEREST, decode(Nvl(final_price, 1), 0, 'F', 'T') FINAL_PRICE, issuer, exchange, netrate, netamount, bsr_code, lotsize, noofcontracts, underlying1 derivative_underlying, sl_consideration, active_status, nominal_price, deal_purpose, Nvl(reporting_asset_class, ASSETCLASS) REPORTING_ASSET_CLASS, bsrnumber, dept_name, Nvl(stt, 0) stt, brokerage_amount, dealerbook, iobj, sectorname, payment_mode, 'TRUE' display_auth_info, Upper('TRUE') printdealticket, primarymarkettype, acc_interest, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, Theirbankname, country, settleflag
						FROM (
							SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, Decode(Lower(assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', assetclass), assetclass) assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode, brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, bsr_code, netrate, netamount, lotsize, noofcontracts, underlying1, sl_consideration, active_status, nominal_price, deal_purpose, reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, sectorname, payment_mode, primarymarkettype, settleflag
							FROM (
								SELECT s.*, workflow, t.assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2, their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, dealno posdealno, portfolio Pos_portfolio, traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue, Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, osContract.depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, osContract.branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, cm8.bsr_code bsr_code, netrate, netamount, oscontract.lotsize, oscontract.noofcontracts, underlying1, sl_consideration, oscontract.active_status active_status, nominal_price, deal_purpose, ds.reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, oscontract.sectorname, oscontract.payment_mode, primarymarkettype, oscontract.settleflag settleflag
								FROM (
									SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amt1 amount_leg1, amt1 qty_leg1, strikerate price_leg1, 0 yield_leg1, amt2 principal, '' deal_location_code, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag
									FROM fxmaster
									WHERE nvl(deletionstatus, 'ND') <> 'D' AND contractcode = '<%-CONTRACTCODE%>'
									
									UNION ALL
									
									SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, c.portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, CASE WHEN transaction_type_code IN (90, 91, 329, 330) THEN sl_date ELSE enddate END matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
													SELECT upper(PARAMVALUE)
													FROM params
													WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
													), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
														SELECT DISTINCT optional02
														FROM contractmaster
														WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
														) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security', s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, nvl(sl_consideration, 0), 1 active_status, nominal_price, descr deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
									FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, dealerwiseprofitability dl, (
											SELECT compcode, compname
											FROM companymaster
											) cm, (
											SELECT compcode, compname, is_taxable
											FROM companymaster
											) cm1, (
											SELECT c.contractcode ccode, c1.loan_description loan_desc
											FROM contractmaster c, contractmaster c1
											WHERE c.refcontractno = c1.contractcode
											) contract, (
											SELECT code, descr, static_value
											FROM default_static_table
											WHERE MODULE_NAME = 'REVAL_PURPOSE'
											ORDER BY To_Number(static_value)
											) d
									WHERE c.contractcode = contract.ccode(+) AND c.purpose_code = d.code(+) AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+) AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324) AND dl.portcode(+) = c.portcode AND To_Char(dl.code(+)) = To_Char(c.dealerbook) AND dl.asset_class_code(+) = 2 AND c.contractcode = '<%-CONTRACTCODE%>'
									
									UNION ALL
									
									SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Mutual Fund' product, securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(type_name), 'CLOSE ENDED', matdate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, scheme_code securitysymbol, market product_type, mf.scheme_name security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_number isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, descr deal_purpose, '' bsrnumber, dept_name, 0 stt, 0 BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, mf.iobj, sc.sectorname, payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
									FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig, sectormaster sc, dealerwiseprofitability dl, paymentmode pm, (
											SELECT code, descr, static_value
											FROM default_static_table
											WHERE MODULE_NAME = 'REVAL_PURPOSE'
											ORDER BY To_Number(static_value)
											) d
									WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1)) AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+) AND ig.sector = sc.SECTORCODE(+) AND mt.purpose_code = d.code(+) AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 5 AND pm.pay_mode_code = mt.payment_mode_code AND contractcode = '<%-CONTRACTCODE%>'
									
									UNION ALL
									
									SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Equity' product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, mt.contractcode contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.scrip_code securitysymbol, market product_type, mf.scrip_name security_desc, subproduct underlying, mt.brokercode brokercode, brokeragedate, brokerage_curr, dealcharges.BROKERAGE_AMOUNT brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_no isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, Nvl(dealcharges.net_rate, Nvl(mt.netrate, 0)) netrate, Nvl(dealcharges.net_amount, 0) netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, mf.active_status, 0 nominal_price, '' deal_purpose, bm.bsrnumber, dept_name, dealcharges.stt stt, dealcharges.BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
									FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm, companymaster ig, brokerage_master bm, dealerwiseprofitability dl, (
											SELECT CONTRACTCODE, STT, BROKERAGE_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN (((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) + STT) WHEN TRANSACTION_TYPE_CODE = 305 THEN (((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) - STT) WHEN TRANSACTION_TYPE_CODE = 192 THEN ((PRICE_LEG1 * QTY_LEG1) + (BROKERAGE_AMOUNT + STT)) WHEN TRANSACTION_TYPE_CODE = 204 THEN ((PRICE_LEG1 * QTY_LEG1) - (BROKERAGE_AMOUNT + STT)) END AS NET_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN ((((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 WHEN TRANSACTION_TYPE_CODE = 305 THEN ((((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 END AS NET_RATE, (BROKERAGE_AMOUNT / QTY_LEG1) B_UNIT
											FROM (
												SELECT CONTRACTCODE, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_STT_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', CHARGE_AMOUNT, 'STT_EQ_PUR', charge_amount, 'STT_EQ_SALE', charge_amount, 0)) AS STT, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_SALE', CHARGE_AMOUNT, 'BROKER_CHARGE_EQ_PUR', charge_amount, 'BROKER_CHARGE_EQ_SALE', charge_amount, 0)) AS BROKERAGE_AMOUNT, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
												FROM (
													SELECT dc.CONTRACTCODE, dc.EVENT_CHARGE_CODE, dc.CHARGE_AMOUNT, MT.QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE, p.paramname, p.paramvalue
													FROM DEAL_CHARGES DC, MUTUALFUND_TRANSACT MT, params p
													WHERE DC.CONTRACTCODE = MT.CONTRACTCODE AND p.paramvalue(+) = dc.event_charge_code AND p.paramname IN ('BROKER_CHARGE_EVENT_ORDER_STT_PUR', 'BROKER_CHARGE_EVENT_ORDER_PUR', 'BROKER_CHARGE_EVENT_ORDER_SALE', 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', 'STT_EQ_PUR', 'STT_EQ_SALE', 'BROKER_CHARGE_EQ_PUR', 'BROKER_CHARGE_EQ_SALE') AND EVENT_CHARGE_CODE IN (p.paramvalue)
													)
												GROUP BY CONTRACTCODE, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
												)
											) dealcharges
									WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND Lower(assetclass) = 'equity' AND nvl(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND mt.transaction_type_code NOT IN (207) AND dealcharges.contractcode(+) = mt.contractcode AND mf.issuer = ig.compcode(+) AND mt.brokercode = bm.brokercode(+) AND mt.exchangecode = bm.exchange_code(+) AND bm.asset_class_code(+) = 7 AND bm.BR_WORKFLOWCODE(+) = 27 AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 7 AND mt.contractcode = '<%-CONTRACTCODE%>'
									
									UNION ALL
									
									SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.profit_loss SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
									FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
											SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
											FROM equitymaster
											
											UNION ALL
											
											SELECT INDEX_NAME, INDEX_NAME, (
													SELECT compcode
													FROM companymaster
													WHERE compname = 'NONE' AND rownum = 1
													) ISSUER
											FROM index_master
											) eq, workflow ass, dealsymbol DE
									WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D' AND mt.contractcode = '<%-CONTRACTCODE%>'
									
									UNION ALL
									
									SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
									FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
									WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+) AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%') AND contractcode = '<%-CONTRACTCODE%>'
									
									UNION ALL
									
									SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, ird.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, ird.contractcode securitysymbol, 'SECONDARY' product_type, ird.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, c.depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, c.branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, c.lotsize, c.noofcontracts, c.underlying underlying1, 0 sl_consideration, to_number(ird.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
									FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
									WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND' AND c.contractcode = '<%-CONTRACTCODE%>'
									
									UNION ALL
									
									SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
									FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
									WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow AND mt.contractcode = '<%-CONTRACTCODE%>'
									
									UNION ALL
									
									SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(OPENENDED), 'YES', maturitydate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, alt.isinnumber isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, decode(nvl(qty_leg1, 0), 0, ai_quantity, qty_leg1) qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
									FROM mutualfund_transact mt, alternateinvestment alt, (
											SELECT marketsymbol, symbol
											FROM dealsymbol
											WHERE transactiontypecode = '1099999999'
											) d
									WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D' AND contractcode = '<%-CONTRACTCODE%>'
									) oscontract, (
										SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
										FROM assetclass a, workflow w, transactiontype t
										WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
										) t, (
										SELECT subsidiaryname, bookname, portname portfolio, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
										FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
										WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
										) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
								WHERE 1 = 1 AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
								)
							WHERE 1 = 1
							)
						ORDER BY dealno DESC
						) mainqry, (
							SELECT '[' || chargelist || ']' charge, contractcode, total_charge
							FROM (
								SELECT LISTAGG(charges, ',') WITHIN
								GROUP (
										ORDER BY contractcode
										) AS chargelist, contractcode, Sum(charge_amount) total_charge
								FROM (
									SELECT '{"name":"' || event_charge_code || '","value":"' || charge_amount || '"}' charges, contractcode, charge_amount
									FROM deal_charges
									WHERE contractcode = '<%-CONTRACTCODE%>'
									)
								GROUP BY contractcode
								)
							) dc
					WHERE 1 = 1 AND transaction_type_code NOT IN (304, 305, 382, 383) AND mainqry.contractcode = dc.contractcode(+) and upper(nvl(confirmationstatus,'UNCONFIRMED')) = 'UNCONFIRMED'
			`,
        "filter":["CONTRACTCODE"]
        },
		"refresh":{
			"source":`
				SELECT mainqry.*, dc.total_charge, dc.charge, Decode(Upper(Nvl(AUTHORISATIONSTATUS, 'NA')), 'NA', 'Authorise', 'A', 'Confirm', '') next_action
				FROM (
					SELECT SUBSIDIARYNAME, BOOKNAME, PORTFOLIO, PRODUCT, SUBPRODUCT, currency CURR, Decode(TRANSACTIONTYPE, 'Split In', 'Split', TRANSACTIONTYPE) TRANSACTIONTYPE, Decode(TRANSACTION_TYPE, 'Split In', 'Split', TRANSACTION_TYPE) TRANSACTION_TYPE, CONTRACTCODE, Decode(product, 'Swaps', SECURITYSYMBOL, CONTRACTCODE) CONTRACT_ID, TRADEDATE, To_Char(TRADEDATE, 'dd/MM/yyyy hh24:mi:ss') AS TRANSACTIONDATETIME, VALUEDATE, MATDATE, TRADERID, COUNTERPARTY, CATEGORY, '' TRANS_CATEGORY, SECURITY_DESC, PRINCIPAL, 0 WITHHOLDINGTAX, AMOUNT_LEG1, QTY_LEG1, PRICE_LEG1, 0 GROSSAMT, YIELD_LEG1, 0 ACCR_INTR_PU, ACCRUEDINTEREST, CONSIDERATION, POST_CONSIDERATION, POST_ACC_INTEREST_LEG1, POST_ACCRUEDINTEREST, SL_YIELD, SL_PRICE, SL_ACC_INT, contract_wac wac, contract_revalwac revalwac, CASE WHEN TRANSACTIONTYPECODE IN ('112', '127', '108', '204', '161', '104', '391') THEN (nvl(price_leg1, 0) - nvl(contract_wac, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('101') THEN (nvl(contract_wac, 0) - nvl(price_leg1, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328') THEN SLB_PROFIT_LOSS ELSE 0 END profit_loss, REPO_RATE, REFERENCE_NO REFCONTRACTNO, YIELDTO, BANKCURR, AGENCY1 AGENCY1NAME, BANKNAME1, ACCOUNT1, AGENCY2 AGENCY2NAME, BANKNAME2, ACCOUNT2, THEIR_AGENCY1 THEIR_AGENCY1NAME, '' THEIR_BANKNAME1, THEIR_ACCOUNT1, '' THEIR_AGENCY2NAME, THEIR_BANKNAME2, THEIR_ACCOUNT2, LOCALCURR, LOCALCURRRATE, LOCALCURRAMT, GLOBALCURR, GLOBALCURRRATE, GLOBALCURRAMT, GROUPCURR, GROUPCURRAMT, GROUPCURRRATE, 0 WITHHOLDINGTAX_PER, 0 EFFECTIVERATE_PER, 0 EFFECTIVERATE_AMT, 0 UPFRONTFEES_PER, 0 UPFRONTFEES_AMT, 0 OTHERS_PER, 0 OTHERS_AMT, 0 COVERRATE, 0 PREMIA_PER, '' PREMIA, 0 STAMPDUTY, SECURED, '' NEGOTIABLE, BROKERAGEDATE, 0 BROKERAGETYPEVALUE, '' BROKERNAME, BROKERCODE, BROKERAGE, BROKERAGE_CURR, '' BROKERAGETYPE, REMARKS, 0 SERVICETAXTYPE, 0 SERVICETAXRATE, 0 SERVICETAXAMT, 0 ACCOUNTCHARGE, 0 NETRATEFLAG, nvl(authorisationstatus, 'NA') AUTHORISATIONSTATUSCODE, AUTHORISATIONSTATUS, AUTHSTATUSBY, AUTHSTATUSON, AUTHSTATUSREMARKS, CONFIRMATIONSTATUS, CONFSTATUSBY, CONFSTATUSON, CONFSTATUSREMARKS, TRANSACTIONTYPE TRANSTYPE, '' CONTRACTTEMPLATE, DEALNO, GROUPDEALNO, 0 PAY_WASHRATE, '' HEDGEON, NOTIONALSTEPRULE, 0 CAPS, 0 FLOORS, RANGEBARRIERS, BRANCH, DEALTYPE, OPTIONAL01, OPTIONAL02, OPTIONAL03, OPTIONAL04, OPTIONAL05, '' SPOTRATESOURCES_ID, PRODUCT_TYPE, 0 EXCHANGE_RATE, 0 WASHRATE, '' SETTLEMENT, 0 STRATEGYID, SUBPRODUCT PRODUCT_CODE, CONTRACTSTRUCTURE, WORKFLOW, '' INITIAL_EXCHANGE, '' CASHFLOWGENERATION, '' EARLYTERMINATION, BOOKID, deal_location_code, DEPOSITORY, '' DELIVERY_MODE, DELIVERY_MODE_CODE, EXCHANGECODE, PORTCODE, TRANSACTIONTYPECODE TRANSACTION_TYPE_CODE, PAYMENTMODE1, BANKCODE1, PAYMENTMODE2, BANKCODE2, '' CP_PAYMENTMODE1, '' CP_BANKCODE1, SUBSIDIARYCODE, COUNTERCODE, '' COUNTERPARTY_DEALER, ASSETCLASS, currency CONSCURRENCY, NOSTRO_REF_NO, NOSTRODATE, REFERENCE_NO, RESTRUCTURE_CONTRACTCODE, ROLLOVER_CONTRACTCODE, BRANCH_REF_NO, CURRNAME, '' BORROW_TERM, BENCHMARKID, 0 PARVALUE, 0 OFFERINGPRICE, '' INTERESTMODE, INTEREST, MARKUP, DAYCOUNT, INTERESTDIRECTION, 0 PAYMENTFREQ, 0 RESETFREQ, '' RESETDATE, DISCOUNTCURVE, 0 COUPYEAR, DEALSOURCE, AMOUNT, QUANTITY, RATE, PRODUCTDESC, BROKER_NAME, BROKERAGEBANKCODE, BROKERAGEBANKNAME, BROKERAGE_AC, '' LOAN_DESCRIPTION, FACEVALUE, ISINO_CODE, SECURITYSYMBOL, 0 INTEREST_TAX_CAT_CODE, PRODUCT1, PCHARGERATE, PCHARGEAMT, 0 XIRRVALUE, '' CUSTOM_CONTRACTCODE, 0 TERMVALUE, '' ACCOUNTINGTYPE, '' REPAY_COMMENCEMENT_DATE, 0 LRN_NUMBER, 0 CUSTOM_PENALTYRATE, 0 LGBG_NUMBER, '' SUPPLIER, '' VESSEL_NAME, 0 CHARGES_PAID_TILL, '' LATEST_DATE_OF_SHIPMENT, '' PAYMENT_TERMS, 0 ORIGINAL_AMOUNT, 0 COMMISSION_PERCENTAGE, REMARKS REMARK, DEAL_REMARKS, EMAIL_STATUS, AUID, MATDATE MATURITY, INDEX_RATIO, Nvl(ORDER_STATUS, 'Order Pending') ORDER_STATUS, To_Char(order_conf_date, 'dd/MM/yyyy hh24:mi:ss') AS order_conf_date, order_conf_by, Nvl(RECON_STATUS, 'Unreconciled') RECON_STATUS, decode(upper(RECON_STATUS), 'RECONCILED', '', RECON_REMARKS) RECON_REMARKS, FD_NUMBER, FD_INTEREST_RATE, FD_TENOR, FD_AMOUNT, FD_AMOUNT_PER, (
							SELECT descr
							FROM default_static_table
							WHERE code = '365' AND module_name = 'asba_fd_daycount'
							) FD_DAY_COUNT, FD_INTEREST, decode(Nvl(final_price, 1), 0, 'F', 'T') FINAL_PRICE, issuer, exchange, netrate, netamount, bsr_code, lotsize, noofcontracts, underlying1 derivative_underlying, sl_consideration, active_status, nominal_price, deal_purpose, Nvl(reporting_asset_class, ASSETCLASS) REPORTING_ASSET_CLASS, bsrnumber, dept_name, Nvl(stt, 0) stt, brokerage_amount, dealerbook, iobj, sectorname, payment_mode, 'TRUE' display_auth_info, Upper('TRUE') printdealticket, primarymarkettype, acc_interest, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, Theirbankname, country, settleflag
					FROM (
						SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, Decode(Lower(assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', assetclass), assetclass) assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode, brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, bsr_code, netrate, netamount, lotsize, noofcontracts, underlying1, sl_consideration, active_status, nominal_price, deal_purpose, reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, sectorname, payment_mode, primarymarkettype, settleflag
						FROM (
							SELECT s.*, workflow, t.assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2, their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, dealno posdealno, portfolio Pos_portfolio, traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue, Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, osContract.depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, osContract.branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, cm8.bsr_code bsr_code, netrate, netamount, oscontract.lotsize, oscontract.noofcontracts, underlying1, sl_consideration, oscontract.active_status active_status, nominal_price, deal_purpose, ds.reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, oscontract.sectorname, oscontract.payment_mode, primarymarkettype, oscontract.settleflag settleflag
							FROM (
								SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amt1 amount_leg1, amt1 qty_leg1, strikerate price_leg1, 0 yield_leg1, amt2 principal, '' deal_location_code, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag
								FROM fxmaster
								WHERE nvl(deletionstatus, 'ND') <> 'D'
								
								UNION ALL
								
								SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, c.portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, CASE WHEN transaction_type_code IN (90, 91, 329, 330) THEN sl_date ELSE enddate END matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
												SELECT upper(PARAMVALUE)
												FROM params
												WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
												), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
													SELECT DISTINCT optional02
													FROM contractmaster
													WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
													) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security', s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, nvl(sl_consideration, 0), 1 active_status, nominal_price, descr deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, dealerwiseprofitability dl, (
										SELECT compcode, compname
										FROM companymaster
										) cm, (
										SELECT compcode, compname, is_taxable
										FROM companymaster
										) cm1, (
										SELECT c.contractcode ccode, c1.loan_description loan_desc
										FROM contractmaster c, contractmaster c1
										WHERE c.refcontractno = c1.contractcode
										) contract, (
										SELECT code, descr, static_value
										FROM default_static_table
										WHERE MODULE_NAME = 'REVAL_PURPOSE'
										ORDER BY To_Number(static_value)
										) d
								WHERE c.contractcode = contract.ccode(+) AND c.purpose_code = d.code(+) AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+) AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324) AND dl.portcode(+) = c.portcode AND To_Char(dl.code(+)) = To_Char(c.dealerbook) AND dl.asset_class_code(+) = 2
								
								UNION ALL
								
								SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Mutual Fund' product, securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(type_name), 'CLOSE ENDED', matdate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, scheme_code securitysymbol, market product_type, mf.scheme_name security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_number isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, descr deal_purpose, '' bsrnumber, dept_name, 0 stt, 0 BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, mf.iobj, sc.sectorname, payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig, sectormaster sc, dealerwiseprofitability dl, paymentmode pm, (
										SELECT code, descr, static_value
										FROM default_static_table
										WHERE MODULE_NAME = 'REVAL_PURPOSE'
										ORDER BY To_Number(static_value)
										) d
								WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1)) AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+) AND ig.sector = sc.SECTORCODE(+) AND mt.purpose_code = d.code(+) AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 5 AND pm.pay_mode_code = mt.payment_mode_code
								
								UNION ALL
								
								SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Equity' product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, mt.contractcode contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.scrip_code securitysymbol, market product_type, mf.scrip_name security_desc, subproduct underlying, mt.brokercode brokercode, brokeragedate, brokerage_curr, dealcharges.BROKERAGE_AMOUNT brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_no isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, Nvl(dealcharges.net_rate, Nvl(mt.netrate, 0)) netrate, Nvl(dealcharges.net_amount, 0) netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, mf.active_status, 0 nominal_price, '' deal_purpose, bm.bsrnumber, dept_name, dealcharges.stt stt, dealcharges.BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm, companymaster ig, brokerage_master bm, dealerwiseprofitability dl, (
										SELECT CONTRACTCODE, STT, BROKERAGE_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN (((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) + STT) WHEN TRANSACTION_TYPE_CODE = 305 THEN (((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) - STT) WHEN TRANSACTION_TYPE_CODE = 192 THEN ((PRICE_LEG1 * QTY_LEG1) + (BROKERAGE_AMOUNT + STT)) WHEN TRANSACTION_TYPE_CODE = 204 THEN ((PRICE_LEG1 * QTY_LEG1) - (BROKERAGE_AMOUNT + STT)) END AS NET_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN ((((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 WHEN TRANSACTION_TYPE_CODE = 305 THEN ((((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 END AS NET_RATE, (BROKERAGE_AMOUNT / QTY_LEG1) B_UNIT
										FROM (
											SELECT CONTRACTCODE, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_STT_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', CHARGE_AMOUNT, 'STT_EQ_PUR', charge_amount, 'STT_EQ_SALE', charge_amount, 0)) AS STT, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_SALE', CHARGE_AMOUNT, 'BROKER_CHARGE_EQ_PUR', charge_amount, 'BROKER_CHARGE_EQ_SALE', charge_amount, 0)) AS BROKERAGE_AMOUNT, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
											FROM (
												SELECT dc.CONTRACTCODE, dc.EVENT_CHARGE_CODE, dc.CHARGE_AMOUNT, MT.QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE, p.paramname, p.paramvalue
												FROM DEAL_CHARGES DC, MUTUALFUND_TRANSACT MT, params p
												WHERE DC.CONTRACTCODE = MT.CONTRACTCODE AND p.paramvalue(+) = dc.event_charge_code AND p.paramname IN ('BROKER_CHARGE_EVENT_ORDER_STT_PUR', 'BROKER_CHARGE_EVENT_ORDER_PUR', 'BROKER_CHARGE_EVENT_ORDER_SALE', 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', 'STT_EQ_PUR', 'STT_EQ_SALE', 'BROKER_CHARGE_EQ_PUR', 'BROKER_CHARGE_EQ_SALE') AND EVENT_CHARGE_CODE IN (p.paramvalue)
												)
											GROUP BY CONTRACTCODE, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
											)
										) dealcharges
								WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND Lower(assetclass) = 'equity' AND nvl(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND mt.transaction_type_code NOT IN (207) AND dealcharges.contractcode(+) = mt.contractcode AND mf.issuer = ig.compcode(+) AND mt.brokercode = bm.brokercode(+) AND mt.exchangecode = bm.exchange_code(+) AND bm.asset_class_code(+) = 7 AND bm.BR_WORKFLOWCODE(+) = 27 AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 7
								
								UNION ALL
								
								SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.profit_loss SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
										SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
										FROM equitymaster
										
										UNION ALL
										
										SELECT INDEX_NAME, INDEX_NAME, (
												SELECT compcode
												FROM companymaster
												WHERE compname = 'NONE' AND rownum = 1
												) ISSUER
										FROM index_master
										) eq, workflow ass, dealsymbol DE
								WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D'
								
								UNION ALL
								
								SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
								WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+) AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%')
								
								UNION ALL
								
								SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, ird.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, ird.contractcode securitysymbol, 'SECONDARY' product_type, ird.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, c.depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, c.branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, c.lotsize, c.noofcontracts, c.underlying underlying1, 0 sl_consideration, to_number(ird.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
								WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND'
								
								UNION ALL
								
								SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
								WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow
								
								UNION ALL
								
								SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(OPENENDED), 'YES', maturitydate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, alt.isinnumber isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, decode(nvl(qty_leg1, 0), 0, ai_quantity, qty_leg1) qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, alternateinvestment alt, (
										SELECT marketsymbol, symbol
										FROM dealsymbol
										WHERE transactiontypecode = '1099999999'
										) d
								WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D'
								) oscontract, (
									SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
									FROM assetclass a, workflow w, transactiontype t
									WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
									) t, (
									SELECT subsidiaryname, bookname, portname portfolio, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
									FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
									WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
									) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
							WHERE 1 = 1 AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
							)
						WHERE 1 = 1
						)
					ORDER BY dealno DESC
					) mainqry, (
						SELECT '[' || chargelist || ']' charge, contractcode, total_charge
						FROM (
							SELECT LISTAGG(charges, ',') WITHIN
							GROUP (
									ORDER BY contractcode
									) AS chargelist, contractcode, Sum(charge_amount) total_charge
							FROM (
								SELECT '{"name":"' || event_charge_code || '","value":"' || charge_amount || '"}' charges, contractcode, charge_amount
								FROM deal_charges
								)
							GROUP BY contractcode
							)
						) dc
				WHERE 1 = 1 AND transaction_type_code NOT IN (304, 305, 382, 383) AND mainqry.contractcode = dc.contractcode(+) and upper(nvl(confirmationstatus,'UNCONFIRMED')) = 'UNCONFIRMED'
				AND Upper(assetclass) IN ('INTEREST RATE','COMMODITY','CAPITAL') AND trunc(tradedate) BETWEEN to_date('<%-FROMDATE%>') AND to_date('<%-TODATE%>')
				`,
				"filter":["FROMDATE","TODATE"]
				},
			"update":{
			"source":`
			SELECT mainqry.*, dc.total_charge, dc.charge, Decode(Upper(Nvl(AUTHORISATIONSTATUS, 'NA')), 'NA', 'Authorise', 'A', 'Confirm', '') next_action
			FROM (
				SELECT SUBSIDIARYNAME, BOOKNAME, PORTFOLIO, PRODUCT, SUBPRODUCT, currency CURR, Decode(TRANSACTIONTYPE, 'Split In', 'Split', TRANSACTIONTYPE) TRANSACTIONTYPE, Decode(TRANSACTION_TYPE, 'Split In', 'Split', TRANSACTION_TYPE) TRANSACTION_TYPE, CONTRACTCODE, Decode(product, 'Swaps', SECURITYSYMBOL, CONTRACTCODE) CONTRACT_ID, TRADEDATE, To_Char(TRADEDATE, 'dd/MM/yyyy hh24:mi:ss') AS TRANSACTIONDATETIME, VALUEDATE, MATDATE, TRADERID, COUNTERPARTY, CATEGORY, '' TRANS_CATEGORY, SECURITY_DESC, PRINCIPAL, 0 WITHHOLDINGTAX, AMOUNT_LEG1, QTY_LEG1, PRICE_LEG1, 0 GROSSAMT, YIELD_LEG1, 0 ACCR_INTR_PU, ACCRUEDINTEREST, CONSIDERATION, POST_CONSIDERATION, POST_ACC_INTEREST_LEG1, POST_ACCRUEDINTEREST, SL_YIELD, SL_PRICE, SL_ACC_INT, contract_wac wac, contract_revalwac revalwac, CASE WHEN TRANSACTIONTYPECODE IN ('112', '127', '108', '204', '161', '104', '391') THEN (nvl(price_leg1, 0) - nvl(contract_wac, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('101') THEN (nvl(contract_wac, 0) - nvl(price_leg1, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328') THEN SLB_PROFIT_LOSS ELSE 0 END profit_loss, REPO_RATE, REFERENCE_NO REFCONTRACTNO, YIELDTO, BANKCURR, AGENCY1 AGENCY1NAME, BANKNAME1, ACCOUNT1, AGENCY2 AGENCY2NAME, BANKNAME2, ACCOUNT2, THEIR_AGENCY1 THEIR_AGENCY1NAME, '' THEIR_BANKNAME1, THEIR_ACCOUNT1, '' THEIR_AGENCY2NAME, THEIR_BANKNAME2, THEIR_ACCOUNT2, LOCALCURR, LOCALCURRRATE, LOCALCURRAMT, GLOBALCURR, GLOBALCURRRATE, GLOBALCURRAMT, GROUPCURR, GROUPCURRAMT, GROUPCURRRATE, 0 WITHHOLDINGTAX_PER, 0 EFFECTIVERATE_PER, 0 EFFECTIVERATE_AMT, 0 UPFRONTFEES_PER, 0 UPFRONTFEES_AMT, 0 OTHERS_PER, 0 OTHERS_AMT, 0 COVERRATE, 0 PREMIA_PER, '' PREMIA, 0 STAMPDUTY, SECURED, '' NEGOTIABLE, BROKERAGEDATE, 0 BROKERAGETYPEVALUE, '' BROKERNAME, BROKERCODE, BROKERAGE, BROKERAGE_CURR, '' BROKERAGETYPE, REMARKS, 0 SERVICETAXTYPE, 0 SERVICETAXRATE, 0 SERVICETAXAMT, 0 ACCOUNTCHARGE, 0 NETRATEFLAG, nvl(authorisationstatus, 'NA') AUTHORISATIONSTATUSCODE, AUTHORISATIONSTATUS, AUTHSTATUSBY, AUTHSTATUSON, AUTHSTATUSREMARKS, CONFIRMATIONSTATUS, CONFSTATUSBY, CONFSTATUSON, CONFSTATUSREMARKS, TRANSACTIONTYPE TRANSTYPE, '' CONTRACTTEMPLATE, DEALNO, GROUPDEALNO, 0 PAY_WASHRATE, '' HEDGEON, NOTIONALSTEPRULE, 0 CAPS, 0 FLOORS, RANGEBARRIERS, BRANCH, DEALTYPE, OPTIONAL01, OPTIONAL02, OPTIONAL03, OPTIONAL04, OPTIONAL05, '' SPOTRATESOURCES_ID, PRODUCT_TYPE, 0 EXCHANGE_RATE, 0 WASHRATE, '' SETTLEMENT, 0 STRATEGYID, SUBPRODUCT PRODUCT_CODE, CONTRACTSTRUCTURE, WORKFLOW, '' INITIAL_EXCHANGE, '' CASHFLOWGENERATION, '' EARLYTERMINATION, BOOKID, deal_location_code, DEPOSITORY, '' DELIVERY_MODE, DELIVERY_MODE_CODE, EXCHANGECODE, PORTCODE, TRANSACTIONTYPECODE TRANSACTION_TYPE_CODE, PAYMENTMODE1, BANKCODE1, PAYMENTMODE2, BANKCODE2, '' CP_PAYMENTMODE1, '' CP_BANKCODE1, SUBSIDIARYCODE, COUNTERCODE, '' COUNTERPARTY_DEALER, ASSETCLASS, currency CONSCURRENCY, NOSTRO_REF_NO, NOSTRODATE, REFERENCE_NO, RESTRUCTURE_CONTRACTCODE, ROLLOVER_CONTRACTCODE, BRANCH_REF_NO, CURRNAME, '' BORROW_TERM, BENCHMARKID, 0 PARVALUE, 0 OFFERINGPRICE, '' INTERESTMODE, INTEREST, MARKUP, DAYCOUNT, INTERESTDIRECTION, 0 PAYMENTFREQ, 0 RESETFREQ, '' RESETDATE, DISCOUNTCURVE, 0 COUPYEAR, DEALSOURCE, AMOUNT, QUANTITY, RATE, PRODUCTDESC, BROKER_NAME, BROKERAGEBANKCODE, BROKERAGEBANKNAME, BROKERAGE_AC, '' LOAN_DESCRIPTION, FACEVALUE, ISINO_CODE, SECURITYSYMBOL, 0 INTEREST_TAX_CAT_CODE, PRODUCT1, PCHARGERATE, PCHARGEAMT, 0 XIRRVALUE, '' CUSTOM_CONTRACTCODE, 0 TERMVALUE, '' ACCOUNTINGTYPE, '' REPAY_COMMENCEMENT_DATE, 0 LRN_NUMBER, 0 CUSTOM_PENALTYRATE, 0 LGBG_NUMBER, '' SUPPLIER, '' VESSEL_NAME, 0 CHARGES_PAID_TILL, '' LATEST_DATE_OF_SHIPMENT, '' PAYMENT_TERMS, 0 ORIGINAL_AMOUNT, 0 COMMISSION_PERCENTAGE, REMARKS REMARK, DEAL_REMARKS, EMAIL_STATUS, AUID, MATDATE MATURITY, INDEX_RATIO, Nvl(ORDER_STATUS, 'Order Pending') ORDER_STATUS, To_Char(order_conf_date, 'dd/MM/yyyy hh24:mi:ss') AS order_conf_date, order_conf_by, Nvl(RECON_STATUS, 'Unreconciled') RECON_STATUS, decode(upper(RECON_STATUS), 'RECONCILED', '', RECON_REMARKS) RECON_REMARKS, FD_NUMBER, FD_INTEREST_RATE, FD_TENOR, FD_AMOUNT, FD_AMOUNT_PER, (
						SELECT descr
						FROM default_static_table
						WHERE code = '365' AND module_name = 'asba_fd_daycount'
						) FD_DAY_COUNT, FD_INTEREST, decode(Nvl(final_price, 1), 0, 'F', 'T') FINAL_PRICE, issuer, exchange, netrate, netamount, bsr_code, lotsize, noofcontracts, underlying1 derivative_underlying, sl_consideration, active_status, nominal_price, deal_purpose, Nvl(reporting_asset_class, ASSETCLASS) REPORTING_ASSET_CLASS, bsrnumber, dept_name, Nvl(stt, 0) stt, brokerage_amount, dealerbook, iobj, sectorname, payment_mode, 'TRUE' display_auth_info, Upper('TRUE') printdealticket, primarymarkettype, acc_interest, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, Theirbankname, country, settleflag
				FROM (
					SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, Decode(Lower(assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', assetclass), assetclass) assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode, brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, bsr_code, netrate, netamount, lotsize, noofcontracts, underlying1, sl_consideration, active_status, nominal_price, deal_purpose, reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, sectorname, payment_mode, primarymarkettype, settleflag
					FROM (
						SELECT s.*, workflow, t.assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2, their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, dealno posdealno, portfolio Pos_portfolio, traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue, Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, osContract.depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, osContract.branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, cm8.bsr_code bsr_code, netrate, netamount, oscontract.lotsize, oscontract.noofcontracts, underlying1, sl_consideration, oscontract.active_status active_status, nominal_price, deal_purpose, ds.reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, oscontract.sectorname, oscontract.payment_mode, primarymarkettype, oscontract.settleflag settleflag
						FROM (
							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amt1 amount_leg1, amt1 qty_leg1, strikerate price_leg1, 0 yield_leg1, amt2 principal, '' deal_location_code, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag
							FROM fxmaster
							WHERE nvl(deletionstatus, 'ND') <> 'D' AND contractcode = '<%-CONTRACTCODE%>'
							
							UNION ALL
							
							SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, c.portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, CASE WHEN transaction_type_code IN (90, 91, 329, 330) THEN sl_date ELSE enddate END matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
											SELECT upper(PARAMVALUE)
											FROM params
											WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
											), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
												SELECT DISTINCT optional02
												FROM contractmaster
												WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
												) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security', s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, nvl(sl_consideration, 0), 1 active_status, nominal_price, descr deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, dealerwiseprofitability dl, (
									SELECT compcode, compname
									FROM companymaster
									) cm, (
									SELECT compcode, compname, is_taxable
									FROM companymaster
									) cm1, (
									SELECT c.contractcode ccode, c1.loan_description loan_desc
									FROM contractmaster c, contractmaster c1
									WHERE c.refcontractno = c1.contractcode
									) contract, (
									SELECT code, descr, static_value
									FROM default_static_table
									WHERE MODULE_NAME = 'REVAL_PURPOSE'
									ORDER BY To_Number(static_value)
									) d
							WHERE c.contractcode = contract.ccode(+) AND c.purpose_code = d.code(+) AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+) AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324) AND dl.portcode(+) = c.portcode AND To_Char(dl.code(+)) = To_Char(c.dealerbook) AND dl.asset_class_code(+) = 2 AND c.contractcode = '<%-CONTRACTCODE%>'
							
							UNION ALL
							
							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Mutual Fund' product, securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(type_name), 'CLOSE ENDED', matdate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, scheme_code securitysymbol, market product_type, mf.scheme_name security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_number isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, descr deal_purpose, '' bsrnumber, dept_name, 0 stt, 0 BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, mf.iobj, sc.sectorname, payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig, sectormaster sc, dealerwiseprofitability dl, paymentmode pm, (
									SELECT code, descr, static_value
									FROM default_static_table
									WHERE MODULE_NAME = 'REVAL_PURPOSE'
									ORDER BY To_Number(static_value)
									) d
							WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1)) AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+) AND ig.sector = sc.SECTORCODE(+) AND mt.purpose_code = d.code(+) AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 5 AND pm.pay_mode_code = mt.payment_mode_code AND contractcode = '<%-CONTRACTCODE%>'
							
							UNION ALL
							
							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Equity' product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, mt.contractcode contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.scrip_code securitysymbol, market product_type, mf.scrip_name security_desc, subproduct underlying, mt.brokercode brokercode, brokeragedate, brokerage_curr, dealcharges.BROKERAGE_AMOUNT brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_no isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, Nvl(dealcharges.net_rate, Nvl(mt.netrate, 0)) netrate, Nvl(dealcharges.net_amount, 0) netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, mf.active_status, 0 nominal_price, '' deal_purpose, bm.bsrnumber, dept_name, dealcharges.stt stt, dealcharges.BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm, companymaster ig, brokerage_master bm, dealerwiseprofitability dl, (
									SELECT CONTRACTCODE, STT, BROKERAGE_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN (((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) + STT) WHEN TRANSACTION_TYPE_CODE = 305 THEN (((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) - STT) WHEN TRANSACTION_TYPE_CODE = 192 THEN ((PRICE_LEG1 * QTY_LEG1) + (BROKERAGE_AMOUNT + STT)) WHEN TRANSACTION_TYPE_CODE = 204 THEN ((PRICE_LEG1 * QTY_LEG1) - (BROKERAGE_AMOUNT + STT)) END AS NET_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN ((((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 WHEN TRANSACTION_TYPE_CODE = 305 THEN ((((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 END AS NET_RATE, (BROKERAGE_AMOUNT / QTY_LEG1) B_UNIT
									FROM (
										SELECT CONTRACTCODE, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_STT_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', CHARGE_AMOUNT, 'STT_EQ_PUR', charge_amount, 'STT_EQ_SALE', charge_amount, 0)) AS STT, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_SALE', CHARGE_AMOUNT, 'BROKER_CHARGE_EQ_PUR', charge_amount, 'BROKER_CHARGE_EQ_SALE', charge_amount, 0)) AS BROKERAGE_AMOUNT, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
										FROM (
											SELECT dc.CONTRACTCODE, dc.EVENT_CHARGE_CODE, dc.CHARGE_AMOUNT, MT.QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE, p.paramname, p.paramvalue
											FROM DEAL_CHARGES DC, MUTUALFUND_TRANSACT MT, params p
											WHERE DC.CONTRACTCODE = MT.CONTRACTCODE AND p.paramvalue(+) = dc.event_charge_code AND p.paramname IN ('BROKER_CHARGE_EVENT_ORDER_STT_PUR', 'BROKER_CHARGE_EVENT_ORDER_PUR', 'BROKER_CHARGE_EVENT_ORDER_SALE', 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', 'STT_EQ_PUR', 'STT_EQ_SALE', 'BROKER_CHARGE_EQ_PUR', 'BROKER_CHARGE_EQ_SALE') AND EVENT_CHARGE_CODE IN (p.paramvalue)
											)
										GROUP BY CONTRACTCODE, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
										)
									) dealcharges
							WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND Lower(assetclass) = 'equity' AND nvl(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND mt.transaction_type_code NOT IN (207) AND dealcharges.contractcode(+) = mt.contractcode AND mf.issuer = ig.compcode(+) AND mt.brokercode = bm.brokercode(+) AND mt.exchangecode = bm.exchange_code(+) AND bm.asset_class_code(+) = 7 AND bm.BR_WORKFLOWCODE(+) = 27 AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 7 AND mt.contractcode = '<%-CONTRACTCODE%>'
							
							UNION ALL
							
							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.profit_loss SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
									SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
									FROM equitymaster
									
									UNION ALL
									
									SELECT INDEX_NAME, INDEX_NAME, (
											SELECT compcode
											FROM companymaster
											WHERE compname = 'NONE' AND rownum = 1
											) ISSUER
									FROM index_master
									) eq, workflow ass, dealsymbol DE
							WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D' AND mt.contractcode = '<%-CONTRACTCODE%>'
							
							UNION ALL
							
							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
							WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+) AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%') AND contractcode = '<%-CONTRACTCODE%>'
							
							UNION ALL
							
							SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, ird.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, ird.contractcode securitysymbol, 'SECONDARY' product_type, ird.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, c.depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, c.branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, c.lotsize, c.noofcontracts, c.underlying underlying1, 0 sl_consideration, to_number(ird.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
							WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND' AND c.contractcode = '<%-CONTRACTCODE%>'
							
							UNION ALL
							
							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
							WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow AND mt.contractcode = '<%-CONTRACTCODE%>'
							
							UNION ALL
							
							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(OPENENDED), 'YES', maturitydate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, alt.isinnumber isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, decode(nvl(qty_leg1, 0), 0, ai_quantity, qty_leg1) qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, alternateinvestment alt, (
									SELECT marketsymbol, symbol
									FROM dealsymbol
									WHERE transactiontypecode = '1099999999'
									) d
							WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D' AND contractcode = '<%-CONTRACTCODE%>'
							) oscontract, (
								SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
								FROM assetclass a, workflow w, transactiontype t
								WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
								) t, (
								SELECT subsidiaryname, bookname, portname portfolio, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
								FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
								WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
								) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
						WHERE 1 = 1 AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
						)
					WHERE 1 = 1
					)
				ORDER BY dealno DESC
				) mainqry, (
					SELECT '[' || chargelist || ']' charge, contractcode, total_charge
					FROM (
						SELECT LISTAGG(charges, ',') WITHIN
						GROUP (
								ORDER BY contractcode
								) AS chargelist, contractcode, Sum(charge_amount) total_charge
						FROM (
							SELECT '{"name":"' || event_charge_code || '","value":"' || charge_amount || '"}' charges, contractcode, charge_amount
							FROM deal_charges
							WHERE contractcode = '<%-CONTRACTCODE%>'
							)
						GROUP BY contractcode
						)
					) dc
			WHERE 1 = 1 AND transaction_type_code NOT IN (304, 305, 382, 383) AND mainqry.contractcode = dc.contractcode(+) and upper(nvl(confirmationstatus,'UNCONFIRMED')) = 'UNCONFIRMED'
				`,
				"filter":["CONTRACTCODE"]
				},
			"delete":{
				"source":``,
				"filter":["CONTRACTCODE"]
			}
		},
		{
			"collectionName":"fx_deallisting",
			"notificationFilter":[],
			"create":{
			"source":`SELECT mainqry.*, dc.total_charge, dc.charge, Decode(Upper(Nvl(AUTHORISATIONSTATUS, 'NA')), 'NA', 'Authorise', 'A', 'Confirm', '') next_action
					FROM (
						SELECT SUBSIDIARYNAME, BOOKNAME, PORTFOLIO, PRODUCT, SUBPRODUCT, currency CURR, Decode(TRANSACTIONTYPE, 'Split In', 'Split', TRANSACTIONTYPE) TRANSACTIONTYPE, Decode(TRANSACTION_TYPE, 'Split In', 'Split', TRANSACTION_TYPE) TRANSACTION_TYPE, CONTRACTCODE, Decode(product, 'Swaps', SECURITYSYMBOL, CONTRACTCODE) CONTRACT_ID, TRADEDATE, To_Char(TRADEDATE, 'dd/MM/yyyy hh24:mi:ss') AS TRANSACTIONDATETIME, VALUEDATE, MATDATE, TRADERID, COUNTERPARTY, CATEGORY, '' TRANS_CATEGORY, SECURITY_DESC, PRINCIPAL, 0 WITHHOLDINGTAX, AMOUNT_LEG1, QTY_LEG1, PRICE_LEG1, 0 GROSSAMT, YIELD_LEG1, 0 ACCR_INTR_PU, ACCRUEDINTEREST, CONSIDERATION, POST_CONSIDERATION, POST_ACC_INTEREST_LEG1, POST_ACCRUEDINTEREST, SL_YIELD, SL_PRICE, SL_ACC_INT, contract_wac wac, contract_revalwac revalwac, CASE WHEN TRANSACTIONTYPECODE IN ('112', '127', '108', '204', '161', '104', '391') THEN (nvl(price_leg1, 0) - nvl(contract_wac, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('101') THEN (nvl(contract_wac, 0) - nvl(price_leg1, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328') THEN SLB_PROFIT_LOSS ELSE 0 END profit_loss, REPO_RATE, REFERENCE_NO REFCONTRACTNO, YIELDTO, BANKCURR, AGENCY1 AGENCY1NAME, BANKNAME1, ACCOUNT1, AGENCY2 AGENCY2NAME, BANKNAME2, ACCOUNT2, THEIR_AGENCY1 THEIR_AGENCY1NAME, '' THEIR_BANKNAME1, THEIR_ACCOUNT1, '' THEIR_AGENCY2NAME, THEIR_BANKNAME2, THEIR_ACCOUNT2, LOCALCURR, LOCALCURRRATE, LOCALCURRAMT, GLOBALCURR, GLOBALCURRRATE, GLOBALCURRAMT, GROUPCURR, GROUPCURRAMT, GROUPCURRRATE, 0 WITHHOLDINGTAX_PER, 0 EFFECTIVERATE_PER, 0 EFFECTIVERATE_AMT, 0 UPFRONTFEES_PER, 0 UPFRONTFEES_AMT, 0 OTHERS_PER, 0 OTHERS_AMT, 0 COVERRATE, 0 PREMIA_PER, '' PREMIA, 0 STAMPDUTY, SECURED, '' NEGOTIABLE, BROKERAGEDATE, 0 BROKERAGETYPEVALUE, '' BROKERNAME, BROKERCODE, BROKERAGE, BROKERAGE_CURR, '' BROKERAGETYPE, REMARKS, 0 SERVICETAXTYPE, 0 SERVICETAXRATE, 0 SERVICETAXAMT, 0 ACCOUNTCHARGE, 0 NETRATEFLAG, nvl(authorisationstatus, 'NA') AUTHORISATIONSTATUSCODE, AUTHORISATIONSTATUS, AUTHSTATUSBY, AUTHSTATUSON, AUTHSTATUSREMARKS, CONFIRMATIONSTATUS, CONFSTATUSBY, CONFSTATUSON, CONFSTATUSREMARKS, TRANSACTIONTYPE TRANSTYPE, '' CONTRACTTEMPLATE, DEALNO, GROUPDEALNO, 0 PAY_WASHRATE, '' HEDGEON, NOTIONALSTEPRULE, 0 CAPS, 0 FLOORS, RANGEBARRIERS, BRANCH, DEALTYPE, OPTIONAL01, OPTIONAL02, OPTIONAL03, OPTIONAL04, OPTIONAL05, '' SPOTRATESOURCES_ID, PRODUCT_TYPE, 0 EXCHANGE_RATE, 0 WASHRATE, '' SETTLEMENT, 0 STRATEGYID, SUBPRODUCT PRODUCT_CODE, CONTRACTSTRUCTURE, WORKFLOW, '' INITIAL_EXCHANGE, '' CASHFLOWGENERATION, '' EARLYTERMINATION, BOOKID, deal_location_code, DEPOSITORY, '' DELIVERY_MODE, DELIVERY_MODE_CODE, EXCHANGECODE, PORTCODE, TRANSACTIONTYPECODE TRANSACTION_TYPE_CODE, PAYMENTMODE1, BANKCODE1, PAYMENTMODE2, BANKCODE2, '' CP_PAYMENTMODE1, '' CP_BANKCODE1, SUBSIDIARYCODE, COUNTERCODE, '' COUNTERPARTY_DEALER, ASSETCLASS, currency CONSCURRENCY, NOSTRO_REF_NO, NOSTRODATE, REFERENCE_NO, RESTRUCTURE_CONTRACTCODE, ROLLOVER_CONTRACTCODE, BRANCH_REF_NO, CURRNAME, '' BORROW_TERM, BENCHMARKID, 0 PARVALUE, 0 OFFERINGPRICE, '' INTERESTMODE, INTEREST, MARKUP, DAYCOUNT, INTERESTDIRECTION, 0 PAYMENTFREQ, 0 RESETFREQ, '' RESETDATE, DISCOUNTCURVE, 0 COUPYEAR, DEALSOURCE, AMOUNT, QUANTITY, RATE, PRODUCTDESC, BROKER_NAME, BROKERAGEBANKCODE, BROKERAGEBANKNAME, BROKERAGE_AC, '' LOAN_DESCRIPTION, FACEVALUE, ISINO_CODE, SECURITYSYMBOL, 0 INTEREST_TAX_CAT_CODE, PRODUCT1, PCHARGERATE, PCHARGEAMT, 0 XIRRVALUE, '' CUSTOM_CONTRACTCODE, 0 TERMVALUE, '' ACCOUNTINGTYPE, '' REPAY_COMMENCEMENT_DATE, 0 LRN_NUMBER, 0 CUSTOM_PENALTYRATE, 0 LGBG_NUMBER, '' SUPPLIER, '' VESSEL_NAME, 0 CHARGES_PAID_TILL, '' LATEST_DATE_OF_SHIPMENT, '' PAYMENT_TERMS, 0 ORIGINAL_AMOUNT, 0 COMMISSION_PERCENTAGE, REMARKS REMARK, DEAL_REMARKS, EMAIL_STATUS, AUID, MATDATE MATURITY, INDEX_RATIO, Nvl(ORDER_STATUS, 'Order Pending') ORDER_STATUS, To_Char(order_conf_date, 'dd/MM/yyyy hh24:mi:ss') AS order_conf_date, order_conf_by, Nvl(RECON_STATUS, 'Unreconciled') RECON_STATUS, decode(upper(RECON_STATUS), 'RECONCILED', '', RECON_REMARKS) RECON_REMARKS, FD_NUMBER, FD_INTEREST_RATE, FD_TENOR, FD_AMOUNT, FD_AMOUNT_PER, (
								SELECT descr
								FROM default_static_table
								WHERE code = '365' AND module_name = 'asba_fd_daycount'
								) FD_DAY_COUNT, FD_INTEREST, decode(Nvl(final_price, 1), 0, 'F', 'T') FINAL_PRICE, issuer, exchange, netrate, netamount, bsr_code, lotsize, noofcontracts, underlying1 derivative_underlying, sl_consideration, active_status, nominal_price, deal_purpose, Nvl(reporting_asset_class, ASSETCLASS) REPORTING_ASSET_CLASS, bsrnumber, dept_name, Nvl(stt, 0) stt, brokerage_amount, dealerbook, iobj, sectorname, payment_mode, 'TRUE' display_auth_info, Upper('TRUE') printdealticket, primarymarkettype, acc_interest, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, Theirbankname, country, settleflag
						FROM (
							SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, Decode(Lower(assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', assetclass), assetclass) assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode, brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, bsr_code, netrate, netamount, lotsize, noofcontracts, underlying1, sl_consideration, active_status, nominal_price, deal_purpose, reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, sectorname, payment_mode, primarymarkettype, settleflag
							FROM (
								SELECT s.*, workflow, t.assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2, their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, dealno posdealno, portfolio Pos_portfolio, traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue, Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, osContract.depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, osContract.branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, cm8.bsr_code bsr_code, netrate, netamount, oscontract.lotsize, oscontract.noofcontracts, underlying1, sl_consideration, oscontract.active_status active_status, nominal_price, deal_purpose, ds.reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, oscontract.sectorname, oscontract.payment_mode, primarymarkettype, oscontract.settleflag settleflag
								FROM (
									SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amt1 amount_leg1, amt1 qty_leg1, strikerate price_leg1, 0 yield_leg1, amt2 principal, '' deal_location_code, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag
									FROM fxmaster
									WHERE nvl(deletionstatus, 'ND') <> 'D' AND contractcode = '<%-CONTRACTCODE%>'
									
									UNION ALL
									
									SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, c.portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, CASE WHEN transaction_type_code IN (90, 91, 329, 330) THEN sl_date ELSE enddate END matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
													SELECT upper(PARAMVALUE)
													FROM params
													WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
													), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
														SELECT DISTINCT optional02
														FROM contractmaster
														WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
														) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security', s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, nvl(sl_consideration, 0), 1 active_status, nominal_price, descr deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
									FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, dealerwiseprofitability dl, (
											SELECT compcode, compname
											FROM companymaster
											) cm, (
											SELECT compcode, compname, is_taxable
											FROM companymaster
											) cm1, (
											SELECT c.contractcode ccode, c1.loan_description loan_desc
											FROM contractmaster c, contractmaster c1
											WHERE c.refcontractno = c1.contractcode
											) contract, (
											SELECT code, descr, static_value
											FROM default_static_table
											WHERE MODULE_NAME = 'REVAL_PURPOSE'
											ORDER BY To_Number(static_value)
											) d
									WHERE c.contractcode = contract.ccode(+) AND c.purpose_code = d.code(+) AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+) AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324) AND dl.portcode(+) = c.portcode AND To_Char(dl.code(+)) = To_Char(c.dealerbook) AND dl.asset_class_code(+) = 2 AND c.contractcode = '<%-CONTRACTCODE%>'
									
									UNION ALL
									
									SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Mutual Fund' product, securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(type_name), 'CLOSE ENDED', matdate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, scheme_code securitysymbol, market product_type, mf.scheme_name security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_number isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, descr deal_purpose, '' bsrnumber, dept_name, 0 stt, 0 BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, mf.iobj, sc.sectorname, payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
									FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig, sectormaster sc, dealerwiseprofitability dl, paymentmode pm, (
											SELECT code, descr, static_value
											FROM default_static_table
											WHERE MODULE_NAME = 'REVAL_PURPOSE'
											ORDER BY To_Number(static_value)
											) d
									WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1)) AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+) AND ig.sector = sc.SECTORCODE(+) AND mt.purpose_code = d.code(+) AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 5 AND pm.pay_mode_code = mt.payment_mode_code AND contractcode = '<%-CONTRACTCODE%>'
									
									UNION ALL
									
									SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Equity' product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, mt.contractcode contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.scrip_code securitysymbol, market product_type, mf.scrip_name security_desc, subproduct underlying, mt.brokercode brokercode, brokeragedate, brokerage_curr, dealcharges.BROKERAGE_AMOUNT brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_no isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, Nvl(dealcharges.net_rate, Nvl(mt.netrate, 0)) netrate, Nvl(dealcharges.net_amount, 0) netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, mf.active_status, 0 nominal_price, '' deal_purpose, bm.bsrnumber, dept_name, dealcharges.stt stt, dealcharges.BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
									FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm, companymaster ig, brokerage_master bm, dealerwiseprofitability dl, (
											SELECT CONTRACTCODE, STT, BROKERAGE_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN (((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) + STT) WHEN TRANSACTION_TYPE_CODE = 305 THEN (((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) - STT) WHEN TRANSACTION_TYPE_CODE = 192 THEN ((PRICE_LEG1 * QTY_LEG1) + (BROKERAGE_AMOUNT + STT)) WHEN TRANSACTION_TYPE_CODE = 204 THEN ((PRICE_LEG1 * QTY_LEG1) - (BROKERAGE_AMOUNT + STT)) END AS NET_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN ((((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 WHEN TRANSACTION_TYPE_CODE = 305 THEN ((((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 END AS NET_RATE, (BROKERAGE_AMOUNT / QTY_LEG1) B_UNIT
											FROM (
												SELECT CONTRACTCODE, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_STT_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', CHARGE_AMOUNT, 'STT_EQ_PUR', charge_amount, 'STT_EQ_SALE', charge_amount, 0)) AS STT, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_SALE', CHARGE_AMOUNT, 'BROKER_CHARGE_EQ_PUR', charge_amount, 'BROKER_CHARGE_EQ_SALE', charge_amount, 0)) AS BROKERAGE_AMOUNT, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
												FROM (
													SELECT dc.CONTRACTCODE, dc.EVENT_CHARGE_CODE, dc.CHARGE_AMOUNT, MT.QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE, p.paramname, p.paramvalue
													FROM DEAL_CHARGES DC, MUTUALFUND_TRANSACT MT, params p
													WHERE DC.CONTRACTCODE = MT.CONTRACTCODE AND p.paramvalue(+) = dc.event_charge_code AND p.paramname IN ('BROKER_CHARGE_EVENT_ORDER_STT_PUR', 'BROKER_CHARGE_EVENT_ORDER_PUR', 'BROKER_CHARGE_EVENT_ORDER_SALE', 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', 'STT_EQ_PUR', 'STT_EQ_SALE', 'BROKER_CHARGE_EQ_PUR', 'BROKER_CHARGE_EQ_SALE') AND EVENT_CHARGE_CODE IN (p.paramvalue)
													)
												GROUP BY CONTRACTCODE, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
												)
											) dealcharges
									WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND Lower(assetclass) = 'equity' AND nvl(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND mt.transaction_type_code NOT IN (207) AND dealcharges.contractcode(+) = mt.contractcode AND mf.issuer = ig.compcode(+) AND mt.brokercode = bm.brokercode(+) AND mt.exchangecode = bm.exchange_code(+) AND bm.asset_class_code(+) = 7 AND bm.BR_WORKFLOWCODE(+) = 27 AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 7 AND mt.contractcode = '<%-CONTRACTCODE%>'
									
									UNION ALL
									
									SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.profit_loss SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
									FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
											SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
											FROM equitymaster
											
											UNION ALL
											
											SELECT INDEX_NAME, INDEX_NAME, (
													SELECT compcode
													FROM companymaster
													WHERE compname = 'NONE' AND rownum = 1
													) ISSUER
											FROM index_master
											) eq, workflow ass, dealsymbol DE
									WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D' AND mt.contractcode = '<%-CONTRACTCODE%>'
									
									UNION ALL
									
									SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
									FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
									WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+) AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%') AND contractcode = '<%-CONTRACTCODE%>'
									
									UNION ALL
									
									SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, ird.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, ird.contractcode securitysymbol, 'SECONDARY' product_type, ird.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, c.depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, c.branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, c.lotsize, c.noofcontracts, c.underlying underlying1, 0 sl_consideration, to_number(ird.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
									FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
									WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND' AND c.contractcode = '<%-CONTRACTCODE%>'
									
									UNION ALL
									
									SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
									FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
									WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow AND mt.contractcode = '<%-CONTRACTCODE%>'
									
									UNION ALL
									
									SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(OPENENDED), 'YES', maturitydate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, alt.isinnumber isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, decode(nvl(qty_leg1, 0), 0, ai_quantity, qty_leg1) qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
									FROM mutualfund_transact mt, alternateinvestment alt, (
											SELECT marketsymbol, symbol
											FROM dealsymbol
											WHERE transactiontypecode = '1099999999'
											) d
									WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D' AND contractcode = '<%-CONTRACTCODE%>'
									) oscontract, (
										SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
										FROM assetclass a, workflow w, transactiontype t
										WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
										) t, (
										SELECT subsidiaryname, bookname, portname portfolio, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
										FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
										WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
										) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
								WHERE 1 = 1 AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
								)
							WHERE 1 = 1
							)
						ORDER BY dealno DESC
						) mainqry, (
							SELECT '[' || chargelist || ']' charge, contractcode, total_charge
							FROM (
								SELECT LISTAGG(charges, ',') WITHIN
								GROUP (
										ORDER BY contractcode
										) AS chargelist, contractcode, Sum(charge_amount) total_charge
								FROM (
									SELECT '{"name":"' || event_charge_code || '","value":"' || charge_amount || '"}' charges, contractcode, charge_amount
									FROM deal_charges
									WHERE contractcode = '<%-CONTRACTCODE%>'
									)
								GROUP BY contractcode
								)
							) dc
					WHERE 1 = 1 AND transaction_type_code NOT IN (304, 305, 382, 383) AND mainqry.contractcode = dc.contractcode(+) and upper(nvl(confirmationstatus,'UNCONFIRMED')) = 'UNCONFIRMED'
			`,
        "filter":["CONTRACTCODE"]
        },
		"refresh":{
			"source":`
				SELECT mainqry.*, dc.total_charge, dc.charge, Decode(Upper(Nvl(AUTHORISATIONSTATUS, 'NA')), 'NA', 'Authorise', 'A', 'Confirm', '') next_action
				FROM (
					SELECT SUBSIDIARYNAME, BOOKNAME, PORTFOLIO, PRODUCT, SUBPRODUCT, currency CURR, Decode(TRANSACTIONTYPE, 'Split In', 'Split', TRANSACTIONTYPE) TRANSACTIONTYPE, Decode(TRANSACTION_TYPE, 'Split In', 'Split', TRANSACTION_TYPE) TRANSACTION_TYPE, CONTRACTCODE, Decode(product, 'Swaps', SECURITYSYMBOL, CONTRACTCODE) CONTRACT_ID, TRADEDATE, To_Char(TRADEDATE, 'dd/MM/yyyy hh24:mi:ss') AS TRANSACTIONDATETIME, VALUEDATE, MATDATE, TRADERID, COUNTERPARTY, CATEGORY, '' TRANS_CATEGORY, SECURITY_DESC, PRINCIPAL, 0 WITHHOLDINGTAX, AMOUNT_LEG1, QTY_LEG1, PRICE_LEG1, 0 GROSSAMT, YIELD_LEG1, 0 ACCR_INTR_PU, ACCRUEDINTEREST, CONSIDERATION, POST_CONSIDERATION, POST_ACC_INTEREST_LEG1, POST_ACCRUEDINTEREST, SL_YIELD, SL_PRICE, SL_ACC_INT, contract_wac wac, contract_revalwac revalwac, CASE WHEN TRANSACTIONTYPECODE IN ('112', '127', '108', '204', '161', '104', '391') THEN (nvl(price_leg1, 0) - nvl(contract_wac, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('101') THEN (nvl(contract_wac, 0) - nvl(price_leg1, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328') THEN SLB_PROFIT_LOSS ELSE 0 END profit_loss, REPO_RATE, REFERENCE_NO REFCONTRACTNO, YIELDTO, BANKCURR, AGENCY1 AGENCY1NAME, BANKNAME1, ACCOUNT1, AGENCY2 AGENCY2NAME, BANKNAME2, ACCOUNT2, THEIR_AGENCY1 THEIR_AGENCY1NAME, '' THEIR_BANKNAME1, THEIR_ACCOUNT1, '' THEIR_AGENCY2NAME, THEIR_BANKNAME2, THEIR_ACCOUNT2, LOCALCURR, LOCALCURRRATE, LOCALCURRAMT, GLOBALCURR, GLOBALCURRRATE, GLOBALCURRAMT, GROUPCURR, GROUPCURRAMT, GROUPCURRRATE, 0 WITHHOLDINGTAX_PER, 0 EFFECTIVERATE_PER, 0 EFFECTIVERATE_AMT, 0 UPFRONTFEES_PER, 0 UPFRONTFEES_AMT, 0 OTHERS_PER, 0 OTHERS_AMT, 0 COVERRATE, 0 PREMIA_PER, '' PREMIA, 0 STAMPDUTY, SECURED, '' NEGOTIABLE, BROKERAGEDATE, 0 BROKERAGETYPEVALUE, '' BROKERNAME, BROKERCODE, BROKERAGE, BROKERAGE_CURR, '' BROKERAGETYPE, REMARKS, 0 SERVICETAXTYPE, 0 SERVICETAXRATE, 0 SERVICETAXAMT, 0 ACCOUNTCHARGE, 0 NETRATEFLAG, nvl(authorisationstatus, 'NA') AUTHORISATIONSTATUSCODE, AUTHORISATIONSTATUS, AUTHSTATUSBY, AUTHSTATUSON, AUTHSTATUSREMARKS, CONFIRMATIONSTATUS, CONFSTATUSBY, CONFSTATUSON, CONFSTATUSREMARKS, TRANSACTIONTYPE TRANSTYPE, '' CONTRACTTEMPLATE, DEALNO, GROUPDEALNO, 0 PAY_WASHRATE, '' HEDGEON, NOTIONALSTEPRULE, 0 CAPS, 0 FLOORS, RANGEBARRIERS, BRANCH, DEALTYPE, OPTIONAL01, OPTIONAL02, OPTIONAL03, OPTIONAL04, OPTIONAL05, '' SPOTRATESOURCES_ID, PRODUCT_TYPE, 0 EXCHANGE_RATE, 0 WASHRATE, '' SETTLEMENT, 0 STRATEGYID, SUBPRODUCT PRODUCT_CODE, CONTRACTSTRUCTURE, WORKFLOW, '' INITIAL_EXCHANGE, '' CASHFLOWGENERATION, '' EARLYTERMINATION, BOOKID, deal_location_code, DEPOSITORY, '' DELIVERY_MODE, DELIVERY_MODE_CODE, EXCHANGECODE, PORTCODE, TRANSACTIONTYPECODE TRANSACTION_TYPE_CODE, PAYMENTMODE1, BANKCODE1, PAYMENTMODE2, BANKCODE2, '' CP_PAYMENTMODE1, '' CP_BANKCODE1, SUBSIDIARYCODE, COUNTERCODE, '' COUNTERPARTY_DEALER, ASSETCLASS, currency CONSCURRENCY, NOSTRO_REF_NO, NOSTRODATE, REFERENCE_NO, RESTRUCTURE_CONTRACTCODE, ROLLOVER_CONTRACTCODE, BRANCH_REF_NO, CURRNAME, '' BORROW_TERM, BENCHMARKID, 0 PARVALUE, 0 OFFERINGPRICE, '' INTERESTMODE, INTEREST, MARKUP, DAYCOUNT, INTERESTDIRECTION, 0 PAYMENTFREQ, 0 RESETFREQ, '' RESETDATE, DISCOUNTCURVE, 0 COUPYEAR, DEALSOURCE, AMOUNT, QUANTITY, RATE, PRODUCTDESC, BROKER_NAME, BROKERAGEBANKCODE, BROKERAGEBANKNAME, BROKERAGE_AC, '' LOAN_DESCRIPTION, FACEVALUE, ISINO_CODE, SECURITYSYMBOL, 0 INTEREST_TAX_CAT_CODE, PRODUCT1, PCHARGERATE, PCHARGEAMT, 0 XIRRVALUE, '' CUSTOM_CONTRACTCODE, 0 TERMVALUE, '' ACCOUNTINGTYPE, '' REPAY_COMMENCEMENT_DATE, 0 LRN_NUMBER, 0 CUSTOM_PENALTYRATE, 0 LGBG_NUMBER, '' SUPPLIER, '' VESSEL_NAME, 0 CHARGES_PAID_TILL, '' LATEST_DATE_OF_SHIPMENT, '' PAYMENT_TERMS, 0 ORIGINAL_AMOUNT, 0 COMMISSION_PERCENTAGE, REMARKS REMARK, DEAL_REMARKS, EMAIL_STATUS, AUID, MATDATE MATURITY, INDEX_RATIO, Nvl(ORDER_STATUS, 'Order Pending') ORDER_STATUS, To_Char(order_conf_date, 'dd/MM/yyyy hh24:mi:ss') AS order_conf_date, order_conf_by, Nvl(RECON_STATUS, 'Unreconciled') RECON_STATUS, decode(upper(RECON_STATUS), 'RECONCILED', '', RECON_REMARKS) RECON_REMARKS, FD_NUMBER, FD_INTEREST_RATE, FD_TENOR, FD_AMOUNT, FD_AMOUNT_PER, (
							SELECT descr
							FROM default_static_table
							WHERE code = '365' AND module_name = 'asba_fd_daycount'
							) FD_DAY_COUNT, FD_INTEREST, decode(Nvl(final_price, 1), 0, 'F', 'T') FINAL_PRICE, issuer, exchange, netrate, netamount, bsr_code, lotsize, noofcontracts, underlying1 derivative_underlying, sl_consideration, active_status, nominal_price, deal_purpose, Nvl(reporting_asset_class, ASSETCLASS) REPORTING_ASSET_CLASS, bsrnumber, dept_name, Nvl(stt, 0) stt, brokerage_amount, dealerbook, iobj, sectorname, payment_mode, 'TRUE' display_auth_info, Upper('TRUE') printdealticket, primarymarkettype, acc_interest, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, Theirbankname, country, settleflag
					FROM (
						SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, Decode(Lower(assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', assetclass), assetclass) assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode, brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, bsr_code, netrate, netamount, lotsize, noofcontracts, underlying1, sl_consideration, active_status, nominal_price, deal_purpose, reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, sectorname, payment_mode, primarymarkettype, settleflag
						FROM (
							SELECT s.*, workflow, t.assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2, their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, dealno posdealno, portfolio Pos_portfolio, traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue, Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, osContract.depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, osContract.branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, cm8.bsr_code bsr_code, netrate, netamount, oscontract.lotsize, oscontract.noofcontracts, underlying1, sl_consideration, oscontract.active_status active_status, nominal_price, deal_purpose, ds.reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, oscontract.sectorname, oscontract.payment_mode, primarymarkettype, oscontract.settleflag settleflag
							FROM (
								SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amt1 amount_leg1, amt1 qty_leg1, strikerate price_leg1, 0 yield_leg1, amt2 principal, '' deal_location_code, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag
								FROM fxmaster
								WHERE nvl(deletionstatus, 'ND') <> 'D'
								
								UNION ALL
								
								SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, c.portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, CASE WHEN transaction_type_code IN (90, 91, 329, 330) THEN sl_date ELSE enddate END matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
												SELECT upper(PARAMVALUE)
												FROM params
												WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
												), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
													SELECT DISTINCT optional02
													FROM contractmaster
													WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
													) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security', s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, nvl(sl_consideration, 0), 1 active_status, nominal_price, descr deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, dealerwiseprofitability dl, (
										SELECT compcode, compname
										FROM companymaster
										) cm, (
										SELECT compcode, compname, is_taxable
										FROM companymaster
										) cm1, (
										SELECT c.contractcode ccode, c1.loan_description loan_desc
										FROM contractmaster c, contractmaster c1
										WHERE c.refcontractno = c1.contractcode
										) contract, (
										SELECT code, descr, static_value
										FROM default_static_table
										WHERE MODULE_NAME = 'REVAL_PURPOSE'
										ORDER BY To_Number(static_value)
										) d
								WHERE c.contractcode = contract.ccode(+) AND c.purpose_code = d.code(+) AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+) AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324) AND dl.portcode(+) = c.portcode AND To_Char(dl.code(+)) = To_Char(c.dealerbook) AND dl.asset_class_code(+) = 2
								
								UNION ALL
								
								SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Mutual Fund' product, securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(type_name), 'CLOSE ENDED', matdate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, scheme_code securitysymbol, market product_type, mf.scheme_name security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_number isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, descr deal_purpose, '' bsrnumber, dept_name, 0 stt, 0 BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, mf.iobj, sc.sectorname, payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig, sectormaster sc, dealerwiseprofitability dl, paymentmode pm, (
										SELECT code, descr, static_value
										FROM default_static_table
										WHERE MODULE_NAME = 'REVAL_PURPOSE'
										ORDER BY To_Number(static_value)
										) d
								WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1)) AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+) AND ig.sector = sc.SECTORCODE(+) AND mt.purpose_code = d.code(+) AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 5 AND pm.pay_mode_code = mt.payment_mode_code
								
								UNION ALL
								
								SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Equity' product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, mt.contractcode contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.scrip_code securitysymbol, market product_type, mf.scrip_name security_desc, subproduct underlying, mt.brokercode brokercode, brokeragedate, brokerage_curr, dealcharges.BROKERAGE_AMOUNT brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_no isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, Nvl(dealcharges.net_rate, Nvl(mt.netrate, 0)) netrate, Nvl(dealcharges.net_amount, 0) netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, mf.active_status, 0 nominal_price, '' deal_purpose, bm.bsrnumber, dept_name, dealcharges.stt stt, dealcharges.BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm, companymaster ig, brokerage_master bm, dealerwiseprofitability dl, (
										SELECT CONTRACTCODE, STT, BROKERAGE_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN (((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) + STT) WHEN TRANSACTION_TYPE_CODE = 305 THEN (((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) - STT) WHEN TRANSACTION_TYPE_CODE = 192 THEN ((PRICE_LEG1 * QTY_LEG1) + (BROKERAGE_AMOUNT + STT)) WHEN TRANSACTION_TYPE_CODE = 204 THEN ((PRICE_LEG1 * QTY_LEG1) - (BROKERAGE_AMOUNT + STT)) END AS NET_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN ((((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 WHEN TRANSACTION_TYPE_CODE = 305 THEN ((((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 END AS NET_RATE, (BROKERAGE_AMOUNT / QTY_LEG1) B_UNIT
										FROM (
											SELECT CONTRACTCODE, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_STT_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', CHARGE_AMOUNT, 'STT_EQ_PUR', charge_amount, 'STT_EQ_SALE', charge_amount, 0)) AS STT, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_SALE', CHARGE_AMOUNT, 'BROKER_CHARGE_EQ_PUR', charge_amount, 'BROKER_CHARGE_EQ_SALE', charge_amount, 0)) AS BROKERAGE_AMOUNT, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
											FROM (
												SELECT dc.CONTRACTCODE, dc.EVENT_CHARGE_CODE, dc.CHARGE_AMOUNT, MT.QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE, p.paramname, p.paramvalue
												FROM DEAL_CHARGES DC, MUTUALFUND_TRANSACT MT, params p
												WHERE DC.CONTRACTCODE = MT.CONTRACTCODE AND p.paramvalue(+) = dc.event_charge_code AND p.paramname IN ('BROKER_CHARGE_EVENT_ORDER_STT_PUR', 'BROKER_CHARGE_EVENT_ORDER_PUR', 'BROKER_CHARGE_EVENT_ORDER_SALE', 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', 'STT_EQ_PUR', 'STT_EQ_SALE', 'BROKER_CHARGE_EQ_PUR', 'BROKER_CHARGE_EQ_SALE') AND EVENT_CHARGE_CODE IN (p.paramvalue)
												)
											GROUP BY CONTRACTCODE, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
											)
										) dealcharges
								WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND Lower(assetclass) = 'equity' AND nvl(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND mt.transaction_type_code NOT IN (207) AND dealcharges.contractcode(+) = mt.contractcode AND mf.issuer = ig.compcode(+) AND mt.brokercode = bm.brokercode(+) AND mt.exchangecode = bm.exchange_code(+) AND bm.asset_class_code(+) = 7 AND bm.BR_WORKFLOWCODE(+) = 27 AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 7
								
								UNION ALL
								
								SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.profit_loss SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
										SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
										FROM equitymaster
										
										UNION ALL
										
										SELECT INDEX_NAME, INDEX_NAME, (
												SELECT compcode
												FROM companymaster
												WHERE compname = 'NONE' AND rownum = 1
												) ISSUER
										FROM index_master
										) eq, workflow ass, dealsymbol DE
								WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D'
								
								UNION ALL
								
								SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
								WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+) AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%')
								
								UNION ALL
								
								SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, ird.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, ird.contractcode securitysymbol, 'SECONDARY' product_type, ird.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, c.depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, c.branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, c.lotsize, c.noofcontracts, c.underlying underlying1, 0 sl_consideration, to_number(ird.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
								WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND'
								
								UNION ALL
								
								SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
								WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow
								
								UNION ALL
								
								SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(OPENENDED), 'YES', maturitydate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, alt.isinnumber isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, decode(nvl(qty_leg1, 0), 0, ai_quantity, qty_leg1) qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, alternateinvestment alt, (
										SELECT marketsymbol, symbol
										FROM dealsymbol
										WHERE transactiontypecode = '1099999999'
										) d
								WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D'
								) oscontract, (
									SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
									FROM assetclass a, workflow w, transactiontype t
									WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
									) t, (
									SELECT subsidiaryname, bookname, portname portfolio, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
									FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
									WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
									) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
							WHERE 1 = 1 AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
							)
						WHERE 1 = 1
						)
					ORDER BY dealno DESC
					) mainqry, (
						SELECT '[' || chargelist || ']' charge, contractcode, total_charge
						FROM (
							SELECT LISTAGG(charges, ',') WITHIN
							GROUP (
									ORDER BY contractcode
									) AS chargelist, contractcode, Sum(charge_amount) total_charge
							FROM (
								SELECT '{"name":"' || event_charge_code || '","value":"' || charge_amount || '"}' charges, contractcode, charge_amount
								FROM deal_charges
								)
							GROUP BY contractcode
							)
						) dc
				WHERE 1 = 1 AND transaction_type_code NOT IN (304, 305, 382, 383) AND mainqry.contractcode = dc.contractcode(+) and upper(nvl(confirmationstatus,'UNCONFIRMED')) = 'UNCONFIRMED'
				AND Upper(assetclass) IN ('CURRENCY') AND trunc(tradedate) BETWEEN to_date('<%-FROMDATE%>') AND to_date('<%-TODATE%>')
				`,
				"filter":["FROMDATE","TODATE"]
				},
			"update":{
			"source":`
			SELECT mainqry.*, dc.total_charge, dc.charge, Decode(Upper(Nvl(AUTHORISATIONSTATUS, 'NA')), 'NA', 'Authorise', 'A', 'Confirm', '') next_action
			FROM (
				SELECT SUBSIDIARYNAME, BOOKNAME, PORTFOLIO, PRODUCT, SUBPRODUCT, currency CURR, Decode(TRANSACTIONTYPE, 'Split In', 'Split', TRANSACTIONTYPE) TRANSACTIONTYPE, Decode(TRANSACTION_TYPE, 'Split In', 'Split', TRANSACTION_TYPE) TRANSACTION_TYPE, CONTRACTCODE, Decode(product, 'Swaps', SECURITYSYMBOL, CONTRACTCODE) CONTRACT_ID, TRADEDATE, To_Char(TRADEDATE, 'dd/MM/yyyy hh24:mi:ss') AS TRANSACTIONDATETIME, VALUEDATE, MATDATE, TRADERID, COUNTERPARTY, CATEGORY, '' TRANS_CATEGORY, SECURITY_DESC, PRINCIPAL, 0 WITHHOLDINGTAX, AMOUNT_LEG1, QTY_LEG1, PRICE_LEG1, 0 GROSSAMT, YIELD_LEG1, 0 ACCR_INTR_PU, ACCRUEDINTEREST, CONSIDERATION, POST_CONSIDERATION, POST_ACC_INTEREST_LEG1, POST_ACCRUEDINTEREST, SL_YIELD, SL_PRICE, SL_ACC_INT, contract_wac wac, contract_revalwac revalwac, CASE WHEN TRANSACTIONTYPECODE IN ('112', '127', '108', '204', '161', '104', '391') THEN (nvl(price_leg1, 0) - nvl(contract_wac, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('101') THEN (nvl(contract_wac, 0) - nvl(price_leg1, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328') THEN SLB_PROFIT_LOSS ELSE 0 END profit_loss, REPO_RATE, REFERENCE_NO REFCONTRACTNO, YIELDTO, BANKCURR, AGENCY1 AGENCY1NAME, BANKNAME1, ACCOUNT1, AGENCY2 AGENCY2NAME, BANKNAME2, ACCOUNT2, THEIR_AGENCY1 THEIR_AGENCY1NAME, '' THEIR_BANKNAME1, THEIR_ACCOUNT1, '' THEIR_AGENCY2NAME, THEIR_BANKNAME2, THEIR_ACCOUNT2, LOCALCURR, LOCALCURRRATE, LOCALCURRAMT, GLOBALCURR, GLOBALCURRRATE, GLOBALCURRAMT, GROUPCURR, GROUPCURRAMT, GROUPCURRRATE, 0 WITHHOLDINGTAX_PER, 0 EFFECTIVERATE_PER, 0 EFFECTIVERATE_AMT, 0 UPFRONTFEES_PER, 0 UPFRONTFEES_AMT, 0 OTHERS_PER, 0 OTHERS_AMT, 0 COVERRATE, 0 PREMIA_PER, '' PREMIA, 0 STAMPDUTY, SECURED, '' NEGOTIABLE, BROKERAGEDATE, 0 BROKERAGETYPEVALUE, '' BROKERNAME, BROKERCODE, BROKERAGE, BROKERAGE_CURR, '' BROKERAGETYPE, REMARKS, 0 SERVICETAXTYPE, 0 SERVICETAXRATE, 0 SERVICETAXAMT, 0 ACCOUNTCHARGE, 0 NETRATEFLAG, nvl(authorisationstatus, 'NA') AUTHORISATIONSTATUSCODE, AUTHORISATIONSTATUS, AUTHSTATUSBY, AUTHSTATUSON, AUTHSTATUSREMARKS, CONFIRMATIONSTATUS, CONFSTATUSBY, CONFSTATUSON, CONFSTATUSREMARKS, TRANSACTIONTYPE TRANSTYPE, '' CONTRACTTEMPLATE, DEALNO, GROUPDEALNO, 0 PAY_WASHRATE, '' HEDGEON, NOTIONALSTEPRULE, 0 CAPS, 0 FLOORS, RANGEBARRIERS, BRANCH, DEALTYPE, OPTIONAL01, OPTIONAL02, OPTIONAL03, OPTIONAL04, OPTIONAL05, '' SPOTRATESOURCES_ID, PRODUCT_TYPE, 0 EXCHANGE_RATE, 0 WASHRATE, '' SETTLEMENT, 0 STRATEGYID, SUBPRODUCT PRODUCT_CODE, CONTRACTSTRUCTURE, WORKFLOW, '' INITIAL_EXCHANGE, '' CASHFLOWGENERATION, '' EARLYTERMINATION, BOOKID, deal_location_code, DEPOSITORY, '' DELIVERY_MODE, DELIVERY_MODE_CODE, EXCHANGECODE, PORTCODE, TRANSACTIONTYPECODE TRANSACTION_TYPE_CODE, PAYMENTMODE1, BANKCODE1, PAYMENTMODE2, BANKCODE2, '' CP_PAYMENTMODE1, '' CP_BANKCODE1, SUBSIDIARYCODE, COUNTERCODE, '' COUNTERPARTY_DEALER, ASSETCLASS, currency CONSCURRENCY, NOSTRO_REF_NO, NOSTRODATE, REFERENCE_NO, RESTRUCTURE_CONTRACTCODE, ROLLOVER_CONTRACTCODE, BRANCH_REF_NO, CURRNAME, '' BORROW_TERM, BENCHMARKID, 0 PARVALUE, 0 OFFERINGPRICE, '' INTERESTMODE, INTEREST, MARKUP, DAYCOUNT, INTERESTDIRECTION, 0 PAYMENTFREQ, 0 RESETFREQ, '' RESETDATE, DISCOUNTCURVE, 0 COUPYEAR, DEALSOURCE, AMOUNT, QUANTITY, RATE, PRODUCTDESC, BROKER_NAME, BROKERAGEBANKCODE, BROKERAGEBANKNAME, BROKERAGE_AC, '' LOAN_DESCRIPTION, FACEVALUE, ISINO_CODE, SECURITYSYMBOL, 0 INTEREST_TAX_CAT_CODE, PRODUCT1, PCHARGERATE, PCHARGEAMT, 0 XIRRVALUE, '' CUSTOM_CONTRACTCODE, 0 TERMVALUE, '' ACCOUNTINGTYPE, '' REPAY_COMMENCEMENT_DATE, 0 LRN_NUMBER, 0 CUSTOM_PENALTYRATE, 0 LGBG_NUMBER, '' SUPPLIER, '' VESSEL_NAME, 0 CHARGES_PAID_TILL, '' LATEST_DATE_OF_SHIPMENT, '' PAYMENT_TERMS, 0 ORIGINAL_AMOUNT, 0 COMMISSION_PERCENTAGE, REMARKS REMARK, DEAL_REMARKS, EMAIL_STATUS, AUID, MATDATE MATURITY, INDEX_RATIO, Nvl(ORDER_STATUS, 'Order Pending') ORDER_STATUS, To_Char(order_conf_date, 'dd/MM/yyyy hh24:mi:ss') AS order_conf_date, order_conf_by, Nvl(RECON_STATUS, 'Unreconciled') RECON_STATUS, decode(upper(RECON_STATUS), 'RECONCILED', '', RECON_REMARKS) RECON_REMARKS, FD_NUMBER, FD_INTEREST_RATE, FD_TENOR, FD_AMOUNT, FD_AMOUNT_PER, (
						SELECT descr
						FROM default_static_table
						WHERE code = '365' AND module_name = 'asba_fd_daycount'
						) FD_DAY_COUNT, FD_INTEREST, decode(Nvl(final_price, 1), 0, 'F', 'T') FINAL_PRICE, issuer, exchange, netrate, netamount, bsr_code, lotsize, noofcontracts, underlying1 derivative_underlying, sl_consideration, active_status, nominal_price, deal_purpose, Nvl(reporting_asset_class, ASSETCLASS) REPORTING_ASSET_CLASS, bsrnumber, dept_name, Nvl(stt, 0) stt, brokerage_amount, dealerbook, iobj, sectorname, payment_mode, 'TRUE' display_auth_info, Upper('TRUE') printdealticket, primarymarkettype, acc_interest, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, Theirbankname, country, settleflag
				FROM (
					SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, Decode(Lower(assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', assetclass), assetclass) assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode, brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, bsr_code, netrate, netamount, lotsize, noofcontracts, underlying1, sl_consideration, active_status, nominal_price, deal_purpose, reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, sectorname, payment_mode, primarymarkettype, settleflag
					FROM (
						SELECT s.*, workflow, t.assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2, their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, dealno posdealno, portfolio Pos_portfolio, traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue, Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, osContract.depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, osContract.branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, cm8.bsr_code bsr_code, netrate, netamount, oscontract.lotsize, oscontract.noofcontracts, underlying1, sl_consideration, oscontract.active_status active_status, nominal_price, deal_purpose, ds.reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, oscontract.sectorname, oscontract.payment_mode, primarymarkettype, oscontract.settleflag settleflag
						FROM (
							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amt1 amount_leg1, amt1 qty_leg1, strikerate price_leg1, 0 yield_leg1, amt2 principal, '' deal_location_code, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag
							FROM fxmaster
							WHERE nvl(deletionstatus, 'ND') <> 'D' AND contractcode = '<%-CONTRACTCODE%>'
							
							UNION ALL
							
							SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, c.portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, CASE WHEN transaction_type_code IN (90, 91, 329, 330) THEN sl_date ELSE enddate END matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
											SELECT upper(PARAMVALUE)
											FROM params
											WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
											), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
												SELECT DISTINCT optional02
												FROM contractmaster
												WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
												) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security', s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, nvl(sl_consideration, 0), 1 active_status, nominal_price, descr deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, dealerwiseprofitability dl, (
									SELECT compcode, compname
									FROM companymaster
									) cm, (
									SELECT compcode, compname, is_taxable
									FROM companymaster
									) cm1, (
									SELECT c.contractcode ccode, c1.loan_description loan_desc
									FROM contractmaster c, contractmaster c1
									WHERE c.refcontractno = c1.contractcode
									) contract, (
									SELECT code, descr, static_value
									FROM default_static_table
									WHERE MODULE_NAME = 'REVAL_PURPOSE'
									ORDER BY To_Number(static_value)
									) d
							WHERE c.contractcode = contract.ccode(+) AND c.purpose_code = d.code(+) AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+) AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324) AND dl.portcode(+) = c.portcode AND To_Char(dl.code(+)) = To_Char(c.dealerbook) AND dl.asset_class_code(+) = 2 AND c.contractcode = '<%-CONTRACTCODE%>'
							
							UNION ALL
							
							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Mutual Fund' product, securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(type_name), 'CLOSE ENDED', matdate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, scheme_code securitysymbol, market product_type, mf.scheme_name security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_number isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, descr deal_purpose, '' bsrnumber, dept_name, 0 stt, 0 BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, mf.iobj, sc.sectorname, payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig, sectormaster sc, dealerwiseprofitability dl, paymentmode pm, (
									SELECT code, descr, static_value
									FROM default_static_table
									WHERE MODULE_NAME = 'REVAL_PURPOSE'
									ORDER BY To_Number(static_value)
									) d
							WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1)) AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+) AND ig.sector = sc.SECTORCODE(+) AND mt.purpose_code = d.code(+) AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 5 AND pm.pay_mode_code = mt.payment_mode_code AND contractcode = '<%-CONTRACTCODE%>'
							
							UNION ALL
							
							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Equity' product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, mt.contractcode contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.scrip_code securitysymbol, market product_type, mf.scrip_name security_desc, subproduct underlying, mt.brokercode brokercode, brokeragedate, brokerage_curr, dealcharges.BROKERAGE_AMOUNT brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_no isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, Nvl(dealcharges.net_rate, Nvl(mt.netrate, 0)) netrate, Nvl(dealcharges.net_amount, 0) netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, mf.active_status, 0 nominal_price, '' deal_purpose, bm.bsrnumber, dept_name, dealcharges.stt stt, dealcharges.BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm, companymaster ig, brokerage_master bm, dealerwiseprofitability dl, (
									SELECT CONTRACTCODE, STT, BROKERAGE_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN (((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) + STT) WHEN TRANSACTION_TYPE_CODE = 305 THEN (((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) - STT) WHEN TRANSACTION_TYPE_CODE = 192 THEN ((PRICE_LEG1 * QTY_LEG1) + (BROKERAGE_AMOUNT + STT)) WHEN TRANSACTION_TYPE_CODE = 204 THEN ((PRICE_LEG1 * QTY_LEG1) - (BROKERAGE_AMOUNT + STT)) END AS NET_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN ((((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 WHEN TRANSACTION_TYPE_CODE = 305 THEN ((((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 END AS NET_RATE, (BROKERAGE_AMOUNT / QTY_LEG1) B_UNIT
									FROM (
										SELECT CONTRACTCODE, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_STT_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', CHARGE_AMOUNT, 'STT_EQ_PUR', charge_amount, 'STT_EQ_SALE', charge_amount, 0)) AS STT, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_SALE', CHARGE_AMOUNT, 'BROKER_CHARGE_EQ_PUR', charge_amount, 'BROKER_CHARGE_EQ_SALE', charge_amount, 0)) AS BROKERAGE_AMOUNT, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
										FROM (
											SELECT dc.CONTRACTCODE, dc.EVENT_CHARGE_CODE, dc.CHARGE_AMOUNT, MT.QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE, p.paramname, p.paramvalue
											FROM DEAL_CHARGES DC, MUTUALFUND_TRANSACT MT, params p
											WHERE DC.CONTRACTCODE = MT.CONTRACTCODE AND p.paramvalue(+) = dc.event_charge_code AND p.paramname IN ('BROKER_CHARGE_EVENT_ORDER_STT_PUR', 'BROKER_CHARGE_EVENT_ORDER_PUR', 'BROKER_CHARGE_EVENT_ORDER_SALE', 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', 'STT_EQ_PUR', 'STT_EQ_SALE', 'BROKER_CHARGE_EQ_PUR', 'BROKER_CHARGE_EQ_SALE') AND EVENT_CHARGE_CODE IN (p.paramvalue)
											)
										GROUP BY CONTRACTCODE, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
										)
									) dealcharges
							WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND Lower(assetclass) = 'equity' AND nvl(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND mt.transaction_type_code NOT IN (207) AND dealcharges.contractcode(+) = mt.contractcode AND mf.issuer = ig.compcode(+) AND mt.brokercode = bm.brokercode(+) AND mt.exchangecode = bm.exchange_code(+) AND bm.asset_class_code(+) = 7 AND bm.BR_WORKFLOWCODE(+) = 27 AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 7 AND mt.contractcode = '<%-CONTRACTCODE%>'
							
							UNION ALL
							
							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.profit_loss SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
									SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
									FROM equitymaster
									
									UNION ALL
									
									SELECT INDEX_NAME, INDEX_NAME, (
											SELECT compcode
											FROM companymaster
											WHERE compname = 'NONE' AND rownum = 1
											) ISSUER
									FROM index_master
									) eq, workflow ass, dealsymbol DE
							WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D' AND mt.contractcode = '<%-CONTRACTCODE%>'
							
							UNION ALL
							
							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
							WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+) AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%') AND contractcode = '<%-CONTRACTCODE%>'
							
							UNION ALL
							
							SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, ird.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, ird.contractcode securitysymbol, 'SECONDARY' product_type, ird.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, c.depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, c.branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, c.lotsize, c.noofcontracts, c.underlying underlying1, 0 sl_consideration, to_number(ird.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
							WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND' AND c.contractcode = '<%-CONTRACTCODE%>'
							
							UNION ALL
							
							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
							WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow AND mt.contractcode = '<%-CONTRACTCODE%>'
							
							UNION ALL
							
							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(OPENENDED), 'YES', maturitydate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, alt.isinnumber isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, decode(nvl(qty_leg1, 0), 0, ai_quantity, qty_leg1) qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, alternateinvestment alt, (
									SELECT marketsymbol, symbol
									FROM dealsymbol
									WHERE transactiontypecode = '1099999999'
									) d
							WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D' AND contractcode = '<%-CONTRACTCODE%>'
							) oscontract, (
								SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
								FROM assetclass a, workflow w, transactiontype t
								WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
								) t, (
								SELECT subsidiaryname, bookname, portname portfolio, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
								FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
								WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
								) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
						WHERE 1 = 1 AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
						)
					WHERE 1 = 1
					)
				ORDER BY dealno DESC
				) mainqry, (
					SELECT '[' || chargelist || ']' charge, contractcode, total_charge
					FROM (
						SELECT LISTAGG(charges, ',') WITHIN
						GROUP (
								ORDER BY contractcode
								) AS chargelist, contractcode, Sum(charge_amount) total_charge
						FROM (
							SELECT '{"name":"' || event_charge_code || '","value":"' || charge_amount || '"}' charges, contractcode, charge_amount
							FROM deal_charges
							WHERE contractcode = '<%-CONTRACTCODE%>'
							)
						GROUP BY contractcode
						)
					) dc
			WHERE 1 = 1 AND transaction_type_code NOT IN (304, 305, 382, 383) AND mainqry.contractcode = dc.contractcode(+) and upper(nvl(confirmationstatus,'UNCONFIRMED')) = 'UNCONFIRMED'
				`,
				"filter":["CONTRACTCODE"]
				},
			"delete":{
				"source":``,
				"filter":["CONTRACTCODE"]
			}
		},
		{
            "collectionName": "other_assets_positions",
			"notificationFilter":[],
            "create": {
                        "source": `
                        SELECT *
                        FROM (
                        SELECT '<%-ASONDATE%>' asondate, os_asset_class asset_class, os_holding HOLDING, os_subsidiaryname subsidiaryname, os_bookname bookname, os_portfolio portfolio, costing_policy COSTING_POLICY, p.symbol SECURITYSYMBOL, os_security_desc security_desc, os_security_type security_type, (os_total_facevalue / os_total_quantity) FACEVALUE_PERUNIT, os_quantity quantity, os_cl_quantity cl_quantity, os_total_quantity total_quantity, os_cl_facevalue cl_facevalue, os_total_facevalue total_facevalue, os_wac wac, os_cl_bookvalue cl_bookvalue, os_total_bookvalue total_bookvalue, 0 revalwac, 0 REVAL_BOOKVALUE, SecAccrual.accruals, secaccrual.ACCRUAL_PER_DAY_UNIT, secaccrual.ACCRUALDATE accrual_date, ACCRUALSGLOBAL, ACCRUALLCYCURR, ACCRUALLCYRATE, ACCRUALLCY, ACCRUALSGROUP, ACCRUALSGROUPRATE, ACCRUALSGROUPCURR, ACCRUALSGLOBALCURR, ACCRUALSOSAMT, ACCRUALSGLOBALRATE, MTMDATE mtm_value_date, mtmprice * os_total_quantity mtm, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, MTMGLOBAL, MTMGROUP, pv01, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, NETACCRUALS, CONVEXITY, MTMYIELD, CREDITEXPOSURE, lastammortdate, secammort.AMMORT_PU, secammort.AMMORTIZATION, AMRT_GROUPRATE, AMRT_GROUPAMT, AMRT_GLOBALCURR, AMRT_GLOBALRATE, AMRT_GLOBALAMT, AMRT_GROUPCURR, AMRT_LCYAMT, AMRT_LCYRATE, AMRT_LCYCURR, decode(p.product, 'SECU', p.os_WAC - ((os_total_facevalue / os_total_quantity) + Nvl(Decode(alm.description, 'Irregular Redemption', premium, 'Irregular Cashflows', premium, REDEMPTION_PREMIUM), 0)), 0) premium_val, alm.TYPE, alm.REPORTING_ASSET_CLASS, alm.INTERESTMODE, alm.INTEREST, alm.ISSUER, p.os_issuername, (To_Date(alm.enddate) - To_Date('<%-ASONDATE%>')) residual, alm.ISIN_FACEVALUE, Nvl(Round((p.os_facevalue / decode(alm.isin_facevalue, 0, 1, alm.isin_facevalue)), 12), 0) ISIN_QTY, alm.isino_code isin, alm.CURRENCY, alm.description cashflow_type, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN To_Date('') ELSE ENDDATE END maturity, p.asset, sectorname sector, industryname industry, alm.category_subtype MIS_CATEGORY_NAME, p.portfolio portcode, p.pos_bookid bookid, p.pos_subsidiarycode SUBSIDIARYCODE, nvl(newmtmmethod, decode(product, 'SECU', 'Interpolation', 'Swaps')) mtmmethod, 'Securitywise' viewdata, os_workflow workflow, alm.contractcode, p.asset assetclass, 'dealsymbol.symbol' subproduct, alm.INTERESTDIRECTION, alm.DISCOUNTED, alm.contractdesc PRODUCT_DESCRIPTION, p.os_total_quantity OUTSTANDINGAMT, p.os_total_quantity OSQUANTITY, p.product PRODUCT_CODE, alm.COUPONAT, alm.DISCOUNTCURVE, alm.DAYCOUNT, alm.FRN_COMPOUNDING, alm.SETTLEMENTCONV, alm.MARKUP, alm.NOTIONALSTEPRULE, alm.RESETCALN, alm.SPREADCOMPOUNDING, alm.BENCHMARKID, alm.FRN_RESET_UNIT, alm.COUPYEAR, alm.CALCULATIONPERIOD, alm.RESETCALCTYPE, alm.FRN_RESETTYPE, alm.FRN_FLR, alm.FRN_CAP, alm.BEGN_STUB, alm.BEGN_STUBDATE, alm.BEGN_STUBIN, alm.BEGN_REFERENCEBENCHMARK, alm.BEGN_STUBVALUE, alm.END_STUB, alm.END_STUBDATE, alm.END_STUBIN, alm.END_REFERENCEBENCHMARK, alm.END_STUBVALUE, alm.ONMONTHENDS, alm.SHUT_PERIOD, alm.EOMADHERENCE, alm.CAPS, alm.FLOORS, alm.RANGEBARRIERS, alm.DESCRIPTION, alm.ENDDATE MATDATE, alm.STARTDATE, alm.ENDDATE, alm.INCLUDEIPDATE, alm.REDEMPTION_PREMIUM, alm.HEDGEON, alm.RATING1, p.os_osunit OSUNIT, alm.CP_EOM_CURRENTDATE, alm.DEPOSITORY_ID, alm.INCLUDE_LAST_IP_DATE, alm.CP_INCLUDE_ALL_IP_DATE, alm.CP_INCLUDE_IP_DATE, alm.INCLUDE_ALL_IP_DATE, p.event TRANSACTION_TYPE_CODE, 'NA' SELECTIONFLAG, alm.INT_ACC_IPDATE, nvl(exchangerate.mid, 1) exchrate, alm.newuploadkey uploadkey, '' EVENT, alm.ACCOUNTNO, alm.BANKCODE, alm.EARLYTERMINATION, alm.CANCELLABLE, alm.SPOTDATE, alm.RESETDATE, alm.FRN_RESET, alm.FRN_COMPOUNDING_TYPE, ALM.FRN, alm.YIELD_TYPE, alm.UNADJUSTEDENDDATE, alm.TRADEDATE, decode(Lower(p.os_workflow), 'security', decode(description, 'Discounted', 'Accretion', 'Ammortization'), 'NA') RESULT_FOR, alm.MANUAL_CASHFLOW, p.posamt_groupcurr GROUPCURR_CLEAR_AMT, p.POSAMT_GROUPCURR, p.GLOBALCURR, p.POSAMT_GLOBALCURR, posamt_globalcurr GLOBALCURR_CLEAR_AMT, p.GROUPCURR, p.LOCALCURR, p.POSAMT_LCY, posamt_lcy LCY_CLEAR_AMT, p.os_total_facevalue FACEVALUE, p.SYMBOL, alm.NPI_STATUS, alm.NPI_EFFECTIVE_DATE, alm.LISTED, p.os_clear_qty CLEAR_QTY, p.os_bookvalue pos_bookvalue, p.os_cl_facevalue CLEARFACEVALUE, p.os_cl_bookvalue CLEAR_BOOKVALUE, Decode(Upper(listed), 'TRUE', 1, 'FALSE', 0) listingstatus, Decode(Upper(p.os_workflow), 'FUTURES', Decode(Sign(p.POS_BOOKVALUE), - 1, 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND'), os_HOLDING) HOLDINGTYPE, To_Date(enddate) - To_Date('<%-ASONDATE%>') RES_MATURITY, alm.ISSUER_GROUP, alm.CAR_PERC, alm.NETWORTH, alm.illiquid LIQUIDITYSTATUS, alm.ISSUER_RATING, alm.ISSUER_GRP_RATING, alm.REGULATORY_CATEGORY, alm.RATED_AMOUNT, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN 0 ELSE Round((To_Date(enddate) - To_Date('<%-ASONDATE%>')) / 365, 2) END AS RESIDUAL_IN_YRS, Decode(listed, 'True', 'Listed', 'False', 'UnListed', listed) LISTING_CATEGORY, alm.sec_remarks DEAL_TYPE, p.os_holding HOLDINGFOROPTM, (nvl(p.os_total_bookvalue, 0) * alm.interestdirection) NET_MM_BORROWING, alm.SEC_DEAL_LOC, CASE WHEN p.os_workflow = 'Options' AND To_Date('<%-ASONDATE%>', 'dd/MM/yyyy') >= To_Date(ENDDATE, 'dd/MM/yyyy') THEN 'True' ELSE 'False' END OPTREDEM, Decode(p.os_holding, 'SECURITY IN SHORT', nvl(p.os_total_facevalue, 0), nvl(p.os_total_facevalue, 0) * - 1) net_short_position, to_date('', 'dd/MM/yyyy') LASTIPDATE, to_date('', 'dd/MM/yyyy') IPSTARTDATE, to_date('', 'dd/MM/yyyy') NEXTINTDATE, 0 INFLATION_ADJ_FACE_VALUE, 0 INDEX_RATIO, 0 INFLATION_ADJ_CL_FACE_VALUE, Nvl(secaccrual.taxrate, 0) TAXRATE, Nvl(secaccrual.GROSSAMT, 0) GROSSAMT, Nvl(secaccrual.TAXAMT, 0) TAXAMT, decode(product, 'IRSC', '8', 'LOAN', '6') WORKFLOWCODE, '' LASTISSUEDATE, '' NEXTRESETDATE, To_Date('<%-ASONDATE%>') || p.symbol || p.os_subsidiaryname || p.os_bookname || p.os_portfolio || p.os_holding eventkey, (CASE WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') ELSE 0 END) NOTIFIED_AMOUNT, alm.payment_mode PAYMENT_MODE, notch RATING_NOTCH, p.os_issuername issuername, mtmprice price, p.
                            os_yield YIELD, alm.mm_workflow, pm.isconstituent isconstituent, 'Trade' next_action
                        FROM positions p, portmast pm, (
                            SELECT *
                            FROM swapaccruals
                            WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND accrualdate = (
                                SELECT Max(accrualdate) accrualdate
                                FROM swapaccruals
                                WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND trunc(accrualdate) = to_date('<%-ASONDATE%>')
                                )
                            ) SecAccrual, (
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(MTM_WORKFLOW, 'Options', CASE WHEN holding_type = 'Short Call' OR holding_type = 'Short Put' THEN 'SECURITY IN HAND - SHORT' WHEN holding_type = 'Long Call' OR holding_type = 'Long Put' THEN 'SECURITY IN HAND' ELSE holding_type END, holding_type) holding_type
                            FROM (
                                SELECT SECURITYSYMBOL, MTMDATE, MTMVALUE, MTMMETHOD, NETACCRUALS, NETACCRUALSPV, CONTRACTCODE, ENTRYTYPE, PV01, CREDITEXPOSURE, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, SYSTEMVALUE, REMARKS, DELTA, GAMMA, VEGA, THETA, RHO_CURR1, RHO_CURR2, MARGIN, MTMGLOBAL, MTMGROUP, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTM_ASSETCLASS, MTMPRICE, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, MTM_VIEWDATA, MTMYIELD, CONVEXITY, MTM_BOOKVALUE, MTM_WORKFLOW, MTM_OPTIONTYPE, DEALBUCKET, PV_FACTOR, REVISED_PL, INTERPOLATED_BENCHMARK_RATE, SPOT_MTMRATE, SPOT_MTMAMOUNT, SPOT_MTMPL, RECORD_ID, HOLDING_TYPE
                                FROM mtmvalues
								WHERE mtm_product IN ('Security', 'Equity', 'Mutual Funds', 'Options', 'Alternative Investment') 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                )
                    
                            UNION ALL
                    
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(holding_type, 'Short Futures', 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND') holding_type
                            FROM (
                                SELECT contractcode SECURITYSYMBOL, MTMDATE, 0 MTMVALUE, '' MTMMETHOD, 0 NETACCRUALS, 0 NETACCRUALSPV, CONTRACTCODE, '' ENTRYTYPE, 0 PV01, 0 CREDITEXPOSURE, 0 MTMEXCHRATE, 0 MTMLCY, 0 DURATION, 0 MODIFIEDDURATION, 0 SYSTEMVALUE, '' REMARKS, 0 DELTA, 0 GAMMA, 0 VEGA, 0 THETA, 0 RHO_CURR1, 0 RHO_CURR2, 0 MARGIN, '' MTMGLOBAL, '' MTMGROUP, '' MTMGLOBALCURR, '' MTMGROUPCURR, '' MTMLCYCURR, MTM_ASSETCLASS, Avg(MTMPRICE) MTMPRICE, 0 MTMGLOBALRATE, 0 MTMGROUPRATE, 0 MTMLCYRATE, 0 MTMPL, 0 MTMPLLCY, 0 MTMPLGLOBAL, 0 MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, '' MTM_VIEWDATA, 0 MTMYIELD, 0 CONVEXITY, 0 MTM_BOOKVALUE, '' MTM_WORKFLOW, '' MTM_OPTIONTYPE, '' DEALBUCKET, 0 PV_FACTOR, 0 REVISED_PL, 0 INTERPOLATED_BENCHMARK_RATE, 0 SPOT_MTMRATE, 0 SPOT_MTMAMOUNT, 0 SPOT_MTMPL, 0 RECORD_ID, holding_type
                                FROM mtmvalues
								WHERE mtm_product = 'Futures' 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                GROUP BY contractcode, mtm_subsidiary, mtm_bookid, mtm_assetclass, mtm_product, mtm_portfolio, mtm_product, mtm_curr, MTMDATE, holding_type
                                )
                            ) secmtm, holding_wac hw, (
                            SELECT *
                            FROM ammortization
                            WHERE (ammortdate, AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL) IN (
                                SELECT Max(ammortdate), AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                FROM ammortization
                                WHERE trunc(AMMORTDATE) <= to_date( '<%-ASONDATE%>')
                                GROUP BY AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                )
                            ) SecAmmort, (
                            SELECT contractcode, max(ammortdate) LastAmmortDate
                            FROM ammortization
                            WHERE ammortdate <= '<%-ASONDATE%>'
                            GROUP BY contractcode
                            ) LastAmmortDate, allmasters alm, (
                            SELECT *
                            FROM spotratesources sp, exchangerate e
                            WHERE trunc(exchangedate) = to_date('<%-ASONDATE%>', 'dd/MM/yyyy') AND e.source = sp.spotratesources_id
                            ) ExchangeRate, (
                            SELECT Sum(premium) premium, securitysymbol
                            FROM securityevents
                            WHERE ACTUALDATE >= '<%-ASONDATE%>' AND EVENTDESCRIPTION = 'Partial Redemption'
                            GROUP BY securitysymbol
                            ) premium
                        WHERE nvl(lastdeal, 0) = 1 AND p.portfolio = pm.portcode AND Nvl(deletionstatus, 'ND') = 'ND' AND alm.securitysymbol(+) = p.symbol AND lower(product) NOT IN ('cash') 
						AND lower(asset) IN ('interest rate', 'security', 'equity', 'mutual funds', 'currency', 'alternative investment') AND p.holding = hw.ORIGINAL_HOLDING_TYPE(+) AND p.symbol = SecAccrual.contractcode(+) AND p.symbol = SecMTM.contractcode(+) AND p.os_subsidiaryname = SecMTM.mtm_subsidiary(+) AND p.os_bookname = SecMTM.mtm_bookid(+) AND p.asset = SecMTM.mtm_assetclass(+) AND p.os_workflow = SecMTM.mtm_product(+) AND p.os_portfolio = SecMTM.mtm_portfolio(+) AND p.os_holding = SecMTM.holding_type(+) AND p.symbol = SecAmmort.contractcode(+) AND p.os_subsidiaryname = SecAmmort.amrt_subsidiaryname(+) AND p.os_bookname = secammort.amrt_bookname(+) AND p.os_portfolio = secammort.amrt_portfolio(+) AND LastAmmortDate.contractcode(+) = p.symbol AND p.os_subsidiaryname = SecAccrual.acc_subsidiary(+) AND p.os_bookname = SecAccrual.acc_bookid(+) AND p.asset = SecAccrual.acc_assetclass(+) AND p.os_workflow = SecAccrual.acc_product(+) AND p.os_portfolio = SecAccrual.acc_portfolio(+) AND alm.Currency = ExchangeRate.base(+) AND ExchangeRate.derive(+) = 'INR' AND PREMIUM.securitysymbol(+) = alm.securitysymbol AND p.os_total_quantity > 0
                        )
                        WHERE 1 = 1 AND holding <> 'ORDER MANDATE' AND SECURITYSYMBOL = '<%-SECURITYSYMBOL%>' 
						AND SUBSIDIARYCODE = '<%-SUBSIDIARYCODE%>' AND BOOKID = '<%-BOOKID%>' AND PORTCODE = '<%-PORTCODE%>'
    `,
                "filter": ["ASONDATE","SUBSIDIARYCODE","BOOKID","PORTCODE","SECURITYSYMBOL"]
            },
            "refresh": {
                "source": `
                        SELECT *
                        FROM (
                        SELECT '<%-ASONDATE%>' asondate, os_asset_class asset_class, os_holding HOLDING, os_subsidiaryname subsidiaryname, os_bookname bookname, os_portfolio portfolio, costing_policy COSTING_POLICY, p.symbol SECURITYSYMBOL, os_security_desc security_desc, os_security_type security_type, (os_total_facevalue / os_total_quantity) FACEVALUE_PERUNIT, os_quantity quantity, os_cl_quantity cl_quantity, os_total_quantity total_quantity, os_cl_facevalue cl_facevalue, os_total_facevalue total_facevalue, os_wac wac, os_cl_bookvalue cl_bookvalue, os_total_bookvalue total_bookvalue, 0 revalwac, 0 REVAL_BOOKVALUE, SecAccrual.accruals, secaccrual.ACCRUAL_PER_DAY_UNIT, secaccrual.ACCRUALDATE accrual_date, ACCRUALSGLOBAL, ACCRUALLCYCURR, ACCRUALLCYRATE, ACCRUALLCY, ACCRUALSGROUP, ACCRUALSGROUPRATE, ACCRUALSGROUPCURR, ACCRUALSGLOBALCURR, ACCRUALSOSAMT, ACCRUALSGLOBALRATE, MTMDATE mtm_value_date, mtmprice * os_total_quantity mtm, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, MTMGLOBAL, MTMGROUP, pv01, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, NETACCRUALS, CONVEXITY, MTMYIELD, CREDITEXPOSURE, lastammortdate, secammort.AMMORT_PU, secammort.AMMORTIZATION, AMRT_GROUPRATE, AMRT_GROUPAMT, AMRT_GLOBALCURR, AMRT_GLOBALRATE, AMRT_GLOBALAMT, AMRT_GROUPCURR, AMRT_LCYAMT, AMRT_LCYRATE, AMRT_LCYCURR, decode(p.product, 'SECU', p.os_WAC - ((os_total_facevalue / os_total_quantity) + Nvl(Decode(alm.description, 'Irregular Redemption', premium, 'Irregular Cashflows', premium, REDEMPTION_PREMIUM), 0)), 0) premium_val, alm.TYPE, alm.REPORTING_ASSET_CLASS, alm.INTERESTMODE, alm.INTEREST, alm.ISSUER, p.os_issuername, (To_Date(alm.enddate) - To_Date('<%-ASONDATE%>')) residual, alm.ISIN_FACEVALUE, Nvl(Round((p.os_facevalue / decode(alm.isin_facevalue, 0, 1, alm.isin_facevalue)), 12), 0) ISIN_QTY, alm.isino_code isin, alm.CURRENCY, alm.description cashflow_type, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN To_Date('') ELSE ENDDATE END maturity, p.asset, sectorname sector, industryname industry, alm.category_subtype MIS_CATEGORY_NAME, p.portfolio portcode, p.pos_bookid bookid, p.pos_subsidiarycode SUBSIDIARYCODE, nvl(newmtmmethod, decode(product, 'SECU', 'Interpolation', 'Swaps')) mtmmethod, 'Securitywise' viewdata, os_workflow workflow, alm.contractcode, p.asset assetclass, 'dealsymbol.symbol' subproduct, alm.INTERESTDIRECTION, alm.DISCOUNTED, alm.contractdesc PRODUCT_DESCRIPTION, p.os_total_quantity OUTSTANDINGAMT, p.os_total_quantity OSQUANTITY, p.product PRODUCT_CODE, alm.COUPONAT, alm.DISCOUNTCURVE, alm.DAYCOUNT, alm.FRN_COMPOUNDING, alm.SETTLEMENTCONV, alm.MARKUP, alm.NOTIONALSTEPRULE, alm.RESETCALN, alm.SPREADCOMPOUNDING, alm.BENCHMARKID, alm.FRN_RESET_UNIT, alm.COUPYEAR, alm.CALCULATIONPERIOD, alm.RESETCALCTYPE, alm.FRN_RESETTYPE, alm.FRN_FLR, alm.FRN_CAP, alm.BEGN_STUB, alm.BEGN_STUBDATE, alm.BEGN_STUBIN, alm.BEGN_REFERENCEBENCHMARK, alm.BEGN_STUBVALUE, alm.END_STUB, alm.END_STUBDATE, alm.END_STUBIN, alm.END_REFERENCEBENCHMARK, alm.END_STUBVALUE, alm.ONMONTHENDS, alm.SHUT_PERIOD, alm.EOMADHERENCE, alm.CAPS, alm.FLOORS, alm.RANGEBARRIERS, alm.DESCRIPTION, alm.ENDDATE MATDATE, alm.STARTDATE, alm.ENDDATE, alm.INCLUDEIPDATE, alm.REDEMPTION_PREMIUM, alm.HEDGEON, alm.RATING1, p.os_osunit OSUNIT, alm.CP_EOM_CURRENTDATE, alm.DEPOSITORY_ID, alm.INCLUDE_LAST_IP_DATE, alm.CP_INCLUDE_ALL_IP_DATE, alm.CP_INCLUDE_IP_DATE, alm.INCLUDE_ALL_IP_DATE, p.event TRANSACTION_TYPE_CODE, 'NA' SELECTIONFLAG, alm.INT_ACC_IPDATE, nvl(exchangerate.mid, 1) exchrate, alm.newuploadkey uploadkey, '' EVENT, alm.ACCOUNTNO, alm.BANKCODE, alm.EARLYTERMINATION, alm.CANCELLABLE, alm.SPOTDATE, alm.RESETDATE, alm.FRN_RESET, alm.FRN_COMPOUNDING_TYPE, ALM.FRN, alm.YIELD_TYPE, alm.UNADJUSTEDENDDATE, alm.TRADEDATE, decode(Lower(p.os_workflow), 'security', decode(description, 'Discounted', 'Accretion', 'Ammortization'), 'NA') RESULT_FOR, alm.MANUAL_CASHFLOW, p.posamt_groupcurr GROUPCURR_CLEAR_AMT, p.POSAMT_GROUPCURR, p.GLOBALCURR, p.POSAMT_GLOBALCURR, posamt_globalcurr GLOBALCURR_CLEAR_AMT, p.GROUPCURR, p.LOCALCURR, p.POSAMT_LCY, posamt_lcy LCY_CLEAR_AMT, p.os_total_facevalue FACEVALUE, p.SYMBOL, alm.NPI_STATUS, alm.NPI_EFFECTIVE_DATE, alm.LISTED, p.os_clear_qty CLEAR_QTY, p.os_bookvalue pos_bookvalue, p.os_cl_facevalue CLEARFACEVALUE, p.os_cl_bookvalue CLEAR_BOOKVALUE, Decode(Upper(listed), 'TRUE', 1, 'FALSE', 0) listingstatus, Decode(Upper(p.os_workflow), 'FUTURES', Decode(Sign(p.POS_BOOKVALUE), - 1, 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND'), os_HOLDING) HOLDINGTYPE, To_Date(enddate) - To_Date('<%-ASONDATE%>') RES_MATURITY, alm.ISSUER_GROUP, alm.CAR_PERC, alm.NETWORTH, alm.illiquid LIQUIDITYSTATUS, alm.ISSUER_RATING, alm.ISSUER_GRP_RATING, alm.REGULATORY_CATEGORY, alm.RATED_AMOUNT, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN 0 ELSE Round((To_Date(enddate) - To_Date('<%-ASONDATE%>')) / 365, 2) END AS RESIDUAL_IN_YRS, Decode(listed, 'True', 'Listed', 'False', 'UnListed', listed) LISTING_CATEGORY, alm.sec_remarks DEAL_TYPE, p.os_holding HOLDINGFOROPTM, (nvl(p.os_total_bookvalue, 0) * alm.interestdirection) NET_MM_BORROWING, alm.SEC_DEAL_LOC, CASE WHEN p.os_workflow = 'Options' AND To_Date('<%-ASONDATE%>', 'dd/MM/yyyy') >= To_Date(ENDDATE, 'dd/MM/yyyy') THEN 'True' ELSE 'False' END OPTREDEM, Decode(p.os_holding, 'SECURITY IN SHORT', nvl(p.os_total_facevalue, 0), nvl(p.os_total_facevalue, 0) * - 1) net_short_position, to_date('', 'dd/MM/yyyy') LASTIPDATE, to_date('', 'dd/MM/yyyy') IPSTARTDATE, to_date('', 'dd/MM/yyyy') NEXTINTDATE, 0 INFLATION_ADJ_FACE_VALUE, 0 INDEX_RATIO, 0 INFLATION_ADJ_CL_FACE_VALUE, Nvl(secaccrual.taxrate, 0) TAXRATE, Nvl(secaccrual.GROSSAMT, 0) GROSSAMT, Nvl(secaccrual.TAXAMT, 0) TAXAMT, decode(product, 'IRSC', '8', 'LOAN', '6') WORKFLOWCODE, '' LASTISSUEDATE, '' NEXTRESETDATE, To_Date('<%-ASONDATE%>') || p.symbol || p.os_subsidiaryname || p.os_bookname || p.os_portfolio || p.os_holding eventkey, (CASE WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') ELSE 0 END) NOTIFIED_AMOUNT, alm.payment_mode PAYMENT_MODE, notch RATING_NOTCH, p.os_issuername issuername, mtmprice price, p.
                            os_yield YIELD, alm.mm_workflow, pm.isconstituent isconstituent, 'Trade' next_action
                        FROM positions p, portmast pm, (
                            SELECT *
                            FROM swapaccruals
                            WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND accrualdate = (
                                SELECT Max(accrualdate) accrualdate
                                FROM swapaccruals
                                WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND trunc(accrualdate) = to_date('<%-ASONDATE%>')
                                )
                            ) SecAccrual, (
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(MTM_WORKFLOW, 'Options', CASE WHEN holding_type = 'Short Call' OR holding_type = 'Short Put' THEN 'SECURITY IN HAND - SHORT' WHEN holding_type = 'Long Call' OR holding_type = 'Long Put' THEN 'SECURITY IN HAND' ELSE holding_type END, holding_type) holding_type
                            FROM (
                                SELECT SECURITYSYMBOL, MTMDATE, MTMVALUE, MTMMETHOD, NETACCRUALS, NETACCRUALSPV, CONTRACTCODE, ENTRYTYPE, PV01, CREDITEXPOSURE, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, SYSTEMVALUE, REMARKS, DELTA, GAMMA, VEGA, THETA, RHO_CURR1, RHO_CURR2, MARGIN, MTMGLOBAL, MTMGROUP, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTM_ASSETCLASS, MTMPRICE, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, MTM_VIEWDATA, MTMYIELD, CONVEXITY, MTM_BOOKVALUE, MTM_WORKFLOW, MTM_OPTIONTYPE, DEALBUCKET, PV_FACTOR, REVISED_PL, INTERPOLATED_BENCHMARK_RATE, SPOT_MTMRATE, SPOT_MTMAMOUNT, SPOT_MTMPL, RECORD_ID, HOLDING_TYPE
                                FROM mtmvalues
								WHERE mtm_product IN ('Security', 'Equity', 'Mutual Funds', 'Options', 'Alternative Investment') 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                )
                    
                            UNION ALL
                    
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(holding_type, 'Short Futures', 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND') holding_type
                            FROM (
                                SELECT contractcode SECURITYSYMBOL, MTMDATE, 0 MTMVALUE, '' MTMMETHOD, 0 NETACCRUALS, 0 NETACCRUALSPV, CONTRACTCODE, '' ENTRYTYPE, 0 PV01, 0 CREDITEXPOSURE, 0 MTMEXCHRATE, 0 MTMLCY, 0 DURATION, 0 MODIFIEDDURATION, 0 SYSTEMVALUE, '' REMARKS, 0 DELTA, 0 GAMMA, 0 VEGA, 0 THETA, 0 RHO_CURR1, 0 RHO_CURR2, 0 MARGIN, '' MTMGLOBAL, '' MTMGROUP, '' MTMGLOBALCURR, '' MTMGROUPCURR, '' MTMLCYCURR, MTM_ASSETCLASS, Avg(MTMPRICE) MTMPRICE, 0 MTMGLOBALRATE, 0 MTMGROUPRATE, 0 MTMLCYRATE, 0 MTMPL, 0 MTMPLLCY, 0 MTMPLGLOBAL, 0 MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, '' MTM_VIEWDATA, 0 MTMYIELD, 0 CONVEXITY, 0 MTM_BOOKVALUE, '' MTM_WORKFLOW, '' MTM_OPTIONTYPE, '' DEALBUCKET, 0 PV_FACTOR, 0 REVISED_PL, 0 INTERPOLATED_BENCHMARK_RATE, 0 SPOT_MTMRATE, 0 SPOT_MTMAMOUNT, 0 SPOT_MTMPL, 0 RECORD_ID, holding_type
                                FROM mtmvalues
								WHERE mtm_product = 'Futures' 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                GROUP BY contractcode, mtm_subsidiary, mtm_bookid, mtm_assetclass, mtm_product, mtm_portfolio, mtm_product, mtm_curr, MTMDATE, holding_type
                                )
                            ) secmtm, holding_wac hw, (
                            SELECT *
                            FROM ammortization
                            WHERE (ammortdate, AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL) IN (
                                SELECT Max(ammortdate), AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                FROM ammortization
                                WHERE trunc(AMMORTDATE) <= to_date( '<%-ASONDATE%>')
                                GROUP BY AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                )
                            ) SecAmmort, (
                            SELECT contractcode, max(ammortdate) LastAmmortDate
                            FROM ammortization
                            WHERE ammortdate <= '<%-ASONDATE%>'
                            GROUP BY contractcode
                            ) LastAmmortDate, allmasters alm, (
                            SELECT *
                            FROM spotratesources sp, exchangerate e
                            WHERE trunc(exchangedate) = to_date('<%-ASONDATE%>', 'dd/MM/yyyy') AND e.source = sp.spotratesources_id
                            ) ExchangeRate, (
                            SELECT Sum(premium) premium, securitysymbol
                            FROM securityevents
                            WHERE ACTUALDATE >= '<%-ASONDATE%>' AND EVENTDESCRIPTION = 'Partial Redemption'
                            GROUP BY securitysymbol
                            ) premium
                        WHERE nvl(lastdeal, 0) = 1 AND p.portfolio = pm.portcode AND Nvl(deletionstatus, 'ND') = 'ND' AND alm.securitysymbol(+) = p.symbol AND lower(product) NOT IN ('cash') 
						AND lower(asset) IN ('equity', 'mutual funds', 'others', 'alternative investment')  AND p.holding = hw.ORIGINAL_HOLDING_TYPE(+) AND p.symbol = SecAccrual.contractcode(+) AND p.symbol = SecMTM.contractcode(+) AND p.os_subsidiaryname = SecMTM.mtm_subsidiary(+) AND p.os_bookname = SecMTM.mtm_bookid(+) AND p.asset = SecMTM.mtm_assetclass(+) AND p.os_workflow = SecMTM.mtm_product(+) AND p.os_portfolio = SecMTM.mtm_portfolio(+) AND p.os_holding = SecMTM.holding_type(+) AND p.symbol = SecAmmort.contractcode(+) AND p.os_subsidiaryname = SecAmmort.amrt_subsidiaryname(+) AND p.os_bookname = secammort.amrt_bookname(+) AND p.os_portfolio = secammort.amrt_portfolio(+) AND LastAmmortDate.contractcode(+) = p.symbol AND p.os_subsidiaryname = SecAccrual.acc_subsidiary(+) AND p.os_bookname = SecAccrual.acc_bookid(+) AND p.asset = SecAccrual.acc_assetclass(+) AND p.os_workflow = SecAccrual.acc_product(+) AND p.os_portfolio = SecAccrual.acc_portfolio(+) AND alm.Currency = ExchangeRate.base(+) AND ExchangeRate.derive(+) = 'INR' AND PREMIUM.securitysymbol(+) = alm.securitysymbol AND p.os_total_quantity > 0
                        )
                        WHERE 1 = 1 AND holding <> 'ORDER MANDATE'
                        `,
                "filter": [""]
            },
            "update": {
                "source": `
                        SELECT *
                        FROM (
                        SELECT '<%-ASONDATE%>' asondate, os_asset_class asset_class, os_holding HOLDING, os_subsidiaryname subsidiaryname, os_bookname bookname, os_portfolio portfolio, costing_policy COSTING_POLICY, p.symbol SECURITYSYMBOL, os_security_desc security_desc, os_security_type security_type, (os_total_facevalue / os_total_quantity) FACEVALUE_PERUNIT, os_quantity quantity, os_cl_quantity cl_quantity, os_total_quantity total_quantity, os_cl_facevalue cl_facevalue, os_total_facevalue total_facevalue, os_wac wac, os_cl_bookvalue cl_bookvalue, os_total_bookvalue total_bookvalue, 0 revalwac, 0 REVAL_BOOKVALUE, SecAccrual.accruals, secaccrual.ACCRUAL_PER_DAY_UNIT, secaccrual.ACCRUALDATE accrual_date, ACCRUALSGLOBAL, ACCRUALLCYCURR, ACCRUALLCYRATE, ACCRUALLCY, ACCRUALSGROUP, ACCRUALSGROUPRATE, ACCRUALSGROUPCURR, ACCRUALSGLOBALCURR, ACCRUALSOSAMT, ACCRUALSGLOBALRATE, MTMDATE mtm_value_date, mtmprice * os_total_quantity mtm, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, MTMGLOBAL, MTMGROUP, pv01, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, NETACCRUALS, CONVEXITY, MTMYIELD, CREDITEXPOSURE, lastammortdate, secammort.AMMORT_PU, secammort.AMMORTIZATION, AMRT_GROUPRATE, AMRT_GROUPAMT, AMRT_GLOBALCURR, AMRT_GLOBALRATE, AMRT_GLOBALAMT, AMRT_GROUPCURR, AMRT_LCYAMT, AMRT_LCYRATE, AMRT_LCYCURR, decode(p.product, 'SECU', p.os_WAC - ((os_total_facevalue / os_total_quantity) + Nvl(Decode(alm.description, 'Irregular Redemption', premium, 'Irregular Cashflows', premium, REDEMPTION_PREMIUM), 0)), 0) premium_val, alm.TYPE, alm.REPORTING_ASSET_CLASS, alm.INTERESTMODE, alm.INTEREST, alm.ISSUER, p.os_issuername, (To_Date(alm.enddate) - To_Date('<%-ASONDATE%>')) residual, alm.ISIN_FACEVALUE, Nvl(Round((p.os_facevalue / decode(alm.isin_facevalue, 0, 1, alm.isin_facevalue)), 12), 0) ISIN_QTY, alm.isino_code isin, alm.CURRENCY, alm.description cashflow_type, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN To_Date('') ELSE ENDDATE END maturity, p.asset, sectorname sector, industryname industry, alm.category_subtype MIS_CATEGORY_NAME, p.portfolio portcode, p.pos_bookid bookid, p.pos_subsidiarycode SUBSIDIARYCODE, nvl(newmtmmethod, decode(product, 'SECU', 'Interpolation', 'Swaps')) mtmmethod, 'Securitywise' viewdata, os_workflow workflow, alm.contractcode, p.asset assetclass, 'dealsymbol.symbol' subproduct, alm.INTERESTDIRECTION, alm.DISCOUNTED, alm.contractdesc PRODUCT_DESCRIPTION, p.os_total_quantity OUTSTANDINGAMT, p.os_total_quantity OSQUANTITY, p.product PRODUCT_CODE, alm.COUPONAT, alm.DISCOUNTCURVE, alm.DAYCOUNT, alm.FRN_COMPOUNDING, alm.SETTLEMENTCONV, alm.MARKUP, alm.NOTIONALSTEPRULE, alm.RESETCALN, alm.SPREADCOMPOUNDING, alm.BENCHMARKID, alm.FRN_RESET_UNIT, alm.COUPYEAR, alm.CALCULATIONPERIOD, alm.RESETCALCTYPE, alm.FRN_RESETTYPE, alm.FRN_FLR, alm.FRN_CAP, alm.BEGN_STUB, alm.BEGN_STUBDATE, alm.BEGN_STUBIN, alm.BEGN_REFERENCEBENCHMARK, alm.BEGN_STUBVALUE, alm.END_STUB, alm.END_STUBDATE, alm.END_STUBIN, alm.END_REFERENCEBENCHMARK, alm.END_STUBVALUE, alm.ONMONTHENDS, alm.SHUT_PERIOD, alm.EOMADHERENCE, alm.CAPS, alm.FLOORS, alm.RANGEBARRIERS, alm.DESCRIPTION, alm.ENDDATE MATDATE, alm.STARTDATE, alm.ENDDATE, alm.INCLUDEIPDATE, alm.REDEMPTION_PREMIUM, alm.HEDGEON, alm.RATING1, p.os_osunit OSUNIT, alm.CP_EOM_CURRENTDATE, alm.DEPOSITORY_ID, alm.INCLUDE_LAST_IP_DATE, alm.CP_INCLUDE_ALL_IP_DATE, alm.CP_INCLUDE_IP_DATE, alm.INCLUDE_ALL_IP_DATE, p.event TRANSACTION_TYPE_CODE, 'NA' SELECTIONFLAG, alm.INT_ACC_IPDATE, nvl(exchangerate.mid, 1) exchrate, alm.newuploadkey uploadkey, '' EVENT, alm.ACCOUNTNO, alm.BANKCODE, alm.EARLYTERMINATION, alm.CANCELLABLE, alm.SPOTDATE, alm.RESETDATE, alm.FRN_RESET, alm.FRN_COMPOUNDING_TYPE, ALM.FRN, alm.YIELD_TYPE, alm.UNADJUSTEDENDDATE, alm.TRADEDATE, decode(Lower(p.os_workflow), 'security', decode(description, 'Discounted', 'Accretion', 'Ammortization'), 'NA') RESULT_FOR, alm.MANUAL_CASHFLOW, p.posamt_groupcurr GROUPCURR_CLEAR_AMT, p.POSAMT_GROUPCURR, p.GLOBALCURR, p.POSAMT_GLOBALCURR, posamt_globalcurr GLOBALCURR_CLEAR_AMT, p.GROUPCURR, p.LOCALCURR, p.POSAMT_LCY, posamt_lcy LCY_CLEAR_AMT, p.os_total_facevalue FACEVALUE, p.SYMBOL, alm.NPI_STATUS, alm.NPI_EFFECTIVE_DATE, alm.LISTED, p.os_clear_qty CLEAR_QTY, p.os_bookvalue pos_bookvalue, p.os_cl_facevalue CLEARFACEVALUE, p.os_cl_bookvalue CLEAR_BOOKVALUE, Decode(Upper(listed), 'TRUE', 1, 'FALSE', 0) listingstatus, Decode(Upper(p.os_workflow), 'FUTURES', Decode(Sign(p.POS_BOOKVALUE), - 1, 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND'), os_HOLDING) HOLDINGTYPE, To_Date(enddate) - To_Date('<%-ASONDATE%>') RES_MATURITY, alm.ISSUER_GROUP, alm.CAR_PERC, alm.NETWORTH, alm.illiquid LIQUIDITYSTATUS, alm.ISSUER_RATING, alm.ISSUER_GRP_RATING, alm.REGULATORY_CATEGORY, alm.RATED_AMOUNT, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN 0 ELSE Round((To_Date(enddate) - To_Date('<%-ASONDATE%>')) / 365, 2) END AS RESIDUAL_IN_YRS, Decode(listed, 'True', 'Listed', 'False', 'UnListed', listed) LISTING_CATEGORY, alm.sec_remarks DEAL_TYPE, p.os_holding HOLDINGFOROPTM, (nvl(p.os_total_bookvalue, 0) * alm.interestdirection) NET_MM_BORROWING, alm.SEC_DEAL_LOC, CASE WHEN p.os_workflow = 'Options' AND To_Date('<%-ASONDATE%>', 'dd/MM/yyyy') >= To_Date(ENDDATE, 'dd/MM/yyyy') THEN 'True' ELSE 'False' END OPTREDEM, Decode(p.os_holding, 'SECURITY IN SHORT', nvl(p.os_total_facevalue, 0), nvl(p.os_total_facevalue, 0) * - 1) net_short_position, to_date('', 'dd/MM/yyyy') LASTIPDATE, to_date('', 'dd/MM/yyyy') IPSTARTDATE, to_date('', 'dd/MM/yyyy') NEXTINTDATE, 0 INFLATION_ADJ_FACE_VALUE, 0 INDEX_RATIO, 0 INFLATION_ADJ_CL_FACE_VALUE, Nvl(secaccrual.taxrate, 0) TAXRATE, Nvl(secaccrual.GROSSAMT, 0) GROSSAMT, Nvl(secaccrual.TAXAMT, 0) TAXAMT, decode(product, 'IRSC', '8', 'LOAN', '6') WORKFLOWCODE, '' LASTISSUEDATE, '' NEXTRESETDATE, To_Date('<%-ASONDATE%>') || p.symbol || p.os_subsidiaryname || p.os_bookname || p.os_portfolio || p.os_holding eventkey, (CASE WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') ELSE 0 END) NOTIFIED_AMOUNT, alm.payment_mode PAYMENT_MODE, notch RATING_NOTCH, p.os_issuername issuername, mtmprice price, p.
                            os_yield YIELD, alm.mm_workflow, pm.isconstituent isconstituent, 'Trade' next_action
                        FROM positions p, portmast pm, (
                            SELECT *
                            FROM swapaccruals
                            WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND accrualdate = (
                                SELECT Max(accrualdate) accrualdate
                                FROM swapaccruals
                                WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND trunc(accrualdate) = to_date('<%-ASONDATE%>')
                                )
                            ) SecAccrual, (
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(MTM_WORKFLOW, 'Options', CASE WHEN holding_type = 'Short Call' OR holding_type = 'Short Put' THEN 'SECURITY IN HAND - SHORT' WHEN holding_type = 'Long Call' OR holding_type = 'Long Put' THEN 'SECURITY IN HAND' ELSE holding_type END, holding_type) holding_type
                            FROM (
                                SELECT SECURITYSYMBOL, MTMDATE, MTMVALUE, MTMMETHOD, NETACCRUALS, NETACCRUALSPV, CONTRACTCODE, ENTRYTYPE, PV01, CREDITEXPOSURE, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, SYSTEMVALUE, REMARKS, DELTA, GAMMA, VEGA, THETA, RHO_CURR1, RHO_CURR2, MARGIN, MTMGLOBAL, MTMGROUP, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTM_ASSETCLASS, MTMPRICE, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, MTM_VIEWDATA, MTMYIELD, CONVEXITY, MTM_BOOKVALUE, MTM_WORKFLOW, MTM_OPTIONTYPE, DEALBUCKET, PV_FACTOR, REVISED_PL, INTERPOLATED_BENCHMARK_RATE, SPOT_MTMRATE, SPOT_MTMAMOUNT, SPOT_MTMPL, RECORD_ID, HOLDING_TYPE
                                FROM mtmvalues
								WHERE mtm_product IN ('Security', 'Equity', 'Mutual Funds', 'Options', 'Alternative Investment') 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                )
                    
                            UNION ALL
                    
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(holding_type, 'Short Futures', 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND') holding_type
                            FROM (
                                SELECT contractcode SECURITYSYMBOL, MTMDATE, 0 MTMVALUE, '' MTMMETHOD, 0 NETACCRUALS, 0 NETACCRUALSPV, CONTRACTCODE, '' ENTRYTYPE, 0 PV01, 0 CREDITEXPOSURE, 0 MTMEXCHRATE, 0 MTMLCY, 0 DURATION, 0 MODIFIEDDURATION, 0 SYSTEMVALUE, '' REMARKS, 0 DELTA, 0 GAMMA, 0 VEGA, 0 THETA, 0 RHO_CURR1, 0 RHO_CURR2, 0 MARGIN, '' MTMGLOBAL, '' MTMGROUP, '' MTMGLOBALCURR, '' MTMGROUPCURR, '' MTMLCYCURR, MTM_ASSETCLASS, Avg(MTMPRICE) MTMPRICE, 0 MTMGLOBALRATE, 0 MTMGROUPRATE, 0 MTMLCYRATE, 0 MTMPL, 0 MTMPLLCY, 0 MTMPLGLOBAL, 0 MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, '' MTM_VIEWDATA, 0 MTMYIELD, 0 CONVEXITY, 0 MTM_BOOKVALUE, '' MTM_WORKFLOW, '' MTM_OPTIONTYPE, '' DEALBUCKET, 0 PV_FACTOR, 0 REVISED_PL, 0 INTERPOLATED_BENCHMARK_RATE, 0 SPOT_MTMRATE, 0 SPOT_MTMAMOUNT, 0 SPOT_MTMPL, 0 RECORD_ID, holding_type
                                FROM mtmvalues
								WHERE mtm_product = 'Futures' 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                GROUP BY contractcode, mtm_subsidiary, mtm_bookid, mtm_assetclass, mtm_product, mtm_portfolio, mtm_product, mtm_curr, MTMDATE, holding_type
                                )
                            ) secmtm, holding_wac hw, (
                            SELECT *
                            FROM ammortization
                            WHERE (ammortdate, AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL) IN (
                                SELECT Max(ammortdate), AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                FROM ammortization
                                WHERE trunc(AMMORTDATE) <= to_date( '<%-ASONDATE%>')
                                GROUP BY AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                )
                            ) SecAmmort, (
                            SELECT contractcode, max(ammortdate) LastAmmortDate
                            FROM ammortization
                            WHERE ammortdate <= '<%-ASONDATE%>'
                            GROUP BY contractcode
                            ) LastAmmortDate, allmasters alm, (
                            SELECT *
                            FROM spotratesources sp, exchangerate e
                            WHERE trunc(exchangedate) = to_date('<%-ASONDATE%>', 'dd/MM/yyyy') AND e.source = sp.spotratesources_id
                            ) ExchangeRate, (
                            SELECT Sum(premium) premium, securitysymbol
                            FROM securityevents
                            WHERE ACTUALDATE >= '<%-ASONDATE%>' AND EVENTDESCRIPTION = 'Partial Redemption'
                            GROUP BY securitysymbol
                            ) premium
                        WHERE nvl(lastdeal, 0) = 1 AND p.portfolio = pm.portcode AND Nvl(deletionstatus, 'ND') = 'ND' AND alm.securitysymbol(+) = p.symbol AND lower(product) NOT IN ('cash') AND lower(asset) IN ('interest rate', 'security', 'equity', 'mutual funds', 'currency', 'alternative investment') AND p.holding = hw.ORIGINAL_HOLDING_TYPE(+) AND p.symbol = SecAccrual.contractcode(+) AND p.symbol = SecMTM.contractcode(+) AND p.os_subsidiaryname = SecMTM.mtm_subsidiary(+) AND p.os_bookname = SecMTM.mtm_bookid(+) AND p.asset = SecMTM.mtm_assetclass(+) AND p.os_workflow = SecMTM.mtm_product(+) AND p.os_portfolio = SecMTM.mtm_portfolio(+) AND p.os_holding = SecMTM.holding_type(+) AND p.symbol = SecAmmort.contractcode(+) AND p.os_subsidiaryname = SecAmmort.amrt_subsidiaryname(+) AND p.os_bookname = secammort.amrt_bookname(+) AND p.os_portfolio = secammort.amrt_portfolio(+) AND LastAmmortDate.contractcode(+) = p.symbol AND p.os_subsidiaryname = SecAccrual.acc_subsidiary(+) AND p.os_bookname = SecAccrual.acc_bookid(+) AND p.asset = SecAccrual.acc_assetclass(+) AND p.os_workflow = SecAccrual.acc_product(+) AND p.os_portfolio = SecAccrual.acc_portfolio(+) AND alm.Currency = ExchangeRate.base(+) AND ExchangeRate.derive(+) = 'INR' AND PREMIUM.securitysymbol(+) = alm.securitysymbol AND p.os_total_quantity > 0
                        )
                        WHERE 1 = 1 AND holding <> 'ORDER MANDATE' AND SECURITYSYMBOL = '<%-SECURITYSYMBOL%>' AND SUBSIDIARYCODE = '<%-SUBSIDIARYCODE%>' AND BOOKID = '<%-BOOKID%>' AND PORTCODE = '<%-PORTCODE%>'
            `,
                "filter": ["ASONDATE","SUBSIDIARYCODE","BOOKID","PORTCODE","SECURITYSYMBOL"]
            },
            "delete": {
                "source": "",
                "filter": ["ASONDATE","SUBSIDIARYCODE","BOOKID","PORTCODE","SECURITYSYMBOL"]
            },
        },
		{
			"collectionName":"other_assets_deallisting",
			"notificationFilter":[],
			"create":{
			"source":`SELECT mainqry.*, dc.total_charge,dc.charge,Decode(Upper(Nvl(AUTHORISATIONSTATUS,'NA')), 'NA', 'Authorise', 'A', 'Confirm','') next_action 
			FROM (
				SELECT SUBSIDIARYNAME, BOOKNAME, PORTFOLIO, PRODUCT, SUBPRODUCT, currency CURR, Decode(TRANSACTIONTYPE, 'Split In', 'Split', TRANSACTIONTYPE) TRANSACTIONTYPE, Decode(TRANSACTION_TYPE, 'Split In', 'Split', TRANSACTION_TYPE) TRANSACTION_TYPE, CONTRACTCODE, Decode(product, 'Swaps', SECURITYSYMBOL, CONTRACTCODE) CONTRACT_ID, TRADEDATE, To_Char(TRADEDATE, 'dd/MM/yyyy hh24:mi:ss') AS TRANSACTIONDATETIME, VALUEDATE, MATDATE, TRADERID, COUNTERPARTY, CATEGORY, '' TRANS_CATEGORY, SECURITY_DESC, PRINCIPAL, 0 WITHHOLDINGTAX, AMOUNT_LEG1, QTY_LEG1, PRICE_LEG1, 0 GROSSAMT, YIELD_LEG1, 0 ACCR_INTR_PU, ACCRUEDINTEREST, CONSIDERATION, POST_CONSIDERATION, POST_ACC_INTEREST_LEG1, POST_ACCRUEDINTEREST, SL_YIELD, SL_PRICE, SL_ACC_INT, contract_wac wac, contract_revalwac revalwac, CASE WHEN TRANSACTIONTYPECODE IN ('112', '127', '108', '204', '161', '104', '391') THEN (nvl(price_leg1, 0) - nvl(contract_wac, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('101') THEN (nvl(contract_wac, 0) - nvl(price_leg1, 0)
									) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328') THEN SLB_PROFIT_LOSS ELSE 0 END profit_loss, REPO_RATE, REFERENCE_NO REFCONTRACTNO, YIELDTO, BANKCURR, AGENCY1 AGENCY1NAME, BANKNAME1, ACCOUNT1, AGENCY2 AGENCY2NAME, BANKNAME2, ACCOUNT2, THEIR_AGENCY1 THEIR_AGENCY1NAME, '' THEIR_BANKNAME1, THEIR_ACCOUNT1, '' THEIR_AGENCY2NAME, THEIR_BANKNAME2, THEIR_ACCOUNT2, LOCALCURR, LOCALCURRRATE, LOCALCURRAMT, GLOBALCURR, GLOBALCURRRATE, GLOBALCURRAMT, GROUPCURR, GROUPCURRAMT, GROUPCURRRATE, 0 WITHHOLDINGTAX_PER, 0 EFFECTIVERATE_PER, 0 EFFECTIVERATE_AMT, 0 UPFRONTFEES_PER, 0 UPFRONTFEES_AMT, 0 OTHERS_PER, 0 OTHERS_AMT, 0 COVERRATE, 0 PREMIA_PER, '' PREMIA, 0 STAMPDUTY, SECURED, '' NEGOTIABLE, BROKERAGEDATE, 0 BROKERAGETYPEVALUE, '' BROKERNAME, BROKERCODE, BROKERAGE, BROKERAGE_CURR, '' BROKERAGETYPE, REMARKS, 0 SERVICETAXTYPE, 0 SERVICETAXRATE, 0 SERVICETAXAMT, 0 ACCOUNTCHARGE, 0 NETRATEFLAG, nvl(authorisationstatus, 'NA') AUTHORISATIONSTATUSCODE, AUTHORISATIONSTATUS,
					AUTHSTATUSBY, AUTHSTATUSON, AUTHSTATUSREMARKS, CONFIRMATIONSTATUS, CONFSTATUSBY, CONFSTATUSON, CONFSTATUSREMARKS, TRANSACTIONTYPE TRANSTYPE, '' CONTRACTTEMPLATE, DEALNO, GROUPDEALNO, 0 PAY_WASHRATE, '' HEDGEON, NOTIONALSTEPRULE, 0 CAPS, 0 FLOORS, RANGEBARRIERS, BRANCH, DEALTYPE, OPTIONAL01, OPTIONAL02, OPTIONAL03, OPTIONAL04, OPTIONAL05, '' SPOTRATESOURCES_ID, PRODUCT_TYPE, 0 EXCHANGE_RATE, 0 WASHRATE, '' SETTLEMENT, 0 STRATEGYID, SUBPRODUCT PRODUCT_CODE, CONTRACTSTRUCTURE, WORKFLOW, '' INITIAL_EXCHANGE, '' CASHFLOWGENERATION, '' EARLYTERMINATION, BOOKID, deal_location_code, DEPOSITORY, '' DELIVERY_MODE, DELIVERY_MODE_CODE, EXCHANGECODE, PORTCODE, TRANSACTIONTYPECODE TRANSACTION_TYPE_CODE, PAYMENTMODE1, BANKCODE1, PAYMENTMODE2, BANKCODE2, '' CP_PAYMENTMODE1, '' CP_BANKCODE1, SUBSIDIARYCODE, COUNTERCODE, '' COUNTERPARTY_DEALER, ASSETCLASS, currency CONSCURRENCY, NOSTRO_REF_NO, NOSTRODATE, REFERENCE_NO, RESTRUCTURE_CONTRACTCODE, ROLLOVER_CONTRACTCODE, BRANCH_REF_NO, CURRNAME, '' BORROW_TERM, BENCHMARKID, 0 PARVALUE, 0 OFFERINGPRICE, '' INTERESTMODE, INTEREST, MARKUP,
					DAYCOUNT, INTERESTDIRECTION, 0 PAYMENTFREQ, 0 RESETFREQ, '' RESETDATE, DISCOUNTCURVE, 0 COUPYEAR, DEALSOURCE, AMOUNT, QUANTITY, RATE, PRODUCTDESC, BROKER_NAME, BROKERAGEBANKCODE, BROKERAGEBANKNAME, BROKERAGE_AC, '' LOAN_DESCRIPTION, FACEVALUE, ISINO_CODE, SECURITYSYMBOL, 0 INTEREST_TAX_CAT_CODE, PRODUCT1, PCHARGERATE, PCHARGEAMT, 0 XIRRVALUE, '' CUSTOM_CONTRACTCODE, 0 TERMVALUE, '' ACCOUNTINGTYPE, '' REPAY_COMMENCEMENT_DATE, 0 LRN_NUMBER, 0 CUSTOM_PENALTYRATE, 0 LGBG_NUMBER, '' SUPPLIER, '' VESSEL_NAME, 0 CHARGES_PAID_TILL, '' LATEST_DATE_OF_SHIPMENT, '' PAYMENT_TERMS, 0 ORIGINAL_AMOUNT, 0 COMMISSION_PERCENTAGE, REMARKS REMARK, DEAL_REMARKS, EMAIL_STATUS, AUID, MATDATE MATURITY, INDEX_RATIO, Nvl(ORDER_STATUS, 'Order Pending') ORDER_STATUS, To_Char(order_conf_date, 'dd/MM/yyyy hh24:mi:ss') AS order_conf_date, order_conf_by, Nvl(RECON_STATUS, 'Unreconciled') RECON_STATUS, decode(upper(RECON_STATUS), 'RECONCILED', '', RECON_REMARKS) RECON_REMARKS, FD_NUMBER, FD_INTEREST_RATE, FD_TENOR, FD_AMOUNT, FD_AMOUNT_PER, (
						SELECT descr
						FROM default_static_table
						WHERE code = '365' AND module_name = 'asba_fd_daycount'
						) FD_DAY_COUNT, FD_INTEREST, decode(Nvl(final_price, 1), 0, 'F', 'T') FINAL_PRICE, issuer, exchange, netrate, netamount, bsr_code, lotsize, noofcontracts, underlying1 derivative_underlying, sl_consideration, active_status, nominal_price, deal_purpose, Nvl(reporting_asset_class, ASSETCLASS) REPORTING_ASSET_CLASS, bsrnumber, dept_name, Nvl(stt, 0) stt, brokerage_amount, dealerbook, iobj, sectorname, payment_mode, 'TRUE' display_auth_info, Upper('TRUE') printdealticket, primarymarkettype, acc_interest, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, Theirbankname, country, settleflag
				FROM (
					SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, Decode(Lower(assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', assetclass), assetclass) assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No
						, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode,
						brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date, index_ratio, auid, post_accruedinterest,
						posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, bsr_code, netrate, netamount, lotsize, noofcontracts, underlying1, sl_consideration, active_status, nominal_price, deal_purpose, reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, sectorname, payment_mode, primarymarkettype, settleflag
					FROM (
						SELECT s.*, workflow, t.assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2,
							their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, dealno posdealno, portfolio Pos_portfolio, traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue,
							Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1,
							price_leg1, yield_leg1, principal, deal_location_code, osContract.depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, osContract.branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, cm8.bsr_code bsr_code, netrate, netamount, oscontract.lotsize, oscontract.noofcontracts, underlying1, sl_consideration, oscontract.active_status active_status, nominal_price, deal_purpose, ds.reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, oscontract.sectorname, oscontract.payment_mode, primarymarkettype, oscontract.settleflag settleflag
						FROM (
							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks,
								reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc,
								to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amt1 amount_leg1, amt1 qty_leg1, strikerate price_leg1, 0 yield_leg1, amt2 principal, '' deal_location_code, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0
								netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag
							FROM fxmaster
							WHERE nvl(deletionstatus, 'ND') <> 'D'
					AND contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, c.portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, CASE WHEN transaction_type_code IN (90, 91, 329, 330) THEN sl_date ELSE enddate END matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
											SELECT upper(PARAMVALUE)
											FROM params
											WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
											), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
												SELECT DISTINCT optional02
												FROM contractmaster
												WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
												) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower
									(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security'
									, s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0
								fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, nvl(sl_consideration, 0), 1 active_status, nominal_price, descr deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, dealerwiseprofitability dl, (
									SELECT compcode, compname
									FROM companymaster
									) cm, (
									SELECT compcode, compname, is_taxable
									FROM companymaster
									) cm1, (
									SELECT c.contractcode ccode, c1.loan_description loan_desc
									FROM contractmaster c, contractmaster c1
									WHERE c.refcontractno = c1.contractcode
									) contract, (
									SELECT code, descr, static_value
									FROM default_static_table
									WHERE MODULE_NAME = 'REVAL_PURPOSE'
									ORDER BY To_Number(static_value)
									) d
							WHERE c.contractcode = contract.ccode(+) AND c.purpose_code = d.code(+)
					AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer
					AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+)
					AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324) AND dl.portcode(+) = c.portcode
					AND To_Char(dl.code(+)) = To_Char(c.dealerbook) AND dl.asset_class_code(+) = 2
					AND c.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Mutual Fund' product, securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(type_name), 'CLOSE ENDED', matdate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt,
								accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, scheme_code securitysymbol, market product_type, mf.scheme_name security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode,
									'') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_number isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1
								principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, descr deal_purpose, '' bsrnumber, dept_name, 0 stt, 0 BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, mf.iobj, sc.sectorname, payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig, sectormaster sc, dealerwiseprofitability dl, paymentmode pm, (
									SELECT code, descr, static_value
									FROM default_static_table
									WHERE MODULE_NAME = 'REVAL_PURPOSE'
									ORDER BY To_Number(static_value)
									) d
							WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1))
					AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+)
					AND ig.sector = sc.SECTORCODE(+) AND mt.purpose_code = d.code(+) AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook)
					AND dl.asset_class_code(+) = 5 AND pm.pay_mode_code = mt.payment_mode_code
					AND contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Equity' product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, mt.contractcode contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt
								taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.scrip_code securitysymbol, market product_type, mf.scrip_name security_desc, subproduct underlying, mt.brokercode brokercode, brokeragedate, brokerage_curr, dealcharges.BROKERAGE_AMOUNT brokerage, brokeragebank
								, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_no isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1,
								amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, Nvl(dealcharges.net_rate, Nvl(mt.netrate, 0)) netrate, Nvl(dealcharges.net_amount, 0) netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, mf.active_status, 0 nominal_price, '' deal_purpose, bm.bsrnumber, dept_name, dealcharges.stt stt, dealcharges.BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm, companymaster ig, brokerage_master bm, dealerwiseprofitability dl, (
									SELECT CONTRACTCODE, STT, BROKERAGE_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN (((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) + STT) WHEN TRANSACTION_TYPE_CODE = 305 THEN (((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) - STT) WHEN TRANSACTION_TYPE_CODE = 192 THEN ((PRICE_LEG1 * QTY_LEG1) + (BROKERAGE_AMOUNT + STT)) WHEN TRANSACTION_TYPE_CODE = 204 THEN ((PRICE_LEG1 * QTY_LEG1) - (BROKERAGE_AMOUNT + STT)
														) END AS NET_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN ((((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 WHEN TRANSACTION_TYPE_CODE = 305 THEN ((((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 END AS NET_RATE, (BROKERAGE_AMOUNT / QTY_LEG1) B_UNIT
									FROM (
										SELECT CONTRACTCODE, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_STT_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', CHARGE_AMOUNT, 'STT_EQ_PUR', charge_amount, 'STT_EQ_SALE', charge_amount, 0)) AS STT, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_SALE', CHARGE_AMOUNT, 'BROKER_CHARGE_EQ_PUR', charge_amount, 'BROKER_CHARGE_EQ_SALE', charge_amount, 0)) AS BROKERAGE_AMOUNT, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
										FROM (
											SELECT dc.CONTRACTCODE, dc.EVENT_CHARGE_CODE, dc.CHARGE_AMOUNT, MT.QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE, p.paramname, p.paramvalue
											FROM DEAL_CHARGES DC, MUTUALFUND_TRANSACT MT, params p
											WHERE DC.CONTRACTCODE = MT.CONTRACTCODE AND p.paramvalue(+) = dc.event_charge_code AND p.paramname IN ('BROKER_CHARGE_EVENT_ORDER_STT_PUR', 'BROKER_CHARGE_EVENT_ORDER_PUR', 'BROKER_CHARGE_EVENT_ORDER_SALE', 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', 'STT_EQ_PUR', 'STT_EQ_SALE', 'BROKER_CHARGE_EQ_PUR', 'BROKER_CHARGE_EQ_SALE') AND EVENT_CHARGE_CODE IN (p.paramvalue)
											)
										GROUP BY CONTRACTCODE, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
										)
									) dealcharges
							WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND Lower(assetclass) = 'equity' AND nvl(deletionstatus, 'ND') <> 'D'
					AND mf.ratingagency_no = ra.ratingagency_no(+) AND mt.transaction_type_code NOT IN (207) AND dealcharges.contractcode(+) = mt.contractcode
					AND mf.issuer = ig.compcode(+) AND mt.brokercode = bm.brokercode(+) AND mt.exchangecode = bm.exchange_code(+) AND bm.asset_class_code(+) = 7
					AND bm.BR_WORKFLOWCODE(+) = 27 AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 7
					 AND mt.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01,
								optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.
								settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.profit_loss SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto,
								nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
									SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
									FROM equitymaster

									UNION ALL

									SELECT INDEX_NAME, INDEX_NAME, (
											SELECT compcode
											FROM companymaster
											WHERE compname = 'NONE' AND rownum = 1
											) ISSUER
									FROM index_master
									) eq, workflow ass, dealsymbol DE
							WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code
					AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D'
					 AND mt.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02
								optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term,
								'' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0
								) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
							WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+)
					AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%')
					 AND contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, ird.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03
								optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, ird.contractcode securitysymbol, 'SECONDARY' product_type, ird.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency
								currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, c.depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, c.branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0)
								contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, c.lotsize, c.noofcontracts, c.underlying underlying1, 0 sl_consideration, to_number(ird.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
							WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow
					AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND'
					 AND c.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01,
								optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.
								settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(
									contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
							WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode
					AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow
					 AND mt.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(OPENENDED), 'YES', maturitydate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt,
								accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode,
								'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, alt.isinnumber isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, decode(nvl(qty_leg1, 0), 0, ai_quantity, qty_leg1) qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository,
								bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, alternateinvestment alt, (
									SELECT marketsymbol, symbol
									FROM dealsymbol
									WHERE transactiontypecode = '1099999999'
									) d
							WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D'
					 AND contractcode = '<%-CONTRACTCODE%>'
							) oscontract, (
								SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
								FROM assetclass a, workflow w, transactiontype t
								WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
								) t, (
								SELECT subsidiaryname, bookname, portname portfolio, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
								FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
								WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
								) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
						WHERE 1 = 1 AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
						)
					WHERE 1 = 1
					)
				ORDER BY dealno DESC
					) mainqry
				,(SELECT '['||chargelist||']' charge, contractcode, total_charge FROM (
				SELECT LISTAGG(charges, ',') WITHIN GROUP (ORDER BY contractcode) AS chargelist, contractcode, Sum(charge_amount) total_charge
				FROM
				(
				SELECT '{"name":"'||event_charge_code||'","value":"'||charge_amount||'"}' charges, contractcode, charge_amount FROM deal_charges
				where contractcode = '<%-CONTRACTCODE%>'
				)
				GROUP BY  contractcode)) dc
				WHERE 1 = 1 AND transaction_type_code NOT IN (304, 305, 382, 383)
				AND mainqry.contractcode = dc.contractcode(+) and upper(nvl(confirmationstatus,'UNCONFIRMED')) = 'UNCONFIRMED'
			`,
        "filter":["CONTRACTCODE"]
        },
		"refresh":{
			"source":`
				SELECT mainqry.*, dc.total_charge,dc.charge, Decode(Upper(Nvl(AUTHORISATIONSTATUS, 'NA')), 'NA', 'Authorise', 'A', 'Confirm', '') next_action
				FROM (
					SELECT SUBSIDIARYNAME, BOOKNAME, PORTFOLIO, PRODUCT, SUBPRODUCT, currency CURR, Decode(TRANSACTIONTYPE, 'Split In', 'Split', TRANSACTIONTYPE) TRANSACTIONTYPE, Decode(TRANSACTION_TYPE, 'Split In', 'Split', TRANSACTION_TYPE) TRANSACTION_TYPE, CONTRACTCODE, Decode(product, 'Swaps', SECURITYSYMBOL, CONTRACTCODE) CONTRACT_ID, TRADEDATE, To_Char(TRADEDATE, 'dd/MM/yyyy hh24:mi:ss') AS TRANSACTIONDATETIME, VALUEDATE, MATDATE, TRADERID, COUNTERPARTY, CATEGORY, '' TRANS_CATEGORY, SECURITY_DESC, PRINCIPAL, 0 WITHHOLDINGTAX, AMOUNT_LEG1, QTY_LEG1, PRICE_LEG1, 0 GROSSAMT, YIELD_LEG1, 0 ACCR_INTR_PU, ACCRUEDINTEREST, CONSIDERATION, POST_CONSIDERATION, POST_ACC_INTEREST_LEG1, POST_ACCRUEDINTEREST, SL_YIELD, SL_PRICE, SL_ACC_INT, contract_wac wac, contract_revalwac revalwac, CASE WHEN TRANSACTIONTYPECODE IN ('112', '127', '108', '204', '161', '104', '391') THEN (nvl(price_leg1, 0) - nvl(contract_wac, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('101') THEN (nvl(contract_wac, 0) - nvl(price_leg1, 0)
										) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328') THEN SLB_PROFIT_LOSS ELSE 0 END profit_loss, REPO_RATE, REFERENCE_NO REFCONTRACTNO, YIELDTO, BANKCURR, AGENCY1 AGENCY1NAME, BANKNAME1, ACCOUNT1, AGENCY2 AGENCY2NAME, BANKNAME2, ACCOUNT2, THEIR_AGENCY1 THEIR_AGENCY1NAME, '' THEIR_BANKNAME1, THEIR_ACCOUNT1, '' THEIR_AGENCY2NAME, THEIR_BANKNAME2, THEIR_ACCOUNT2, LOCALCURR, LOCALCURRRATE, LOCALCURRAMT, GLOBALCURR, GLOBALCURRRATE, GLOBALCURRAMT, GROUPCURR, GROUPCURRAMT, GROUPCURRRATE, 0 WITHHOLDINGTAX_PER, 0 EFFECTIVERATE_PER, 0 EFFECTIVERATE_AMT, 0 UPFRONTFEES_PER, 0 UPFRONTFEES_AMT, 0 OTHERS_PER, 0 OTHERS_AMT, 0 COVERRATE, 0 PREMIA_PER, '' PREMIA, 0 STAMPDUTY, SECURED, '' NEGOTIABLE, BROKERAGEDATE, 0 BROKERAGETYPEVALUE, '' BROKERNAME, BROKERCODE, BROKERAGE, BROKERAGE_CURR, '' BROKERAGETYPE, REMARKS, 0 SERVICETAXTYPE, 0 SERVICETAXRATE, 0 SERVICETAXAMT, 0 ACCOUNTCHARGE, 0 NETRATEFLAG, nvl(authorisationstatus, 'NA') AUTHORISATIONSTATUSCODE, AUTHORISATIONSTATUS,
						AUTHSTATUSBY, AUTHSTATUSON, AUTHSTATUSREMARKS, CONFIRMATIONSTATUS, CONFSTATUSBY, CONFSTATUSON, CONFSTATUSREMARKS, TRANSACTIONTYPE TRANSTYPE, '' CONTRACTTEMPLATE, DEALNO, GROUPDEALNO, 0 PAY_WASHRATE, '' HEDGEON, NOTIONALSTEPRULE, 0 CAPS, 0 FLOORS, RANGEBARRIERS, BRANCH, DEALTYPE, OPTIONAL01, OPTIONAL02, OPTIONAL03, OPTIONAL04, OPTIONAL05, '' SPOTRATESOURCES_ID, PRODUCT_TYPE, 0 EXCHANGE_RATE, 0 WASHRATE, '' SETTLEMENT, 0 STRATEGYID, SUBPRODUCT PRODUCT_CODE, CONTRACTSTRUCTURE, WORKFLOW, '' INITIAL_EXCHANGE, '' CASHFLOWGENERATION, '' EARLYTERMINATION, BOOKID, deal_location_code, DEPOSITORY, '' DELIVERY_MODE, DELIVERY_MODE_CODE, EXCHANGECODE, PORTCODE, TRANSACTIONTYPECODE TRANSACTION_TYPE_CODE, PAYMENTMODE1, BANKCODE1, PAYMENTMODE2, BANKCODE2, '' CP_PAYMENTMODE1, '' CP_BANKCODE1, SUBSIDIARYCODE, COUNTERCODE, '' COUNTERPARTY_DEALER, ASSETCLASS, currency CONSCURRENCY, NOSTRO_REF_NO, NOSTRODATE, REFERENCE_NO, RESTRUCTURE_CONTRACTCODE, ROLLOVER_CONTRACTCODE, BRANCH_REF_NO, CURRNAME, '' BORROW_TERM, BENCHMARKID, 0 PARVALUE, 0 OFFERINGPRICE, '' INTERESTMODE, INTEREST, MARKUP,
						DAYCOUNT, INTERESTDIRECTION, 0 PAYMENTFREQ, 0 RESETFREQ, '' RESETDATE, DISCOUNTCURVE, 0 COUPYEAR, DEALSOURCE, AMOUNT, QUANTITY, RATE, PRODUCTDESC, BROKER_NAME, BROKERAGEBANKCODE, BROKERAGEBANKNAME, BROKERAGE_AC, '' LOAN_DESCRIPTION, FACEVALUE, ISINO_CODE, SECURITYSYMBOL, 0 INTEREST_TAX_CAT_CODE, PRODUCT1, PCHARGERATE, PCHARGEAMT, 0 XIRRVALUE, '' CUSTOM_CONTRACTCODE, 0 TERMVALUE, '' ACCOUNTINGTYPE, '' REPAY_COMMENCEMENT_DATE, 0 LRN_NUMBER, 0 CUSTOM_PENALTYRATE, 0 LGBG_NUMBER, '' SUPPLIER, '' VESSEL_NAME, 0 CHARGES_PAID_TILL, '' LATEST_DATE_OF_SHIPMENT, '' PAYMENT_TERMS, 0 ORIGINAL_AMOUNT, 0 COMMISSION_PERCENTAGE, REMARKS REMARK, DEAL_REMARKS, EMAIL_STATUS, AUID, MATDATE MATURITY, INDEX_RATIO, Nvl(ORDER_STATUS, 'Order Pending') ORDER_STATUS, To_Char(order_conf_date, 'dd/MM/yyyy hh24:mi:ss') AS order_conf_date, order_conf_by, Nvl(RECON_STATUS, 'Unreconciled') RECON_STATUS, decode(upper(RECON_STATUS), 'RECONCILED', '', RECON_REMARKS) RECON_REMARKS, FD_NUMBER, FD_INTEREST_RATE, FD_TENOR, FD_AMOUNT, FD_AMOUNT_PER, (
							SELECT descr
							FROM default_static_table
							WHERE code = '365' AND module_name = 'asba_fd_daycount'
							) FD_DAY_COUNT, FD_INTEREST, decode(Nvl(final_price, 1), 0, 'F', 'T') FINAL_PRICE, issuer, exchange, netrate, netamount, bsr_code, lotsize, noofcontracts, underlying1 derivative_underlying, sl_consideration, active_status, nominal_price, deal_purpose, Nvl(reporting_asset_class, ASSETCLASS) REPORTING_ASSET_CLASS, bsrnumber, dept_name, Nvl(stt, 0) stt, brokerage_amount, dealerbook, iobj, sectorname, payment_mode, 'TRUE' display_auth_info, Upper('TRUE') printdealticket, primarymarkettype, acc_interest, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, Theirbankname, country, settleflag
					FROM (
						SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, Decode(Lower(assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', assetclass), assetclass) assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No
							, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode,
							brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date, index_ratio, auid, post_accruedinterest,
							posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, bsr_code, netrate, netamount, lotsize, noofcontracts, underlying1, sl_consideration, active_status, nominal_price, deal_purpose, reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, sectorname, payment_mode, primarymarkettype, settleflag
						FROM (
							SELECT s.*, workflow, t.assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2,
								their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, dealno posdealno, portfolio Pos_portfolio, traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue,
								Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1,
								price_leg1, yield_leg1, principal, deal_location_code, osContract.depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, osContract.branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, cm8.bsr_code bsr_code, netrate, netamount, oscontract.lotsize, oscontract.noofcontracts, underlying1, sl_consideration, oscontract.active_status active_status, nominal_price, deal_purpose, ds.reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, oscontract.sectorname, oscontract.payment_mode, primarymarkettype, oscontract.settleflag settleflag
							FROM (
								SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks,
									reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc,
									to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amt1 amount_leg1, amt1 qty_leg1, strikerate price_leg1, 0 yield_leg1, amt2 principal, '' deal_location_code, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0
									netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag
								FROM fxmaster
								WHERE nvl(deletionstatus, 'ND') <> 'D'

								UNION ALL

								SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, c.portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, CASE WHEN transaction_type_code IN (90, 91, 329, 330) THEN sl_date ELSE enddate END matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
												SELECT upper(PARAMVALUE)
												FROM params
												WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
												), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
													SELECT DISTINCT optional02
													FROM contractmaster
													WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
													) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower
										(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security'
										, s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0
									fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, nvl(sl_consideration, 0), 1 active_status, nominal_price, descr deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, dealerwiseprofitability dl, (
										SELECT compcode, compname
										FROM companymaster
										) cm, (
										SELECT compcode, compname, is_taxable
										FROM companymaster
										) cm1, (
										SELECT c.contractcode ccode, c1.loan_description loan_desc
										FROM contractmaster c, contractmaster c1
										WHERE c.refcontractno = c1.contractcode
										) contract, (
										SELECT code, descr, static_value
										FROM default_static_table
										WHERE MODULE_NAME = 'REVAL_PURPOSE'
										ORDER BY To_Number(static_value)
										) d
								WHERE c.contractcode = contract.ccode(+) AND c.purpose_code = d.code(+)
						AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer
						AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+)
						AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324) AND dl.portcode(+) = c.portcode
						AND To_Char(dl.code(+)) = To_Char(c.dealerbook) AND dl.asset_class_code(+) = 2

								UNION ALL

								SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Mutual Fund' product, securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(type_name), 'CLOSE ENDED', matdate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt,
									accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, scheme_code securitysymbol, market product_type, mf.scheme_name security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode,
										'') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_number isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1
									principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, descr deal_purpose, '' bsrnumber, dept_name, 0 stt, 0 BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, mf.iobj, sc.sectorname, payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig, sectormaster sc, dealerwiseprofitability dl, paymentmode pm, (
										SELECT code, descr, static_value
										FROM default_static_table
										WHERE MODULE_NAME = 'REVAL_PURPOSE'
										ORDER BY To_Number(static_value)
										) d
								WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1))
						AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+)
						AND ig.sector = sc.SECTORCODE(+) AND mt.purpose_code = d.code(+) AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook)
						AND dl.asset_class_code(+) = 5 AND pm.pay_mode_code = mt.payment_mode_code

								UNION ALL

								SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Equity' product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, mt.contractcode contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt
									taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.scrip_code securitysymbol, market product_type, mf.scrip_name security_desc, subproduct underlying, mt.brokercode brokercode, brokeragedate, brokerage_curr, dealcharges.BROKERAGE_AMOUNT brokerage, brokeragebank
									, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_no isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1,
									amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, Nvl(dealcharges.net_rate, Nvl(mt.netrate, 0)) netrate, Nvl(dealcharges.net_amount, 0) netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, mf.active_status, 0 nominal_price, '' deal_purpose, bm.bsrnumber, dept_name, dealcharges.stt stt, dealcharges.BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm, companymaster ig, brokerage_master bm, dealerwiseprofitability dl, (
										SELECT CONTRACTCODE, STT, BROKERAGE_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN (((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) + STT) WHEN TRANSACTION_TYPE_CODE = 305 THEN (((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) - STT) WHEN TRANSACTION_TYPE_CODE = 192 THEN ((PRICE_LEG1 * QTY_LEG1) + (BROKERAGE_AMOUNT + STT)) WHEN TRANSACTION_TYPE_CODE = 204 THEN ((PRICE_LEG1 * QTY_LEG1) - (BROKERAGE_AMOUNT + STT)
															) END AS NET_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN ((((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 WHEN TRANSACTION_TYPE_CODE = 305 THEN ((((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 END AS NET_RATE, (BROKERAGE_AMOUNT / QTY_LEG1) B_UNIT
										FROM (
											SELECT CONTRACTCODE, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_STT_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', CHARGE_AMOUNT, 'STT_EQ_PUR', charge_amount, 'STT_EQ_SALE', charge_amount, 0)) AS STT, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_SALE', CHARGE_AMOUNT, 'BROKER_CHARGE_EQ_PUR', charge_amount, 'BROKER_CHARGE_EQ_SALE', charge_amount, 0)) AS BROKERAGE_AMOUNT, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
											FROM (
												SELECT dc.CONTRACTCODE, dc.EVENT_CHARGE_CODE, dc.CHARGE_AMOUNT, MT.QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE, p.paramname, p.paramvalue
												FROM DEAL_CHARGES DC, MUTUALFUND_TRANSACT MT, params p
												WHERE DC.CONTRACTCODE = MT.CONTRACTCODE AND p.paramvalue(+) = dc.event_charge_code AND p.paramname IN ('BROKER_CHARGE_EVENT_ORDER_STT_PUR', 'BROKER_CHARGE_EVENT_ORDER_PUR', 'BROKER_CHARGE_EVENT_ORDER_SALE', 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', 'STT_EQ_PUR', 'STT_EQ_SALE', 'BROKER_CHARGE_EQ_PUR', 'BROKER_CHARGE_EQ_SALE') AND EVENT_CHARGE_CODE IN (p.paramvalue)
												)
											GROUP BY CONTRACTCODE, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
											)
										) dealcharges
								WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND Lower(assetclass) = 'equity' AND nvl(deletionstatus, 'ND') <> 'D'
						AND mf.ratingagency_no = ra.ratingagency_no(+) AND mt.transaction_type_code NOT IN (207) AND dealcharges.contractcode(+) = mt.contractcode
						AND mf.issuer = ig.compcode(+) AND mt.brokercode = bm.brokercode(+) AND mt.exchangecode = bm.exchange_code(+) AND bm.asset_class_code(+) = 7
						AND bm.BR_WORKFLOWCODE(+) = 27 AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 7

								UNION ALL

								SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01,
									optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.
									settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.profit_loss SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto,
									nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
										SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
										FROM equitymaster

										UNION ALL

										SELECT INDEX_NAME, INDEX_NAME, (
												SELECT compcode
												FROM companymaster
												WHERE compname = 'NONE' AND rownum = 1
												) ISSUER
										FROM index_master
										) eq, workflow ass, dealsymbol DE
								WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code
						AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D'

								UNION ALL

								SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02
									optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term,
									'' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0
									) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
								WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+)
						AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%')

								UNION ALL

								SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, ird.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03
									optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, ird.contractcode securitysymbol, 'SECONDARY' product_type, ird.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency
									currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, c.depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, c.branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0)
									contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, c.lotsize, c.noofcontracts, c.underlying underlying1, 0 sl_consideration, to_number(ird.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
								WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow
						AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND'

								UNION ALL

								SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01,
									optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.
									settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(
										contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
								WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode
						AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow

								UNION ALL

								SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(OPENENDED), 'YES', maturitydate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt,
									accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode,
									'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, alt.isinnumber isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, decode(nvl(qty_leg1, 0), 0, ai_quantity, qty_leg1) qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository,
									bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, alternateinvestment alt, (
										SELECT marketsymbol, symbol
										FROM dealsymbol
										WHERE transactiontypecode = '1099999999'
										) d
								WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D'
								) oscontract, (
									SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
									FROM assetclass a, workflow w, transactiontype t
									WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
									) t, (
									SELECT subsidiaryname, bookname, portname portfolio, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
									FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
									WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
									) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
							WHERE 1 = 1 AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
							)
						WHERE 1 = 1
						)
					ORDER BY dealno DESC
					) mainqry
					,(SELECT '['||chargelist||']' charge, contractcode, total_charge FROM (
					SELECT LISTAGG(charges, ',') WITHIN GROUP (ORDER BY contractcode) AS chargelist, contractcode, Sum(charge_amount) total_charge
					FROM
					(
					SELECT '{"name":"'||event_charge_code||'","value":"'||charge_amount||'"}' charges, contractcode, charge_amount FROM deal_charges
					)
					GROUP BY  contractcode)) dc
					WHERE 1 = 1 AND transaction_type_code NOT IN (304, 305, 382, 383)
					AND mainqry.contractcode = dc.contractcode(+) and upper(nvl(confirmationstatus,'UNCONFIRMED')) = 'UNCONFIRMED'
					AND Upper(assetclass) IN ('EQUITY','OTHERS','ALTERNATIVE INVESTMENT','MUTUAL FUNDS') AND trunc(tradedate) BETWEEN to_date('<%-FROMDATE%>') AND to_date('<%-TODATE%>')
				`,
				"filter":["FROMDATE","TODATE"]
				},
			"update":{
			"source":`
			SELECT mainqry.*, dc.total_charge,dc.charge, Decode(Upper(Nvl(AUTHORISATIONSTATUS, 'NA')), 'NA', 'Authorise', 'A', 'Confirm', '') next_action
			FROM (
				SELECT SUBSIDIARYNAME, BOOKNAME, PORTFOLIO, PRODUCT, SUBPRODUCT, currency CURR, Decode(TRANSACTIONTYPE, 'Split In', 'Split', TRANSACTIONTYPE) TRANSACTIONTYPE, Decode(TRANSACTION_TYPE, 'Split In', 'Split', TRANSACTION_TYPE) TRANSACTION_TYPE, CONTRACTCODE, Decode(product, 'Swaps', SECURITYSYMBOL, CONTRACTCODE) CONTRACT_ID, TRADEDATE, To_Char(TRADEDATE, 'dd/MM/yyyy hh24:mi:ss') AS TRANSACTIONDATETIME, VALUEDATE, MATDATE, TRADERID, COUNTERPARTY, CATEGORY, '' TRANS_CATEGORY, SECURITY_DESC, PRINCIPAL, 0 WITHHOLDINGTAX, AMOUNT_LEG1, QTY_LEG1, PRICE_LEG1, 0 GROSSAMT, YIELD_LEG1, 0 ACCR_INTR_PU, ACCRUEDINTEREST, CONSIDERATION, POST_CONSIDERATION, POST_ACC_INTEREST_LEG1, POST_ACCRUEDINTEREST, SL_YIELD, SL_PRICE, SL_ACC_INT, contract_wac wac, contract_revalwac revalwac, CASE WHEN TRANSACTIONTYPECODE IN ('112', '127', '108', '204', '161', '104', '391') THEN (nvl(price_leg1, 0) - nvl(contract_wac, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('101') THEN (nvl(contract_wac, 0) - nvl(price_leg1, 0)
									) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328') THEN SLB_PROFIT_LOSS ELSE 0 END profit_loss, REPO_RATE, REFERENCE_NO REFCONTRACTNO, YIELDTO, BANKCURR, AGENCY1 AGENCY1NAME, BANKNAME1, ACCOUNT1, AGENCY2 AGENCY2NAME, BANKNAME2, ACCOUNT2, THEIR_AGENCY1 THEIR_AGENCY1NAME, '' THEIR_BANKNAME1, THEIR_ACCOUNT1, '' THEIR_AGENCY2NAME, THEIR_BANKNAME2, THEIR_ACCOUNT2, LOCALCURR, LOCALCURRRATE, LOCALCURRAMT, GLOBALCURR, GLOBALCURRRATE, GLOBALCURRAMT, GROUPCURR, GROUPCURRAMT, GROUPCURRRATE, 0 WITHHOLDINGTAX_PER, 0 EFFECTIVERATE_PER, 0 EFFECTIVERATE_AMT, 0 UPFRONTFEES_PER, 0 UPFRONTFEES_AMT, 0 OTHERS_PER, 0 OTHERS_AMT, 0 COVERRATE, 0 PREMIA_PER, '' PREMIA, 0 STAMPDUTY, SECURED, '' NEGOTIABLE, BROKERAGEDATE, 0 BROKERAGETYPEVALUE, '' BROKERNAME, BROKERCODE, BROKERAGE, BROKERAGE_CURR, '' BROKERAGETYPE, REMARKS, 0 SERVICETAXTYPE, 0 SERVICETAXRATE, 0 SERVICETAXAMT, 0 ACCOUNTCHARGE, 0 NETRATEFLAG, nvl(authorisationstatus, 'NA') AUTHORISATIONSTATUSCODE, AUTHORISATIONSTATUS,
					AUTHSTATUSBY, AUTHSTATUSON, AUTHSTATUSREMARKS, CONFIRMATIONSTATUS, CONFSTATUSBY, CONFSTATUSON, CONFSTATUSREMARKS, TRANSACTIONTYPE TRANSTYPE, '' CONTRACTTEMPLATE, DEALNO, GROUPDEALNO, 0 PAY_WASHRATE, '' HEDGEON, NOTIONALSTEPRULE, 0 CAPS, 0 FLOORS, RANGEBARRIERS, BRANCH, DEALTYPE, OPTIONAL01, OPTIONAL02, OPTIONAL03, OPTIONAL04, OPTIONAL05, '' SPOTRATESOURCES_ID, PRODUCT_TYPE, 0 EXCHANGE_RATE, 0 WASHRATE, '' SETTLEMENT, 0 STRATEGYID, SUBPRODUCT PRODUCT_CODE, CONTRACTSTRUCTURE, WORKFLOW, '' INITIAL_EXCHANGE, '' CASHFLOWGENERATION, '' EARLYTERMINATION, BOOKID, deal_location_code, DEPOSITORY, '' DELIVERY_MODE, DELIVERY_MODE_CODE, EXCHANGECODE, PORTCODE, TRANSACTIONTYPECODE TRANSACTION_TYPE_CODE, PAYMENTMODE1, BANKCODE1, PAYMENTMODE2, BANKCODE2, '' CP_PAYMENTMODE1, '' CP_BANKCODE1, SUBSIDIARYCODE, COUNTERCODE, '' COUNTERPARTY_DEALER, ASSETCLASS, currency CONSCURRENCY, NOSTRO_REF_NO, NOSTRODATE, REFERENCE_NO, RESTRUCTURE_CONTRACTCODE, ROLLOVER_CONTRACTCODE, BRANCH_REF_NO, CURRNAME, '' BORROW_TERM, BENCHMARKID, 0 PARVALUE, 0 OFFERINGPRICE, '' INTERESTMODE, INTEREST, MARKUP,
					DAYCOUNT, INTERESTDIRECTION, 0 PAYMENTFREQ, 0 RESETFREQ, '' RESETDATE, DISCOUNTCURVE, 0 COUPYEAR, DEALSOURCE, AMOUNT, QUANTITY, RATE, PRODUCTDESC, BROKER_NAME, BROKERAGEBANKCODE, BROKERAGEBANKNAME, BROKERAGE_AC, '' LOAN_DESCRIPTION, FACEVALUE, ISINO_CODE, SECURITYSYMBOL, 0 INTEREST_TAX_CAT_CODE, PRODUCT1, PCHARGERATE, PCHARGEAMT, 0 XIRRVALUE, '' CUSTOM_CONTRACTCODE, 0 TERMVALUE, '' ACCOUNTINGTYPE, '' REPAY_COMMENCEMENT_DATE, 0 LRN_NUMBER, 0 CUSTOM_PENALTYRATE, 0 LGBG_NUMBER, '' SUPPLIER, '' VESSEL_NAME, 0 CHARGES_PAID_TILL, '' LATEST_DATE_OF_SHIPMENT, '' PAYMENT_TERMS, 0 ORIGINAL_AMOUNT, 0 COMMISSION_PERCENTAGE, REMARKS REMARK, DEAL_REMARKS, EMAIL_STATUS, AUID, MATDATE MATURITY, INDEX_RATIO, Nvl(ORDER_STATUS, 'Order Pending') ORDER_STATUS, To_Char(order_conf_date, 'dd/MM/yyyy hh24:mi:ss') AS order_conf_date, order_conf_by, Nvl(RECON_STATUS, 'Unreconciled') RECON_STATUS, decode(upper(RECON_STATUS), 'RECONCILED', '', RECON_REMARKS) RECON_REMARKS, FD_NUMBER, FD_INTEREST_RATE, FD_TENOR, FD_AMOUNT, FD_AMOUNT_PER, (
						SELECT descr
						FROM default_static_table
						WHERE code = '365' AND module_name = 'asba_fd_daycount'
						) FD_DAY_COUNT, FD_INTEREST, decode(Nvl(final_price, 1), 0, 'F', 'T') FINAL_PRICE, issuer, exchange, netrate, netamount, bsr_code, lotsize, noofcontracts, underlying1 derivative_underlying, sl_consideration, active_status, nominal_price, deal_purpose, Nvl(reporting_asset_class, ASSETCLASS) REPORTING_ASSET_CLASS, bsrnumber, dept_name, Nvl(stt, 0) stt, brokerage_amount, dealerbook, iobj, sectorname, payment_mode, 'TRUE' display_auth_info, Upper('TRUE') printdealticket, primarymarkettype, acc_interest, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, Theirbankname, country, settleflag
				FROM (
					SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, Decode(Lower(assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', assetclass), assetclass) assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No
						, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode,
						brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date, index_ratio, auid, post_accruedinterest,
						posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, bsr_code, netrate, netamount, lotsize, noofcontracts, underlying1, sl_consideration, active_status, nominal_price, deal_purpose, reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, sectorname, payment_mode, primarymarkettype, settleflag
					FROM (
						SELECT s.*, workflow, t.assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2,
							their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, dealno posdealno, portfolio Pos_portfolio, traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue,
							Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1,
							price_leg1, yield_leg1, principal, deal_location_code, osContract.depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, osContract.branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, cm8.bsr_code bsr_code, netrate, netamount, oscontract.lotsize, oscontract.noofcontracts, underlying1, sl_consideration, oscontract.active_status active_status, nominal_price, deal_purpose, ds.reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, oscontract.sectorname, oscontract.payment_mode, primarymarkettype, oscontract.settleflag settleflag
						FROM (
							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks,
								reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc,
								to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amt1 amount_leg1, amt1 qty_leg1, strikerate price_leg1, 0 yield_leg1, amt2 principal, '' deal_location_code, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0
								netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag
							FROM fxmaster
							WHERE nvl(deletionstatus, 'ND') <> 'D' AND contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, c.portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, CASE WHEN transaction_type_code IN (90, 91, 329, 330) THEN sl_date ELSE enddate END matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
											SELECT upper(PARAMVALUE)
											FROM params
											WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
											), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
												SELECT DISTINCT optional02
												FROM contractmaster
												WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
												) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower
									(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security'
									, s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0
								fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, nvl(sl_consideration, 0), 1 active_status, nominal_price, descr deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, dealerwiseprofitability dl, (
									SELECT compcode, compname
									FROM companymaster
									) cm, (
									SELECT compcode, compname, is_taxable
									FROM companymaster
									) cm1, (
									SELECT c.contractcode ccode, c1.loan_description loan_desc
									FROM contractmaster c, contractmaster c1
									WHERE c.refcontractno = c1.contractcode
									) contract, (
									SELECT code, descr, static_value
									FROM default_static_table
									WHERE MODULE_NAME = 'REVAL_PURPOSE'
									ORDER BY To_Number(static_value)
									) d
							WHERE c.contractcode = contract.ccode(+) AND c.purpose_code = d.code(+)
					AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer
					AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+)
					AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324) AND dl.portcode(+) = c.portcode
					AND To_Char(dl.code(+)) = To_Char(c.dealerbook) AND dl.asset_class_code(+) = 2
					AND c.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Mutual Fund' product, securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(type_name), 'CLOSE ENDED', matdate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt,
								accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, scheme_code securitysymbol, market product_type, mf.scheme_name security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode,
									'') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_number isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1
								principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, descr deal_purpose, '' bsrnumber, dept_name, 0 stt, 0 BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, mf.iobj, sc.sectorname, payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig, sectormaster sc, dealerwiseprofitability dl, paymentmode pm, (
									SELECT code, descr, static_value
									FROM default_static_table
									WHERE MODULE_NAME = 'REVAL_PURPOSE'
									ORDER BY To_Number(static_value)
									) d
							WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1))
					AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+)
					AND ig.sector = sc.SECTORCODE(+) AND mt.purpose_code = d.code(+) AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook)
					AND dl.asset_class_code(+) = 5 AND pm.pay_mode_code = mt.payment_mode_code 
					AND contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Equity' product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, mt.contractcode contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt
								taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.scrip_code securitysymbol, market product_type, mf.scrip_name security_desc, subproduct underlying, mt.brokercode brokercode, brokeragedate, brokerage_curr, dealcharges.BROKERAGE_AMOUNT brokerage, brokeragebank
								, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_no isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1,
								amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, Nvl(dealcharges.net_rate, Nvl(mt.netrate, 0)) netrate, Nvl(dealcharges.net_amount, 0) netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, mf.active_status, 0 nominal_price, '' deal_purpose, bm.bsrnumber, dept_name, dealcharges.stt stt, dealcharges.BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm, companymaster ig, brokerage_master bm, dealerwiseprofitability dl, (
									SELECT CONTRACTCODE, STT, BROKERAGE_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN (((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) + STT) WHEN TRANSACTION_TYPE_CODE = 305 THEN (((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) - STT) WHEN TRANSACTION_TYPE_CODE = 192 THEN ((PRICE_LEG1 * QTY_LEG1) + (BROKERAGE_AMOUNT + STT)) WHEN TRANSACTION_TYPE_CODE = 204 THEN ((PRICE_LEG1 * QTY_LEG1) - (BROKERAGE_AMOUNT + STT)
														) END AS NET_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN ((((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 WHEN TRANSACTION_TYPE_CODE = 305 THEN ((((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 END AS NET_RATE, (BROKERAGE_AMOUNT / QTY_LEG1) B_UNIT
									FROM (
										SELECT CONTRACTCODE, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_STT_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', CHARGE_AMOUNT, 'STT_EQ_PUR', charge_amount, 'STT_EQ_SALE', charge_amount, 0)) AS STT, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_SALE', CHARGE_AMOUNT, 'BROKER_CHARGE_EQ_PUR', charge_amount, 'BROKER_CHARGE_EQ_SALE', charge_amount, 0)) AS BROKERAGE_AMOUNT, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
										FROM (
											SELECT dc.CONTRACTCODE, dc.EVENT_CHARGE_CODE, dc.CHARGE_AMOUNT, MT.QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE, p.paramname, p.paramvalue
											FROM DEAL_CHARGES DC, MUTUALFUND_TRANSACT MT, params p
											WHERE DC.CONTRACTCODE = MT.CONTRACTCODE AND p.paramvalue(+) = dc.event_charge_code AND p.paramname IN ('BROKER_CHARGE_EVENT_ORDER_STT_PUR', 'BROKER_CHARGE_EVENT_ORDER_PUR', 'BROKER_CHARGE_EVENT_ORDER_SALE', 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', 'STT_EQ_PUR', 'STT_EQ_SALE', 'BROKER_CHARGE_EQ_PUR', 'BROKER_CHARGE_EQ_SALE') AND EVENT_CHARGE_CODE IN (p.paramvalue)
											)
										GROUP BY CONTRACTCODE, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
										)
									) dealcharges
							WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND Lower(assetclass) = 'equity' AND nvl(deletionstatus, 'ND') <> 'D'
					AND mf.ratingagency_no = ra.ratingagency_no(+) AND mt.transaction_type_code NOT IN (207) AND dealcharges.contractcode(+) = mt.contractcode
					AND mf.issuer = ig.compcode(+) AND mt.brokercode = bm.brokercode(+) AND mt.exchangecode = bm.exchange_code(+) AND bm.asset_class_code(+) = 7
					AND bm.BR_WORKFLOWCODE(+) = 27 AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 7
					 AND mt.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01,
								optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.
								settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.profit_loss SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto,
								nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
									SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
									FROM equitymaster

									UNION ALL

									SELECT INDEX_NAME, INDEX_NAME, (
											SELECT compcode
											FROM companymaster
											WHERE compname = 'NONE' AND rownum = 1
											) ISSUER
									FROM index_master
									) eq, workflow ass, dealsymbol DE
							WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code
					AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D'
					 AND mt.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02
								optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term,
								'' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0
								) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
							WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+)
					AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%')
					 AND contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, ird.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03
								optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, ird.contractcode securitysymbol, 'SECONDARY' product_type, ird.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency
								currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, c.depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, c.branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0)
								contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, c.lotsize, c.noofcontracts, c.underlying underlying1, 0 sl_consideration, to_number(ird.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
							WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow
					AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND'
					 AND c.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01,
								optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.
								settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(
									contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
							WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode
					AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow
					 AND mt.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(OPENENDED), 'YES', maturitydate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt,
								accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode,
								'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, alt.isinnumber isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, decode(nvl(qty_leg1, 0), 0, ai_quantity, qty_leg1) qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository,
								bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, alternateinvestment alt, (
									SELECT marketsymbol, symbol
									FROM dealsymbol
									WHERE transactiontypecode = '1099999999'
									) d
							WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D'
					 AND contractcode = '<%-CONTRACTCODE%>'
							) oscontract, (
								SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
								FROM assetclass a, workflow w, transactiontype t
								WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
								) t, (
								SELECT subsidiaryname, bookname, portname portfolio, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
								FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
								WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
								) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
						WHERE 1 = 1 AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
						)
					WHERE 1 = 1
					)
				ORDER BY dealno DESC
					) mainqry
				,(SELECT '['||chargelist||']' charge, contractcode, total_charge FROM (
				SELECT LISTAGG(charges, ',') WITHIN GROUP (ORDER BY contractcode) AS chargelist, contractcode, Sum(charge_amount) total_charge
				FROM
				(
				SELECT '{"name":"'||event_charge_code||'","value":"'||charge_amount||'"}' charges, contractcode, charge_amount FROM deal_charges
				where contractcode = '<%-CONTRACTCODE%>'
				)
				GROUP BY  contractcode)) dc
				WHERE 1 = 1 AND transaction_type_code NOT IN (304, 305, 382, 383)
				AND mainqry.contractcode = dc.contractcode(+) and upper(nvl(confirmationstatus,'UNCONFIRMED')) = 'UNCONFIRMED'
				`,
				"filter":["CONTRACTCODE"]
				},
			"delete":{
				"source":``,
				"filter":["CONTRACTCODE"]
			}
		},
		{
            "collectionName": "positions",
			"notificationFilter":[],
            "create": {
                        "source": `
                        SELECT *
                        FROM (
                        SELECT '<%-ASONDATE%>' asondate, os_asset_class asset_class, os_holding HOLDING, os_subsidiaryname subsidiaryname, os_bookname bookname, os_portfolio portfolio, costing_policy COSTING_POLICY, p.symbol SECURITYSYMBOL, os_security_desc security_desc, os_security_type security_type, (os_total_facevalue / os_total_quantity) FACEVALUE_PERUNIT, os_quantity quantity, os_cl_quantity cl_quantity, os_total_quantity total_quantity, os_cl_facevalue cl_facevalue, os_total_facevalue total_facevalue, os_wac wac, os_cl_bookvalue cl_bookvalue, os_total_bookvalue total_bookvalue, 0 revalwac, 0 REVAL_BOOKVALUE, SecAccrual.accruals, secaccrual.ACCRUAL_PER_DAY_UNIT, secaccrual.ACCRUALDATE accrual_date, ACCRUALSGLOBAL, ACCRUALLCYCURR, ACCRUALLCYRATE, ACCRUALLCY, ACCRUALSGROUP, ACCRUALSGROUPRATE, ACCRUALSGROUPCURR, ACCRUALSGLOBALCURR, ACCRUALSOSAMT, ACCRUALSGLOBALRATE, MTMDATE mtm_value_date, mtmprice * os_total_quantity mtm, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, MTMGLOBAL, MTMGROUP, pv01, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, NETACCRUALS, CONVEXITY, MTMYIELD, CREDITEXPOSURE, lastammortdate, secammort.AMMORT_PU, secammort.AMMORTIZATION, AMRT_GROUPRATE, AMRT_GROUPAMT, AMRT_GLOBALCURR, AMRT_GLOBALRATE, AMRT_GLOBALAMT, AMRT_GROUPCURR, AMRT_LCYAMT, AMRT_LCYRATE, AMRT_LCYCURR, decode(p.product, 'SECU', p.os_WAC - ((os_total_facevalue / os_total_quantity) + Nvl(Decode(alm.description, 'Irregular Redemption', premium, 'Irregular Cashflows', premium, REDEMPTION_PREMIUM), 0)), 0) premium_val, alm.TYPE, alm.REPORTING_ASSET_CLASS, alm.INTERESTMODE, alm.INTEREST, alm.ISSUER, p.os_issuername, (To_Date(alm.enddate) - To_Date('<%-ASONDATE%>')) residual, alm.ISIN_FACEVALUE, Nvl(Round((p.os_facevalue / decode(alm.isin_facevalue, 0, 1, alm.isin_facevalue)), 12), 0) ISIN_QTY, alm.isino_code isin, alm.CURRENCY, alm.description cashflow_type, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN To_Date('') ELSE ENDDATE END maturity, p.asset, sectorname sector, industryname industry, alm.category_subtype MIS_CATEGORY_NAME, p.portfolio portcode, p.pos_bookid bookid, p.pos_subsidiarycode SUBSIDIARYCODE, nvl(newmtmmethod, decode(product, 'SECU', 'Interpolation', 'Swaps')) mtmmethod, 'Securitywise' viewdata, os_workflow workflow, alm.contractcode, p.asset assetclass, 'dealsymbol.symbol' subproduct, alm.INTERESTDIRECTION, alm.DISCOUNTED, alm.contractdesc PRODUCT_DESCRIPTION, p.os_total_quantity OUTSTANDINGAMT, p.os_total_quantity OSQUANTITY, p.product PRODUCT_CODE, alm.COUPONAT, alm.DISCOUNTCURVE, alm.DAYCOUNT, alm.FRN_COMPOUNDING, alm.SETTLEMENTCONV, alm.MARKUP, alm.NOTIONALSTEPRULE, alm.RESETCALN, alm.SPREADCOMPOUNDING, alm.BENCHMARKID, alm.FRN_RESET_UNIT, alm.COUPYEAR, alm.CALCULATIONPERIOD, alm.RESETCALCTYPE, alm.FRN_RESETTYPE, alm.FRN_FLR, alm.FRN_CAP, alm.BEGN_STUB, alm.BEGN_STUBDATE, alm.BEGN_STUBIN, alm.BEGN_REFERENCEBENCHMARK, alm.BEGN_STUBVALUE, alm.END_STUB, alm.END_STUBDATE, alm.END_STUBIN, alm.END_REFERENCEBENCHMARK, alm.END_STUBVALUE, alm.ONMONTHENDS, alm.SHUT_PERIOD, alm.EOMADHERENCE, alm.CAPS, alm.FLOORS, alm.RANGEBARRIERS, alm.DESCRIPTION, alm.ENDDATE MATDATE, alm.STARTDATE, alm.ENDDATE, alm.INCLUDEIPDATE, alm.REDEMPTION_PREMIUM, alm.HEDGEON, alm.RATING1, p.os_osunit OSUNIT, alm.CP_EOM_CURRENTDATE, alm.DEPOSITORY_ID, alm.INCLUDE_LAST_IP_DATE, alm.CP_INCLUDE_ALL_IP_DATE, alm.CP_INCLUDE_IP_DATE, alm.INCLUDE_ALL_IP_DATE, p.event TRANSACTION_TYPE_CODE, 'NA' SELECTIONFLAG, alm.INT_ACC_IPDATE, nvl(exchangerate.mid, 1) exchrate, alm.newuploadkey uploadkey, '' EVENT, alm.ACCOUNTNO, alm.BANKCODE, alm.EARLYTERMINATION, alm.CANCELLABLE, alm.SPOTDATE, alm.RESETDATE, alm.FRN_RESET, alm.FRN_COMPOUNDING_TYPE, ALM.FRN, alm.YIELD_TYPE, alm.UNADJUSTEDENDDATE, alm.TRADEDATE, decode(Lower(p.os_workflow), 'security', decode(description, 'Discounted', 'Accretion', 'Ammortization'), 'NA') RESULT_FOR, alm.MANUAL_CASHFLOW, p.posamt_groupcurr GROUPCURR_CLEAR_AMT, p.POSAMT_GROUPCURR, p.GLOBALCURR, p.POSAMT_GLOBALCURR, posamt_globalcurr GLOBALCURR_CLEAR_AMT, p.GROUPCURR, p.LOCALCURR, p.POSAMT_LCY, posamt_lcy LCY_CLEAR_AMT, p.os_total_facevalue FACEVALUE, p.SYMBOL, alm.NPI_STATUS, alm.NPI_EFFECTIVE_DATE, alm.LISTED, p.os_clear_qty CLEAR_QTY, p.os_bookvalue pos_bookvalue, p.os_cl_facevalue CLEARFACEVALUE, p.os_cl_bookvalue CLEAR_BOOKVALUE, Decode(Upper(listed), 'TRUE', 1, 'FALSE', 0) listingstatus, Decode(Upper(p.os_workflow), 'FUTURES', Decode(Sign(p.POS_BOOKVALUE), - 1, 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND'), os_HOLDING) HOLDINGTYPE, To_Date(enddate) - To_Date('<%-ASONDATE%>') RES_MATURITY, alm.ISSUER_GROUP, alm.CAR_PERC, alm.NETWORTH, alm.illiquid LIQUIDITYSTATUS, alm.ISSUER_RATING, alm.ISSUER_GRP_RATING, alm.REGULATORY_CATEGORY, alm.RATED_AMOUNT, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN 0 ELSE Round((To_Date(enddate) - To_Date('<%-ASONDATE%>')) / 365, 2) END AS RESIDUAL_IN_YRS, Decode(listed, 'True', 'Listed', 'False', 'UnListed', listed) LISTING_CATEGORY, alm.sec_remarks DEAL_TYPE, p.os_holding HOLDINGFOROPTM, (nvl(p.os_total_bookvalue, 0) * alm.interestdirection) NET_MM_BORROWING, alm.SEC_DEAL_LOC, CASE WHEN p.os_workflow = 'Options' AND To_Date('<%-ASONDATE%>', 'dd/MM/yyyy') >= To_Date(ENDDATE, 'dd/MM/yyyy') THEN 'True' ELSE 'False' END OPTREDEM, Decode(p.os_holding, 'SECURITY IN SHORT', nvl(p.os_total_facevalue, 0), nvl(p.os_total_facevalue, 0) * - 1) net_short_position, to_date('', 'dd/MM/yyyy') LASTIPDATE, to_date('', 'dd/MM/yyyy') IPSTARTDATE, to_date('', 'dd/MM/yyyy') NEXTINTDATE, 0 INFLATION_ADJ_FACE_VALUE, 0 INDEX_RATIO, 0 INFLATION_ADJ_CL_FACE_VALUE, Nvl(secaccrual.taxrate, 0) TAXRATE, Nvl(secaccrual.GROSSAMT, 0) GROSSAMT, Nvl(secaccrual.TAXAMT, 0) TAXAMT, decode(product, 'IRSC', '8', 'LOAN', '6') WORKFLOWCODE, '' LASTISSUEDATE, '' NEXTRESETDATE, To_Date('<%-ASONDATE%>') || p.symbol || p.os_subsidiaryname || p.os_bookname || p.os_portfolio || p.os_holding eventkey, (CASE WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') ELSE 0 END) NOTIFIED_AMOUNT, alm.payment_mode PAYMENT_MODE, notch RATING_NOTCH, p.os_issuername issuername, mtmprice price, p.
                            os_yield YIELD, alm.mm_workflow, pm.isconstituent isconstituent, 'Trade' next_action
                        FROM positions p, portmast pm, (
                            SELECT *
                            FROM swapaccruals
                            WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND accrualdate = (
                                SELECT Max(accrualdate) accrualdate
                                FROM swapaccruals
                                WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND trunc(accrualdate) = to_date('<%-ASONDATE%>')
                                )
                            ) SecAccrual, (
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(MTM_WORKFLOW, 'Options', CASE WHEN holding_type = 'Short Call' OR holding_type = 'Short Put' THEN 'SECURITY IN HAND - SHORT' WHEN holding_type = 'Long Call' OR holding_type = 'Long Put' THEN 'SECURITY IN HAND' ELSE holding_type END, holding_type) holding_type
                            FROM (
                                SELECT SECURITYSYMBOL, MTMDATE, MTMVALUE, MTMMETHOD, NETACCRUALS, NETACCRUALSPV, CONTRACTCODE, ENTRYTYPE, PV01, CREDITEXPOSURE, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, SYSTEMVALUE, REMARKS, DELTA, GAMMA, VEGA, THETA, RHO_CURR1, RHO_CURR2, MARGIN, MTMGLOBAL, MTMGROUP, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTM_ASSETCLASS, MTMPRICE, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, MTM_VIEWDATA, MTMYIELD, CONVEXITY, MTM_BOOKVALUE, MTM_WORKFLOW, MTM_OPTIONTYPE, DEALBUCKET, PV_FACTOR, REVISED_PL, INTERPOLATED_BENCHMARK_RATE, SPOT_MTMRATE, SPOT_MTMAMOUNT, SPOT_MTMPL, RECORD_ID, HOLDING_TYPE
                                FROM mtmvalues
								WHERE mtm_product IN ('Security', 'Equity', 'Mutual Funds', 'Options', 'Alternative Investment') 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                )
                    
                            UNION ALL
                    
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(holding_type, 'Short Futures', 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND') holding_type
                            FROM (
                                SELECT contractcode SECURITYSYMBOL, MTMDATE, 0 MTMVALUE, '' MTMMETHOD, 0 NETACCRUALS, 0 NETACCRUALSPV, CONTRACTCODE, '' ENTRYTYPE, 0 PV01, 0 CREDITEXPOSURE, 0 MTMEXCHRATE, 0 MTMLCY, 0 DURATION, 0 MODIFIEDDURATION, 0 SYSTEMVALUE, '' REMARKS, 0 DELTA, 0 GAMMA, 0 VEGA, 0 THETA, 0 RHO_CURR1, 0 RHO_CURR2, 0 MARGIN, '' MTMGLOBAL, '' MTMGROUP, '' MTMGLOBALCURR, '' MTMGROUPCURR, '' MTMLCYCURR, MTM_ASSETCLASS, Avg(MTMPRICE) MTMPRICE, 0 MTMGLOBALRATE, 0 MTMGROUPRATE, 0 MTMLCYRATE, 0 MTMPL, 0 MTMPLLCY, 0 MTMPLGLOBAL, 0 MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, '' MTM_VIEWDATA, 0 MTMYIELD, 0 CONVEXITY, 0 MTM_BOOKVALUE, '' MTM_WORKFLOW, '' MTM_OPTIONTYPE, '' DEALBUCKET, 0 PV_FACTOR, 0 REVISED_PL, 0 INTERPOLATED_BENCHMARK_RATE, 0 SPOT_MTMRATE, 0 SPOT_MTMAMOUNT, 0 SPOT_MTMPL, 0 RECORD_ID, holding_type
                                FROM mtmvalues
								WHERE mtm_product = 'Futures' 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                GROUP BY contractcode, mtm_subsidiary, mtm_bookid, mtm_assetclass, mtm_product, mtm_portfolio, mtm_product, mtm_curr, MTMDATE, holding_type
                                )
                            ) secmtm, holding_wac hw, (
                            SELECT *
                            FROM ammortization
                            WHERE (ammortdate, AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL) IN (
                                SELECT Max(ammortdate), AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                FROM ammortization
                                WHERE trunc(AMMORTDATE) <= to_date( '<%-ASONDATE%>')
                                GROUP BY AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                )
                            ) SecAmmort, (
                            SELECT contractcode, max(ammortdate) LastAmmortDate
                            FROM ammortization
                            WHERE ammortdate <= '<%-ASONDATE%>'
                            GROUP BY contractcode
                            ) LastAmmortDate, allmasters alm, (
                            SELECT *
                            FROM spotratesources sp, exchangerate e
                            WHERE trunc(exchangedate) = to_date('<%-ASONDATE%>', 'dd/MM/yyyy') AND e.source = sp.spotratesources_id
                            ) ExchangeRate, (
                            SELECT Sum(premium) premium, securitysymbol
                            FROM securityevents
                            WHERE ACTUALDATE >= '<%-ASONDATE%>' AND EVENTDESCRIPTION = 'Partial Redemption'
                            GROUP BY securitysymbol
                            ) premium
                        WHERE nvl(lastdeal, 0) = 1 AND p.portfolio = pm.portcode AND Nvl(deletionstatus, 'ND') = 'ND' AND alm.securitysymbol(+) = p.symbol AND lower(product) NOT IN ('cash') AND lower(asset) IN ('interest rate', 'security', 'equity', 'mutual funds', 'currency', 'alternative investment') AND p.holding = hw.ORIGINAL_HOLDING_TYPE(+) AND p.symbol = SecAccrual.contractcode(+) AND p.symbol = SecMTM.contractcode(+) AND p.os_subsidiaryname = SecMTM.mtm_subsidiary(+) AND p.os_bookname = SecMTM.mtm_bookid(+) AND p.asset = SecMTM.mtm_assetclass(+) AND p.os_workflow = SecMTM.mtm_product(+) AND p.os_portfolio = SecMTM.mtm_portfolio(+) AND p.os_holding = SecMTM.holding_type(+) AND p.symbol = SecAmmort.contractcode(+) AND p.os_subsidiaryname = SecAmmort.amrt_subsidiaryname(+) AND p.os_bookname = secammort.amrt_bookname(+) AND p.os_portfolio = secammort.amrt_portfolio(+) AND LastAmmortDate.contractcode(+) = p.symbol AND p.os_subsidiaryname = SecAccrual.acc_subsidiary(+) AND p.os_bookname = SecAccrual.acc_bookid(+) AND p.asset = SecAccrual.acc_assetclass(+) AND p.os_workflow = SecAccrual.acc_product(+) AND p.os_portfolio = SecAccrual.acc_portfolio(+) AND alm.Currency = ExchangeRate.base(+) AND ExchangeRate.derive(+) = 'INR' AND PREMIUM.securitysymbol(+) = alm.securitysymbol AND p.os_total_quantity > 0
                        )
                        WHERE 1 = 1 AND holding <> 'ORDER MANDATE' AND SECURITYSYMBOL = '<%-SECURITYSYMBOL%>' 
						AND SUBSIDIARYCODE = '<%-SUBSIDIARYCODE%>' AND BOOKID = '<%-BOOKID%>' AND PORTCODE = '<%-PORTCODE%>'
    `,
                "filter": ["ASONDATE","SUBSIDIARYCODE","BOOKID","PORTCODE","SECURITYSYMBOL"]
            },
            "refresh": {
                "source": `
                        SELECT *
                        FROM (
                        SELECT '<%-ASONDATE%>' asondate, os_asset_class asset_class, os_holding HOLDING, os_subsidiaryname subsidiaryname, os_bookname bookname, os_portfolio portfolio, costing_policy COSTING_POLICY, p.symbol SECURITYSYMBOL, os_security_desc security_desc, os_security_type security_type, (os_total_facevalue / os_total_quantity) FACEVALUE_PERUNIT, os_quantity quantity, os_cl_quantity cl_quantity, os_total_quantity total_quantity, os_cl_facevalue cl_facevalue, os_total_facevalue total_facevalue, os_wac wac, os_cl_bookvalue cl_bookvalue, os_total_bookvalue total_bookvalue, 0 revalwac, 0 REVAL_BOOKVALUE, SecAccrual.accruals, secaccrual.ACCRUAL_PER_DAY_UNIT, secaccrual.ACCRUALDATE accrual_date, ACCRUALSGLOBAL, ACCRUALLCYCURR, ACCRUALLCYRATE, ACCRUALLCY, ACCRUALSGROUP, ACCRUALSGROUPRATE, ACCRUALSGROUPCURR, ACCRUALSGLOBALCURR, ACCRUALSOSAMT, ACCRUALSGLOBALRATE, MTMDATE mtm_value_date, mtmprice * os_total_quantity mtm, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, MTMGLOBAL, MTMGROUP, pv01, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, NETACCRUALS, CONVEXITY, MTMYIELD, CREDITEXPOSURE, lastammortdate, secammort.AMMORT_PU, secammort.AMMORTIZATION, AMRT_GROUPRATE, AMRT_GROUPAMT, AMRT_GLOBALCURR, AMRT_GLOBALRATE, AMRT_GLOBALAMT, AMRT_GROUPCURR, AMRT_LCYAMT, AMRT_LCYRATE, AMRT_LCYCURR, decode(p.product, 'SECU', p.os_WAC - ((os_total_facevalue / os_total_quantity) + Nvl(Decode(alm.description, 'Irregular Redemption', premium, 'Irregular Cashflows', premium, REDEMPTION_PREMIUM), 0)), 0) premium_val, alm.TYPE, alm.REPORTING_ASSET_CLASS, alm.INTERESTMODE, alm.INTEREST, alm.ISSUER, p.os_issuername, (To_Date(alm.enddate) - To_Date('<%-ASONDATE%>')) residual, alm.ISIN_FACEVALUE, Nvl(Round((p.os_facevalue / decode(alm.isin_facevalue, 0, 1, alm.isin_facevalue)), 12), 0) ISIN_QTY, alm.isino_code isin, alm.CURRENCY, alm.description cashflow_type, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN To_Date('') ELSE ENDDATE END maturity, p.asset, sectorname sector, industryname industry, alm.category_subtype MIS_CATEGORY_NAME, p.portfolio portcode, p.pos_bookid bookid, p.pos_subsidiarycode SUBSIDIARYCODE, nvl(newmtmmethod, decode(product, 'SECU', 'Interpolation', 'Swaps')) mtmmethod, 'Securitywise' viewdata, os_workflow workflow, alm.contractcode, p.asset assetclass, 'dealsymbol.symbol' subproduct, alm.INTERESTDIRECTION, alm.DISCOUNTED, alm.contractdesc PRODUCT_DESCRIPTION, p.os_total_quantity OUTSTANDINGAMT, p.os_total_quantity OSQUANTITY, p.product PRODUCT_CODE, alm.COUPONAT, alm.DISCOUNTCURVE, alm.DAYCOUNT, alm.FRN_COMPOUNDING, alm.SETTLEMENTCONV, alm.MARKUP, alm.NOTIONALSTEPRULE, alm.RESETCALN, alm.SPREADCOMPOUNDING, alm.BENCHMARKID, alm.FRN_RESET_UNIT, alm.COUPYEAR, alm.CALCULATIONPERIOD, alm.RESETCALCTYPE, alm.FRN_RESETTYPE, alm.FRN_FLR, alm.FRN_CAP, alm.BEGN_STUB, alm.BEGN_STUBDATE, alm.BEGN_STUBIN, alm.BEGN_REFERENCEBENCHMARK, alm.BEGN_STUBVALUE, alm.END_STUB, alm.END_STUBDATE, alm.END_STUBIN, alm.END_REFERENCEBENCHMARK, alm.END_STUBVALUE, alm.ONMONTHENDS, alm.SHUT_PERIOD, alm.EOMADHERENCE, alm.CAPS, alm.FLOORS, alm.RANGEBARRIERS, alm.DESCRIPTION, alm.ENDDATE MATDATE, alm.STARTDATE, alm.ENDDATE, alm.INCLUDEIPDATE, alm.REDEMPTION_PREMIUM, alm.HEDGEON, alm.RATING1, p.os_osunit OSUNIT, alm.CP_EOM_CURRENTDATE, alm.DEPOSITORY_ID, alm.INCLUDE_LAST_IP_DATE, alm.CP_INCLUDE_ALL_IP_DATE, alm.CP_INCLUDE_IP_DATE, alm.INCLUDE_ALL_IP_DATE, p.event TRANSACTION_TYPE_CODE, 'NA' SELECTIONFLAG, alm.INT_ACC_IPDATE, nvl(exchangerate.mid, 1) exchrate, alm.newuploadkey uploadkey, '' EVENT, alm.ACCOUNTNO, alm.BANKCODE, alm.EARLYTERMINATION, alm.CANCELLABLE, alm.SPOTDATE, alm.RESETDATE, alm.FRN_RESET, alm.FRN_COMPOUNDING_TYPE, ALM.FRN, alm.YIELD_TYPE, alm.UNADJUSTEDENDDATE, alm.TRADEDATE, decode(Lower(p.os_workflow), 'security', decode(description, 'Discounted', 'Accretion', 'Ammortization'), 'NA') RESULT_FOR, alm.MANUAL_CASHFLOW, p.posamt_groupcurr GROUPCURR_CLEAR_AMT, p.POSAMT_GROUPCURR, p.GLOBALCURR, p.POSAMT_GLOBALCURR, posamt_globalcurr GLOBALCURR_CLEAR_AMT, p.GROUPCURR, p.LOCALCURR, p.POSAMT_LCY, posamt_lcy LCY_CLEAR_AMT, p.os_total_facevalue FACEVALUE, p.SYMBOL, alm.NPI_STATUS, alm.NPI_EFFECTIVE_DATE, alm.LISTED, p.os_clear_qty CLEAR_QTY, p.os_bookvalue pos_bookvalue, p.os_cl_facevalue CLEARFACEVALUE, p.os_cl_bookvalue CLEAR_BOOKVALUE, Decode(Upper(listed), 'TRUE', 1, 'FALSE', 0) listingstatus, Decode(Upper(p.os_workflow), 'FUTURES', Decode(Sign(p.POS_BOOKVALUE), - 1, 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND'), os_HOLDING) HOLDINGTYPE, To_Date(enddate) - To_Date('<%-ASONDATE%>') RES_MATURITY, alm.ISSUER_GROUP, alm.CAR_PERC, alm.NETWORTH, alm.illiquid LIQUIDITYSTATUS, alm.ISSUER_RATING, alm.ISSUER_GRP_RATING, alm.REGULATORY_CATEGORY, alm.RATED_AMOUNT, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN 0 ELSE Round((To_Date(enddate) - To_Date('<%-ASONDATE%>')) / 365, 2) END AS RESIDUAL_IN_YRS, Decode(listed, 'True', 'Listed', 'False', 'UnListed', listed) LISTING_CATEGORY, alm.sec_remarks DEAL_TYPE, p.os_holding HOLDINGFOROPTM, (nvl(p.os_total_bookvalue, 0) * alm.interestdirection) NET_MM_BORROWING, alm.SEC_DEAL_LOC, CASE WHEN p.os_workflow = 'Options' AND To_Date('<%-ASONDATE%>', 'dd/MM/yyyy') >= To_Date(ENDDATE, 'dd/MM/yyyy') THEN 'True' ELSE 'False' END OPTREDEM, Decode(p.os_holding, 'SECURITY IN SHORT', nvl(p.os_total_facevalue, 0), nvl(p.os_total_facevalue, 0) * - 1) net_short_position, to_date('', 'dd/MM/yyyy') LASTIPDATE, to_date('', 'dd/MM/yyyy') IPSTARTDATE, to_date('', 'dd/MM/yyyy') NEXTINTDATE, 0 INFLATION_ADJ_FACE_VALUE, 0 INDEX_RATIO, 0 INFLATION_ADJ_CL_FACE_VALUE, Nvl(secaccrual.taxrate, 0) TAXRATE, Nvl(secaccrual.GROSSAMT, 0) GROSSAMT, Nvl(secaccrual.TAXAMT, 0) TAXAMT, decode(product, 'IRSC', '8', 'LOAN', '6') WORKFLOWCODE, '' LASTISSUEDATE, '' NEXTRESETDATE, To_Date('<%-ASONDATE%>') || p.symbol || p.os_subsidiaryname || p.os_bookname || p.os_portfolio || p.os_holding eventkey, (CASE WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') ELSE 0 END) NOTIFIED_AMOUNT, alm.payment_mode PAYMENT_MODE, notch RATING_NOTCH, p.os_issuername issuername, mtmprice price, p.
                            os_yield YIELD, alm.mm_workflow, pm.isconstituent isconstituent, 'Trade' next_action
                        FROM positions p, portmast pm, (
                            SELECT *
                            FROM swapaccruals
                            WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND accrualdate = (
                                SELECT Max(accrualdate) accrualdate
                                FROM swapaccruals
                                WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND trunc(accrualdate) = to_date('<%-ASONDATE%>')
                                )
                            ) SecAccrual, (
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(MTM_WORKFLOW, 'Options', CASE WHEN holding_type = 'Short Call' OR holding_type = 'Short Put' THEN 'SECURITY IN HAND - SHORT' WHEN holding_type = 'Long Call' OR holding_type = 'Long Put' THEN 'SECURITY IN HAND' ELSE holding_type END, holding_type) holding_type
                            FROM (
                                SELECT SECURITYSYMBOL, MTMDATE, MTMVALUE, MTMMETHOD, NETACCRUALS, NETACCRUALSPV, CONTRACTCODE, ENTRYTYPE, PV01, CREDITEXPOSURE, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, SYSTEMVALUE, REMARKS, DELTA, GAMMA, VEGA, THETA, RHO_CURR1, RHO_CURR2, MARGIN, MTMGLOBAL, MTMGROUP, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTM_ASSETCLASS, MTMPRICE, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, MTM_VIEWDATA, MTMYIELD, CONVEXITY, MTM_BOOKVALUE, MTM_WORKFLOW, MTM_OPTIONTYPE, DEALBUCKET, PV_FACTOR, REVISED_PL, INTERPOLATED_BENCHMARK_RATE, SPOT_MTMRATE, SPOT_MTMAMOUNT, SPOT_MTMPL, RECORD_ID, HOLDING_TYPE
                                FROM mtmvalues
								WHERE mtm_product IN ('Security', 'Equity', 'Mutual Funds', 'Options', 'Alternative Investment') 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                )
                    
                            UNION ALL
                    
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(holding_type, 'Short Futures', 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND') holding_type
                            FROM (
                                SELECT contractcode SECURITYSYMBOL, MTMDATE, 0 MTMVALUE, '' MTMMETHOD, 0 NETACCRUALS, 0 NETACCRUALSPV, CONTRACTCODE, '' ENTRYTYPE, 0 PV01, 0 CREDITEXPOSURE, 0 MTMEXCHRATE, 0 MTMLCY, 0 DURATION, 0 MODIFIEDDURATION, 0 SYSTEMVALUE, '' REMARKS, 0 DELTA, 0 GAMMA, 0 VEGA, 0 THETA, 0 RHO_CURR1, 0 RHO_CURR2, 0 MARGIN, '' MTMGLOBAL, '' MTMGROUP, '' MTMGLOBALCURR, '' MTMGROUPCURR, '' MTMLCYCURR, MTM_ASSETCLASS, Avg(MTMPRICE) MTMPRICE, 0 MTMGLOBALRATE, 0 MTMGROUPRATE, 0 MTMLCYRATE, 0 MTMPL, 0 MTMPLLCY, 0 MTMPLGLOBAL, 0 MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, '' MTM_VIEWDATA, 0 MTMYIELD, 0 CONVEXITY, 0 MTM_BOOKVALUE, '' MTM_WORKFLOW, '' MTM_OPTIONTYPE, '' DEALBUCKET, 0 PV_FACTOR, 0 REVISED_PL, 0 INTERPOLATED_BENCHMARK_RATE, 0 SPOT_MTMRATE, 0 SPOT_MTMAMOUNT, 0 SPOT_MTMPL, 0 RECORD_ID, holding_type
                                FROM mtmvalues
								WHERE mtm_product = 'Futures' 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                GROUP BY contractcode, mtm_subsidiary, mtm_bookid, mtm_assetclass, mtm_product, mtm_portfolio, mtm_product, mtm_curr, MTMDATE, holding_type
                                )
                            ) secmtm, holding_wac hw, (
                            SELECT *
                            FROM ammortization
                            WHERE (ammortdate, AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL) IN (
                                SELECT Max(ammortdate), AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                FROM ammortization
                                WHERE trunc(AMMORTDATE) <= to_date( '<%-ASONDATE%>')
                                GROUP BY AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                )
                            ) SecAmmort, (
                            SELECT contractcode, max(ammortdate) LastAmmortDate
                            FROM ammortization
                            WHERE ammortdate <= '<%-ASONDATE%>'
                            GROUP BY contractcode
                            ) LastAmmortDate, allmasters alm, (
                            SELECT *
                            FROM spotratesources sp, exchangerate e
                            WHERE trunc(exchangedate) = to_date('<%-ASONDATE%>', 'dd/MM/yyyy') AND e.source = sp.spotratesources_id
                            ) ExchangeRate, (
                            SELECT Sum(premium) premium, securitysymbol
                            FROM securityevents
                            WHERE ACTUALDATE >= '<%-ASONDATE%>' AND EVENTDESCRIPTION = 'Partial Redemption'
                            GROUP BY securitysymbol
                            ) premium
                        WHERE nvl(lastdeal, 0) = 1 AND p.portfolio = pm.portcode AND Nvl(deletionstatus, 'ND') = 'ND' AND alm.securitysymbol(+) = p.symbol AND lower(product) NOT IN ('cash') AND lower(asset) IN ('interest rate', 'security', 'equity', 'mutual funds', 'currency', 'alternative investment') AND p.holding = hw.ORIGINAL_HOLDING_TYPE(+) AND p.symbol = SecAccrual.contractcode(+) AND p.symbol = SecMTM.contractcode(+) AND p.os_subsidiaryname = SecMTM.mtm_subsidiary(+) AND p.os_bookname = SecMTM.mtm_bookid(+) AND p.asset = SecMTM.mtm_assetclass(+) AND p.os_workflow = SecMTM.mtm_product(+) AND p.os_portfolio = SecMTM.mtm_portfolio(+) AND p.os_holding = SecMTM.holding_type(+) AND p.symbol = SecAmmort.contractcode(+) AND p.os_subsidiaryname = SecAmmort.amrt_subsidiaryname(+) AND p.os_bookname = secammort.amrt_bookname(+) AND p.os_portfolio = secammort.amrt_portfolio(+) AND LastAmmortDate.contractcode(+) = p.symbol AND p.os_subsidiaryname = SecAccrual.acc_subsidiary(+) AND p.os_bookname = SecAccrual.acc_bookid(+) AND p.asset = SecAccrual.acc_assetclass(+) AND p.os_workflow = SecAccrual.acc_product(+) AND p.os_portfolio = SecAccrual.acc_portfolio(+) AND alm.Currency = ExchangeRate.base(+) AND ExchangeRate.derive(+) = 'INR' AND PREMIUM.securitysymbol(+) = alm.securitysymbol AND p.os_total_quantity > 0
                        )
                        WHERE 1 = 1 AND holding <> 'ORDER MANDATE'
                        `,
                "filter": [""]
            },
            "update": {
                "source": `
                        SELECT *
                        FROM (
                        SELECT '<%-ASONDATE%>' asondate, os_asset_class asset_class, os_holding HOLDING, os_subsidiaryname subsidiaryname, os_bookname bookname, os_portfolio portfolio, costing_policy COSTING_POLICY, p.symbol SECURITYSYMBOL, os_security_desc security_desc, os_security_type security_type, (os_total_facevalue / os_total_quantity) FACEVALUE_PERUNIT, os_quantity quantity, os_cl_quantity cl_quantity, os_total_quantity total_quantity, os_cl_facevalue cl_facevalue, os_total_facevalue total_facevalue, os_wac wac, os_cl_bookvalue cl_bookvalue, os_total_bookvalue total_bookvalue, 0 revalwac, 0 REVAL_BOOKVALUE, SecAccrual.accruals, secaccrual.ACCRUAL_PER_DAY_UNIT, secaccrual.ACCRUALDATE accrual_date, ACCRUALSGLOBAL, ACCRUALLCYCURR, ACCRUALLCYRATE, ACCRUALLCY, ACCRUALSGROUP, ACCRUALSGROUPRATE, ACCRUALSGROUPCURR, ACCRUALSGLOBALCURR, ACCRUALSOSAMT, ACCRUALSGLOBALRATE, MTMDATE mtm_value_date, mtmprice * os_total_quantity mtm, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, MTMGLOBAL, MTMGROUP, pv01, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, NETACCRUALS, CONVEXITY, MTMYIELD, CREDITEXPOSURE, lastammortdate, secammort.AMMORT_PU, secammort.AMMORTIZATION, AMRT_GROUPRATE, AMRT_GROUPAMT, AMRT_GLOBALCURR, AMRT_GLOBALRATE, AMRT_GLOBALAMT, AMRT_GROUPCURR, AMRT_LCYAMT, AMRT_LCYRATE, AMRT_LCYCURR, decode(p.product, 'SECU', p.os_WAC - ((os_total_facevalue / os_total_quantity) + Nvl(Decode(alm.description, 'Irregular Redemption', premium, 'Irregular Cashflows', premium, REDEMPTION_PREMIUM), 0)), 0) premium_val, alm.TYPE, alm.REPORTING_ASSET_CLASS, alm.INTERESTMODE, alm.INTEREST, alm.ISSUER, p.os_issuername, (To_Date(alm.enddate) - To_Date('<%-ASONDATE%>')) residual, alm.ISIN_FACEVALUE, Nvl(Round((p.os_facevalue / decode(alm.isin_facevalue, 0, 1, alm.isin_facevalue)), 12), 0) ISIN_QTY, alm.isino_code isin, alm.CURRENCY, alm.description cashflow_type, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN To_Date('') ELSE ENDDATE END maturity, p.asset, sectorname sector, industryname industry, alm.category_subtype MIS_CATEGORY_NAME, p.portfolio portcode, p.pos_bookid bookid, p.pos_subsidiarycode SUBSIDIARYCODE, nvl(newmtmmethod, decode(product, 'SECU', 'Interpolation', 'Swaps')) mtmmethod, 'Securitywise' viewdata, os_workflow workflow, alm.contractcode, p.asset assetclass, 'dealsymbol.symbol' subproduct, alm.INTERESTDIRECTION, alm.DISCOUNTED, alm.contractdesc PRODUCT_DESCRIPTION, p.os_total_quantity OUTSTANDINGAMT, p.os_total_quantity OSQUANTITY, p.product PRODUCT_CODE, alm.COUPONAT, alm.DISCOUNTCURVE, alm.DAYCOUNT, alm.FRN_COMPOUNDING, alm.SETTLEMENTCONV, alm.MARKUP, alm.NOTIONALSTEPRULE, alm.RESETCALN, alm.SPREADCOMPOUNDING, alm.BENCHMARKID, alm.FRN_RESET_UNIT, alm.COUPYEAR, alm.CALCULATIONPERIOD, alm.RESETCALCTYPE, alm.FRN_RESETTYPE, alm.FRN_FLR, alm.FRN_CAP, alm.BEGN_STUB, alm.BEGN_STUBDATE, alm.BEGN_STUBIN, alm.BEGN_REFERENCEBENCHMARK, alm.BEGN_STUBVALUE, alm.END_STUB, alm.END_STUBDATE, alm.END_STUBIN, alm.END_REFERENCEBENCHMARK, alm.END_STUBVALUE, alm.ONMONTHENDS, alm.SHUT_PERIOD, alm.EOMADHERENCE, alm.CAPS, alm.FLOORS, alm.RANGEBARRIERS, alm.DESCRIPTION, alm.ENDDATE MATDATE, alm.STARTDATE, alm.ENDDATE, alm.INCLUDEIPDATE, alm.REDEMPTION_PREMIUM, alm.HEDGEON, alm.RATING1, p.os_osunit OSUNIT, alm.CP_EOM_CURRENTDATE, alm.DEPOSITORY_ID, alm.INCLUDE_LAST_IP_DATE, alm.CP_INCLUDE_ALL_IP_DATE, alm.CP_INCLUDE_IP_DATE, alm.INCLUDE_ALL_IP_DATE, p.event TRANSACTION_TYPE_CODE, 'NA' SELECTIONFLAG, alm.INT_ACC_IPDATE, nvl(exchangerate.mid, 1) exchrate, alm.newuploadkey uploadkey, '' EVENT, alm.ACCOUNTNO, alm.BANKCODE, alm.EARLYTERMINATION, alm.CANCELLABLE, alm.SPOTDATE, alm.RESETDATE, alm.FRN_RESET, alm.FRN_COMPOUNDING_TYPE, ALM.FRN, alm.YIELD_TYPE, alm.UNADJUSTEDENDDATE, alm.TRADEDATE, decode(Lower(p.os_workflow), 'security', decode(description, 'Discounted', 'Accretion', 'Ammortization'), 'NA') RESULT_FOR, alm.MANUAL_CASHFLOW, p.posamt_groupcurr GROUPCURR_CLEAR_AMT, p.POSAMT_GROUPCURR, p.GLOBALCURR, p.POSAMT_GLOBALCURR, posamt_globalcurr GLOBALCURR_CLEAR_AMT, p.GROUPCURR, p.LOCALCURR, p.POSAMT_LCY, posamt_lcy LCY_CLEAR_AMT, p.os_total_facevalue FACEVALUE, p.SYMBOL, alm.NPI_STATUS, alm.NPI_EFFECTIVE_DATE, alm.LISTED, p.os_clear_qty CLEAR_QTY, p.os_bookvalue pos_bookvalue, p.os_cl_facevalue CLEARFACEVALUE, p.os_cl_bookvalue CLEAR_BOOKVALUE, Decode(Upper(listed), 'TRUE', 1, 'FALSE', 0) listingstatus, Decode(Upper(p.os_workflow), 'FUTURES', Decode(Sign(p.POS_BOOKVALUE), - 1, 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND'), os_HOLDING) HOLDINGTYPE, To_Date(enddate) - To_Date('<%-ASONDATE%>') RES_MATURITY, alm.ISSUER_GROUP, alm.CAR_PERC, alm.NETWORTH, alm.illiquid LIQUIDITYSTATUS, alm.ISSUER_RATING, alm.ISSUER_GRP_RATING, alm.REGULATORY_CATEGORY, alm.RATED_AMOUNT, CASE WHEN asset = 'Equity' AND product = 'MFTR' THEN 0 ELSE Round((To_Date(enddate) - To_Date('<%-ASONDATE%>')) / 365, 2) END AS RESIDUAL_IN_YRS, Decode(listed, 'True', 'Listed', 'False', 'UnListed', listed) LISTING_CATEGORY, alm.sec_remarks DEAL_TYPE, p.os_holding HOLDINGFOROPTM, (nvl(p.os_total_bookvalue, 0) * alm.interestdirection) NET_MM_BORROWING, alm.SEC_DEAL_LOC, CASE WHEN p.os_workflow = 'Options' AND To_Date('<%-ASONDATE%>', 'dd/MM/yyyy') >= To_Date(ENDDATE, 'dd/MM/yyyy') THEN 'True' ELSE 'False' END OPTREDEM, Decode(p.os_holding, 'SECURITY IN SHORT', nvl(p.os_total_facevalue, 0), nvl(p.os_total_facevalue, 0) * - 1) net_short_position, to_date('', 'dd/MM/yyyy') LASTIPDATE, to_date('', 'dd/MM/yyyy') IPSTARTDATE, to_date('', 'dd/MM/yyyy') NEXTINTDATE, 0 INFLATION_ADJ_FACE_VALUE, 0 INDEX_RATIO, 0 INFLATION_ADJ_CL_FACE_VALUE, Nvl(secaccrual.taxrate, 0) TAXRATE, Nvl(secaccrual.GROSSAMT, 0) GROSSAMT, Nvl(secaccrual.TAXAMT, 0) TAXAMT, decode(product, 'IRSC', '8', 'LOAN', '6') WORKFLOWCODE, '' LASTISSUEDATE, '' NEXTRESETDATE, To_Date('<%-ASONDATE%>') || p.symbol || p.os_subsidiaryname || p.os_bookname || p.os_portfolio || p.os_holding eventkey, (CASE WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') WHEN p.os_HOLDING = 'WHEN ISSUED PURCHASE APPLICATION' THEN GETNOTIFIEDAMT(p.SYMBOL, '<%-ASONDATE%>') ELSE 0 END) NOTIFIED_AMOUNT, alm.payment_mode PAYMENT_MODE, notch RATING_NOTCH, p.os_issuername issuername, mtmprice price, p.
                            os_yield YIELD, alm.mm_workflow, pm.isconstituent isconstituent, 'Trade' next_action
                        FROM positions p, portmast pm, (
                            SELECT *
                            FROM swapaccruals
                            WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND accrualdate = (
                                SELECT Max(accrualdate) accrualdate
                                FROM swapaccruals
                                WHERE acc_product IN ('Security', 'Loan', 'Swaps') AND trunc(accrualdate) = to_date('<%-ASONDATE%>')
                                )
                            ) SecAccrual, (
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(MTM_WORKFLOW, 'Options', CASE WHEN holding_type = 'Short Call' OR holding_type = 'Short Put' THEN 'SECURITY IN HAND - SHORT' WHEN holding_type = 'Long Call' OR holding_type = 'Long Put' THEN 'SECURITY IN HAND' ELSE holding_type END, holding_type) holding_type
                            FROM (
                                SELECT SECURITYSYMBOL, MTMDATE, MTMVALUE, MTMMETHOD, NETACCRUALS, NETACCRUALSPV, CONTRACTCODE, ENTRYTYPE, PV01, CREDITEXPOSURE, MTMEXCHRATE, MTMLCY, DURATION, MODIFIEDDURATION, SYSTEMVALUE, REMARKS, DELTA, GAMMA, VEGA, THETA, RHO_CURR1, RHO_CURR2, MARGIN, MTMGLOBAL, MTMGROUP, MTMGLOBALCURR, MTMGROUPCURR, MTMLCYCURR, MTM_ASSETCLASS, MTMPRICE, MTMGLOBALRATE, MTMGROUPRATE, MTMLCYRATE, MTMPL, MTMPLLCY, MTMPLGLOBAL, MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, MTM_VIEWDATA, MTMYIELD, CONVEXITY, MTM_BOOKVALUE, MTM_WORKFLOW, MTM_OPTIONTYPE, DEALBUCKET, PV_FACTOR, REVISED_PL, INTERPOLATED_BENCHMARK_RATE, SPOT_MTMRATE, SPOT_MTMAMOUNT, SPOT_MTMPL, RECORD_ID, HOLDING_TYPE
                                FROM mtmvalues
								WHERE mtm_product IN ('Security', 'Equity', 'Mutual Funds', 'Options', 'Alternative Investment') 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                )
                    
                            UNION ALL
                    
                            SELECT securitysymbol, mtmdate, mtmvalue, mtmmethod, netaccruals, netaccrualspv, contractcode, entrytype, pv01, creditexposure, mtmexchrate, mtmlcy, duration, modifiedduration, systemvalue, remarks, delta, gamma, vega, theta, rho_curr1, rho_curr2, margin, mtmglobal, mtmgroup, mtmglobalcurr, mtmgroupcurr, mtmlcycurr, mtm_assetclass, mtmprice, mtmglobalrate, mtmgrouprate, mtmlcyrate, mtmpl, mtmpllcy, mtmplglobal, mtmplgroup, mtm_subsidiary, mtm_bookid, mtm_product, mtm_portfolio, mtm_curr, mtm_viewdata, mtmyield, convexity, mtm_bookvalue, mtm_workflow, mtm_optiontype, dealbucket, pv_factor, revised_pl, interpolated_benchmark_rate, spot_mtmrate, spot_mtmamount, spot_mtmpl, record_id, Decode(holding_type, 'Short Futures', 'SECURITY IN HAND - SHORT', 'SECURITY IN HAND') holding_type
                            FROM (
                                SELECT contractcode SECURITYSYMBOL, MTMDATE, 0 MTMVALUE, '' MTMMETHOD, 0 NETACCRUALS, 0 NETACCRUALSPV, CONTRACTCODE, '' ENTRYTYPE, 0 PV01, 0 CREDITEXPOSURE, 0 MTMEXCHRATE, 0 MTMLCY, 0 DURATION, 0 MODIFIEDDURATION, 0 SYSTEMVALUE, '' REMARKS, 0 DELTA, 0 GAMMA, 0 VEGA, 0 THETA, 0 RHO_CURR1, 0 RHO_CURR2, 0 MARGIN, '' MTMGLOBAL, '' MTMGROUP, '' MTMGLOBALCURR, '' MTMGROUPCURR, '' MTMLCYCURR, MTM_ASSETCLASS, Avg(MTMPRICE) MTMPRICE, 0 MTMGLOBALRATE, 0 MTMGROUPRATE, 0 MTMLCYRATE, 0 MTMPL, 0 MTMPLLCY, 0 MTMPLGLOBAL, 0 MTMPLGROUP, MTM_SUBSIDIARY, MTM_BOOKID, MTM_PRODUCT, MTM_PORTFOLIO, MTM_CURR, '' MTM_VIEWDATA, 0 MTMYIELD, 0 CONVEXITY, 0 MTM_BOOKVALUE, '' MTM_WORKFLOW, '' MTM_OPTIONTYPE, '' DEALBUCKET, 0 PV_FACTOR, 0 REVISED_PL, 0 INTERPOLATED_BENCHMARK_RATE, 0 SPOT_MTMRATE, 0 SPOT_MTMAMOUNT, 0 SPOT_MTMPL, 0 RECORD_ID, holding_type
                                FROM mtmvalues
								WHERE mtm_product = 'Futures' 
								AND trunc(mtmdate) = (SELECT Trunc(Max(mtmdate)) FROM mtmvalues WHERE Trunc(mtmdate)<='<%-ASONDATE%>')
                                GROUP BY contractcode, mtm_subsidiary, mtm_bookid, mtm_assetclass, mtm_product, mtm_portfolio, mtm_product, mtm_curr, MTMDATE, holding_type
                                )
                            ) secmtm, holding_wac hw, (
                            SELECT *
                            FROM ammortization
                            WHERE (ammortdate, AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL) IN (
                                SELECT Max(ammortdate), AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                FROM ammortization
                                WHERE trunc(AMMORTDATE) <= to_date( '<%-ASONDATE%>')
                                GROUP BY AMRT_SUBSIDIARYNAME, AMRT_BOOKNAME, AMRT_PORTFOLIO, SECURITYSYMBOL
                                )
                            ) SecAmmort, (
                            SELECT contractcode, max(ammortdate) LastAmmortDate
                            FROM ammortization
                            WHERE ammortdate <= '<%-ASONDATE%>'
                            GROUP BY contractcode
                            ) LastAmmortDate, allmasters alm, (
                            SELECT *
                            FROM spotratesources sp, exchangerate e
                            WHERE trunc(exchangedate) = to_date('<%-ASONDATE%>', 'dd/MM/yyyy') AND e.source = sp.spotratesources_id
                            ) ExchangeRate, (
                            SELECT Sum(premium) premium, securitysymbol
                            FROM securityevents
                            WHERE ACTUALDATE >= '<%-ASONDATE%>' AND EVENTDESCRIPTION = 'Partial Redemption'
                            GROUP BY securitysymbol
                            ) premium
                        WHERE nvl(lastdeal, 0) = 1 AND p.portfolio = pm.portcode AND Nvl(deletionstatus, 'ND') = 'ND' AND alm.securitysymbol(+) = p.symbol AND lower(product) NOT IN ('cash') AND lower(asset) IN ('interest rate', 'security', 'equity', 'mutual funds', 'currency', 'alternative investment') AND p.holding = hw.ORIGINAL_HOLDING_TYPE(+) AND p.symbol = SecAccrual.contractcode(+) AND p.symbol = SecMTM.contractcode(+) AND p.os_subsidiaryname = SecMTM.mtm_subsidiary(+) AND p.os_bookname = SecMTM.mtm_bookid(+) AND p.asset = SecMTM.mtm_assetclass(+) AND p.os_workflow = SecMTM.mtm_product(+) AND p.os_portfolio = SecMTM.mtm_portfolio(+) AND p.os_holding = SecMTM.holding_type(+) AND p.symbol = SecAmmort.contractcode(+) AND p.os_subsidiaryname = SecAmmort.amrt_subsidiaryname(+) AND p.os_bookname = secammort.amrt_bookname(+) AND p.os_portfolio = secammort.amrt_portfolio(+) AND LastAmmortDate.contractcode(+) = p.symbol AND p.os_subsidiaryname = SecAccrual.acc_subsidiary(+) AND p.os_bookname = SecAccrual.acc_bookid(+) AND p.asset = SecAccrual.acc_assetclass(+) AND p.os_workflow = SecAccrual.acc_product(+) AND p.os_portfolio = SecAccrual.acc_portfolio(+) AND alm.Currency = ExchangeRate.base(+) AND ExchangeRate.derive(+) = 'INR' AND PREMIUM.securitysymbol(+) = alm.securitysymbol AND p.os_total_quantity > 0
                        )
                        WHERE 1 = 1 AND holding <> 'ORDER MANDATE' AND SECURITYSYMBOL = '<%-SECURITYSYMBOL%>' AND SUBSIDIARYCODE = '<%-SUBSIDIARYCODE%>' AND BOOKID = '<%-BOOKID%>' AND PORTCODE = '<%-PORTCODE%>'
            `,
                "filter": ["ASONDATE","SUBSIDIARYCODE","BOOKID","PORTCODE","SECURITYSYMBOL"]
            },
            "delete": {
                "source": "",
                "filter": ["ASONDATE","SUBSIDIARYCODE","BOOKID","PORTCODE","SECURITYSYMBOL"]
            },
        },
		{
			"collectionName":"deallisting",
			"notificationFilter":[],
			"create":{
			"source":`SELECT mainqry.*, dc.total_charge,dc.charge,Decode(Upper(Nvl(AUTHORISATIONSTATUS,'NA')), 'NA', 'Authorise', 'A', 'Confirm','') next_action 
			FROM (
				SELECT SUBSIDIARYNAME, BOOKNAME, PORTFOLIO, PRODUCT, SUBPRODUCT, currency CURR, Decode(TRANSACTIONTYPE, 'Split In', 'Split', TRANSACTIONTYPE) TRANSACTIONTYPE, Decode(TRANSACTION_TYPE, 'Split In', 'Split', TRANSACTION_TYPE) TRANSACTION_TYPE, CONTRACTCODE, Decode(product, 'Swaps', SECURITYSYMBOL, CONTRACTCODE) CONTRACT_ID, TRADEDATE, To_Char(TRADEDATE, 'dd/MM/yyyy hh24:mi:ss') AS TRANSACTIONDATETIME, VALUEDATE, MATDATE, TRADERID, COUNTERPARTY, CATEGORY, '' TRANS_CATEGORY, SECURITY_DESC, PRINCIPAL, 0 WITHHOLDINGTAX, AMOUNT_LEG1, QTY_LEG1, PRICE_LEG1, 0 GROSSAMT, YIELD_LEG1, 0 ACCR_INTR_PU, ACCRUEDINTEREST, CONSIDERATION, POST_CONSIDERATION, POST_ACC_INTEREST_LEG1, POST_ACCRUEDINTEREST, SL_YIELD, SL_PRICE, SL_ACC_INT, contract_wac wac, contract_revalwac revalwac, CASE WHEN TRANSACTIONTYPECODE IN ('112', '127', '108', '204', '161', '104', '391') THEN (nvl(price_leg1, 0) - nvl(contract_wac, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('101') THEN (nvl(contract_wac, 0) - nvl(price_leg1, 0)
									) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328') THEN SLB_PROFIT_LOSS ELSE 0 END profit_loss, REPO_RATE, REFERENCE_NO REFCONTRACTNO, YIELDTO, BANKCURR, AGENCY1 AGENCY1NAME, BANKNAME1, ACCOUNT1, AGENCY2 AGENCY2NAME, BANKNAME2, ACCOUNT2, THEIR_AGENCY1 THEIR_AGENCY1NAME, '' THEIR_BANKNAME1, THEIR_ACCOUNT1, '' THEIR_AGENCY2NAME, THEIR_BANKNAME2, THEIR_ACCOUNT2, LOCALCURR, LOCALCURRRATE, LOCALCURRAMT, GLOBALCURR, GLOBALCURRRATE, GLOBALCURRAMT, GROUPCURR, GROUPCURRAMT, GROUPCURRRATE, 0 WITHHOLDINGTAX_PER, 0 EFFECTIVERATE_PER, 0 EFFECTIVERATE_AMT, 0 UPFRONTFEES_PER, 0 UPFRONTFEES_AMT, 0 OTHERS_PER, 0 OTHERS_AMT, 0 COVERRATE, 0 PREMIA_PER, '' PREMIA, 0 STAMPDUTY, SECURED, '' NEGOTIABLE, BROKERAGEDATE, 0 BROKERAGETYPEVALUE, '' BROKERNAME, BROKERCODE, BROKERAGE, BROKERAGE_CURR, '' BROKERAGETYPE, REMARKS, 0 SERVICETAXTYPE, 0 SERVICETAXRATE, 0 SERVICETAXAMT, 0 ACCOUNTCHARGE, 0 NETRATEFLAG, nvl(authorisationstatus, 'NA') AUTHORISATIONSTATUSCODE, AUTHORISATIONSTATUS,
					AUTHSTATUSBY, AUTHSTATUSON, AUTHSTATUSREMARKS, CONFIRMATIONSTATUS, CONFSTATUSBY, CONFSTATUSON, CONFSTATUSREMARKS, TRANSACTIONTYPE TRANSTYPE, '' CONTRACTTEMPLATE, DEALNO, GROUPDEALNO, 0 PAY_WASHRATE, '' HEDGEON, NOTIONALSTEPRULE, 0 CAPS, 0 FLOORS, RANGEBARRIERS, BRANCH, DEALTYPE, OPTIONAL01, OPTIONAL02, OPTIONAL03, OPTIONAL04, OPTIONAL05, '' SPOTRATESOURCES_ID, PRODUCT_TYPE, 0 EXCHANGE_RATE, 0 WASHRATE, '' SETTLEMENT, 0 STRATEGYID, SUBPRODUCT PRODUCT_CODE, CONTRACTSTRUCTURE, WORKFLOW, '' INITIAL_EXCHANGE, '' CASHFLOWGENERATION, '' EARLYTERMINATION, BOOKID, deal_location_code, DEPOSITORY, '' DELIVERY_MODE, DELIVERY_MODE_CODE, EXCHANGECODE, PORTCODE, TRANSACTIONTYPECODE TRANSACTION_TYPE_CODE, PAYMENTMODE1, BANKCODE1, PAYMENTMODE2, BANKCODE2, '' CP_PAYMENTMODE1, '' CP_BANKCODE1, SUBSIDIARYCODE, COUNTERCODE, '' COUNTERPARTY_DEALER, ASSETCLASS, currency CONSCURRENCY, NOSTRO_REF_NO, NOSTRODATE, REFERENCE_NO, RESTRUCTURE_CONTRACTCODE, ROLLOVER_CONTRACTCODE, BRANCH_REF_NO, CURRNAME, '' BORROW_TERM, BENCHMARKID, 0 PARVALUE, 0 OFFERINGPRICE, '' INTERESTMODE, INTEREST, MARKUP,
					DAYCOUNT, INTERESTDIRECTION, 0 PAYMENTFREQ, 0 RESETFREQ, '' RESETDATE, DISCOUNTCURVE, 0 COUPYEAR, DEALSOURCE, AMOUNT, QUANTITY, RATE, PRODUCTDESC, BROKER_NAME, BROKERAGEBANKCODE, BROKERAGEBANKNAME, BROKERAGE_AC, '' LOAN_DESCRIPTION, FACEVALUE, ISINO_CODE, SECURITYSYMBOL, 0 INTEREST_TAX_CAT_CODE, PRODUCT1, PCHARGERATE, PCHARGEAMT, 0 XIRRVALUE, '' CUSTOM_CONTRACTCODE, 0 TERMVALUE, '' ACCOUNTINGTYPE, '' REPAY_COMMENCEMENT_DATE, 0 LRN_NUMBER, 0 CUSTOM_PENALTYRATE, 0 LGBG_NUMBER, '' SUPPLIER, '' VESSEL_NAME, 0 CHARGES_PAID_TILL, '' LATEST_DATE_OF_SHIPMENT, '' PAYMENT_TERMS, 0 ORIGINAL_AMOUNT, 0 COMMISSION_PERCENTAGE, REMARKS REMARK, DEAL_REMARKS, EMAIL_STATUS, AUID, MATDATE MATURITY, INDEX_RATIO, Nvl(ORDER_STATUS, 'Order Pending') ORDER_STATUS, To_Char(order_conf_date, 'dd/MM/yyyy hh24:mi:ss') AS order_conf_date, order_conf_by, Nvl(RECON_STATUS, 'Unreconciled') RECON_STATUS, decode(upper(RECON_STATUS), 'RECONCILED', '', RECON_REMARKS) RECON_REMARKS, FD_NUMBER, FD_INTEREST_RATE, FD_TENOR, FD_AMOUNT, FD_AMOUNT_PER, (
						SELECT descr
						FROM default_static_table
						WHERE code = '365' AND module_name = 'asba_fd_daycount'
						) FD_DAY_COUNT, FD_INTEREST, decode(Nvl(final_price, 1), 0, 'F', 'T') FINAL_PRICE, issuer, exchange, netrate, netamount, bsr_code, lotsize, noofcontracts, underlying1 derivative_underlying, sl_consideration, active_status, nominal_price, deal_purpose, Nvl(reporting_asset_class, ASSETCLASS) REPORTING_ASSET_CLASS, bsrnumber, dept_name, Nvl(stt, 0) stt, brokerage_amount, dealerbook, iobj, sectorname, payment_mode, 'TRUE' display_auth_info, Upper('TRUE') printdealticket, primarymarkettype, acc_interest, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, Theirbankname, country, settleflag
				FROM (
					SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, Decode(Lower(assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', assetclass), assetclass) assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No
						, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode,
						brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date, index_ratio, auid, post_accruedinterest,
						posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, bsr_code, netrate, netamount, lotsize, noofcontracts, underlying1, sl_consideration, active_status, nominal_price, deal_purpose, reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, sectorname, payment_mode, primarymarkettype, settleflag
					FROM (
						SELECT s.*, workflow, t.assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2,
							their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, dealno posdealno, portfolio Pos_portfolio, traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue,
							Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1,
							price_leg1, yield_leg1, principal, deal_location_code, osContract.depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, osContract.branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, cm8.bsr_code bsr_code, netrate, netamount, oscontract.lotsize, oscontract.noofcontracts, underlying1, sl_consideration, oscontract.active_status active_status, nominal_price, deal_purpose, ds.reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, oscontract.sectorname, oscontract.payment_mode, primarymarkettype, oscontract.settleflag settleflag
						FROM (
							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks,
								reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc,
								to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amt1 amount_leg1, amt1 qty_leg1, strikerate price_leg1, 0 yield_leg1, amt2 principal, '' deal_location_code, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0
								netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag
							FROM fxmaster
							WHERE nvl(deletionstatus, 'ND') <> 'D'
					AND contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, c.portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, CASE WHEN transaction_type_code IN (90, 91, 329, 330) THEN sl_date ELSE enddate END matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
											SELECT upper(PARAMVALUE)
											FROM params
											WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
											), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
												SELECT DISTINCT optional02
												FROM contractmaster
												WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
												) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower
									(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security'
									, s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0
								fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, nvl(sl_consideration, 0), 1 active_status, nominal_price, descr deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, dealerwiseprofitability dl, (
									SELECT compcode, compname
									FROM companymaster
									) cm, (
									SELECT compcode, compname, is_taxable
									FROM companymaster
									) cm1, (
									SELECT c.contractcode ccode, c1.loan_description loan_desc
									FROM contractmaster c, contractmaster c1
									WHERE c.refcontractno = c1.contractcode
									) contract, (
									SELECT code, descr, static_value
									FROM default_static_table
									WHERE MODULE_NAME = 'REVAL_PURPOSE'
									ORDER BY To_Number(static_value)
									) d
							WHERE c.contractcode = contract.ccode(+) AND c.purpose_code = d.code(+)
					AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer
					AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+)
					AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324) AND dl.portcode(+) = c.portcode
					AND To_Char(dl.code(+)) = To_Char(c.dealerbook) AND dl.asset_class_code(+) = 2
					AND c.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Mutual Fund' product, securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(type_name), 'CLOSE ENDED', matdate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt,
								accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, scheme_code securitysymbol, market product_type, mf.scheme_name security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode,
									'') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_number isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1
								principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, descr deal_purpose, '' bsrnumber, dept_name, 0 stt, 0 BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, mf.iobj, sc.sectorname, payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig, sectormaster sc, dealerwiseprofitability dl, paymentmode pm, (
									SELECT code, descr, static_value
									FROM default_static_table
									WHERE MODULE_NAME = 'REVAL_PURPOSE'
									ORDER BY To_Number(static_value)
									) d
							WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1))
					AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+)
					AND ig.sector = sc.SECTORCODE(+) AND mt.purpose_code = d.code(+) AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook)
					AND dl.asset_class_code(+) = 5 AND pm.pay_mode_code = mt.payment_mode_code
					AND contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Equity' product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, mt.contractcode contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt
								taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.scrip_code securitysymbol, market product_type, mf.scrip_name security_desc, subproduct underlying, mt.brokercode brokercode, brokeragedate, brokerage_curr, dealcharges.BROKERAGE_AMOUNT brokerage, brokeragebank
								, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_no isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1,
								amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, Nvl(dealcharges.net_rate, Nvl(mt.netrate, 0)) netrate, Nvl(dealcharges.net_amount, 0) netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, mf.active_status, 0 nominal_price, '' deal_purpose, bm.bsrnumber, dept_name, dealcharges.stt stt, dealcharges.BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm, companymaster ig, brokerage_master bm, dealerwiseprofitability dl, (
									SELECT CONTRACTCODE, STT, BROKERAGE_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN (((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) + STT) WHEN TRANSACTION_TYPE_CODE = 305 THEN (((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) - STT) WHEN TRANSACTION_TYPE_CODE = 192 THEN ((PRICE_LEG1 * QTY_LEG1) + (BROKERAGE_AMOUNT + STT)) WHEN TRANSACTION_TYPE_CODE = 204 THEN ((PRICE_LEG1 * QTY_LEG1) - (BROKERAGE_AMOUNT + STT)
														) END AS NET_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN ((((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 WHEN TRANSACTION_TYPE_CODE = 305 THEN ((((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 END AS NET_RATE, (BROKERAGE_AMOUNT / QTY_LEG1) B_UNIT
									FROM (
										SELECT CONTRACTCODE, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_STT_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', CHARGE_AMOUNT, 'STT_EQ_PUR', charge_amount, 'STT_EQ_SALE', charge_amount, 0)) AS STT, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_SALE', CHARGE_AMOUNT, 'BROKER_CHARGE_EQ_PUR', charge_amount, 'BROKER_CHARGE_EQ_SALE', charge_amount, 0)) AS BROKERAGE_AMOUNT, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
										FROM (
											SELECT dc.CONTRACTCODE, dc.EVENT_CHARGE_CODE, dc.CHARGE_AMOUNT, MT.QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE, p.paramname, p.paramvalue
											FROM DEAL_CHARGES DC, MUTUALFUND_TRANSACT MT, params p
											WHERE DC.CONTRACTCODE = MT.CONTRACTCODE AND p.paramvalue(+) = dc.event_charge_code AND p.paramname IN ('BROKER_CHARGE_EVENT_ORDER_STT_PUR', 'BROKER_CHARGE_EVENT_ORDER_PUR', 'BROKER_CHARGE_EVENT_ORDER_SALE', 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', 'STT_EQ_PUR', 'STT_EQ_SALE', 'BROKER_CHARGE_EQ_PUR', 'BROKER_CHARGE_EQ_SALE') AND EVENT_CHARGE_CODE IN (p.paramvalue)
											)
										GROUP BY CONTRACTCODE, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
										)
									) dealcharges
							WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND Lower(assetclass) = 'equity' AND nvl(deletionstatus, 'ND') <> 'D'
					AND mf.ratingagency_no = ra.ratingagency_no(+) AND mt.transaction_type_code NOT IN (207) AND dealcharges.contractcode(+) = mt.contractcode
					AND mf.issuer = ig.compcode(+) AND mt.brokercode = bm.brokercode(+) AND mt.exchangecode = bm.exchange_code(+) AND bm.asset_class_code(+) = 7
					AND bm.BR_WORKFLOWCODE(+) = 27 AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 7
					 AND mt.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01,
								optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.
								settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.profit_loss SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto,
								nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
									SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
									FROM equitymaster

									UNION ALL

									SELECT INDEX_NAME, INDEX_NAME, (
											SELECT compcode
											FROM companymaster
											WHERE compname = 'NONE' AND rownum = 1
											) ISSUER
									FROM index_master
									) eq, workflow ass, dealsymbol DE
							WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code
					AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D'
					 AND mt.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02
								optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term,
								'' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0
								) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
							WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+)
					AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%')
					 AND contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, ird.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03
								optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, ird.contractcode securitysymbol, 'SECONDARY' product_type, ird.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency
								currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, c.depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, c.branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0)
								contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, c.lotsize, c.noofcontracts, c.underlying underlying1, 0 sl_consideration, to_number(ird.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
							WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow
					AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND'
					 AND c.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01,
								optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.
								settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(
									contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
							WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode
					AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow
					 AND mt.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(OPENENDED), 'YES', maturitydate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt,
								accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode,
								'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, alt.isinnumber isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, decode(nvl(qty_leg1, 0), 0, ai_quantity, qty_leg1) qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository,
								bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, alternateinvestment alt, (
									SELECT marketsymbol, symbol
									FROM dealsymbol
									WHERE transactiontypecode = '1099999999'
									) d
							WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D'
					 AND contractcode = '<%-CONTRACTCODE%>'
							) oscontract, (
								SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
								FROM assetclass a, workflow w, transactiontype t
								WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
								) t, (
								SELECT subsidiaryname, bookname, portname portfolio, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
								FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
								WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
								) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
						WHERE 1 = 1 AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
						)
					WHERE 1 = 1
					)
				ORDER BY dealno DESC
					) mainqry
				,(SELECT '['||chargelist||']' charge, contractcode, total_charge FROM (
				SELECT LISTAGG(charges, ',') WITHIN GROUP (ORDER BY contractcode) AS chargelist, contractcode, Sum(charge_amount) total_charge
				FROM
				(
				SELECT '{"name":"'||event_charge_code||'","value":"'||charge_amount||'"}' charges, contractcode, charge_amount FROM deal_charges
				where contractcode = '<%-CONTRACTCODE%>'
				)
				GROUP BY  contractcode)) dc
				WHERE 1 = 1 AND transaction_type_code NOT IN (304, 305, 382, 383)
				AND mainqry.contractcode = dc.contractcode(+) and upper(nvl(confirmationstatus,'UNCONFIRMED')) = 'UNCONFIRMED'
			`,
        "filter":["CONTRACTCODE"]
        },
		"refresh":{
			"source":`
				SELECT mainqry.*, dc.total_charge,dc.charge, Decode(Upper(Nvl(AUTHORISATIONSTATUS, 'NA')), 'NA', 'Authorise', 'A', 'Confirm', '') next_action
				FROM (
					SELECT SUBSIDIARYNAME, BOOKNAME, PORTFOLIO, PRODUCT, SUBPRODUCT, currency CURR, Decode(TRANSACTIONTYPE, 'Split In', 'Split', TRANSACTIONTYPE) TRANSACTIONTYPE, Decode(TRANSACTION_TYPE, 'Split In', 'Split', TRANSACTION_TYPE) TRANSACTION_TYPE, CONTRACTCODE, Decode(product, 'Swaps', SECURITYSYMBOL, CONTRACTCODE) CONTRACT_ID, TRADEDATE, To_Char(TRADEDATE, 'dd/MM/yyyy hh24:mi:ss') AS TRANSACTIONDATETIME, VALUEDATE, MATDATE, TRADERID, COUNTERPARTY, CATEGORY, '' TRANS_CATEGORY, SECURITY_DESC, PRINCIPAL, 0 WITHHOLDINGTAX, AMOUNT_LEG1, QTY_LEG1, PRICE_LEG1, 0 GROSSAMT, YIELD_LEG1, 0 ACCR_INTR_PU, ACCRUEDINTEREST, CONSIDERATION, POST_CONSIDERATION, POST_ACC_INTEREST_LEG1, POST_ACCRUEDINTEREST, SL_YIELD, SL_PRICE, SL_ACC_INT, contract_wac wac, contract_revalwac revalwac, CASE WHEN TRANSACTIONTYPECODE IN ('112', '127', '108', '204', '161', '104', '391') THEN (nvl(price_leg1, 0) - nvl(contract_wac, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('101') THEN (nvl(contract_wac, 0) - nvl(price_leg1, 0)
										) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328') THEN SLB_PROFIT_LOSS ELSE 0 END profit_loss, REPO_RATE, REFERENCE_NO REFCONTRACTNO, YIELDTO, BANKCURR, AGENCY1 AGENCY1NAME, BANKNAME1, ACCOUNT1, AGENCY2 AGENCY2NAME, BANKNAME2, ACCOUNT2, THEIR_AGENCY1 THEIR_AGENCY1NAME, '' THEIR_BANKNAME1, THEIR_ACCOUNT1, '' THEIR_AGENCY2NAME, THEIR_BANKNAME2, THEIR_ACCOUNT2, LOCALCURR, LOCALCURRRATE, LOCALCURRAMT, GLOBALCURR, GLOBALCURRRATE, GLOBALCURRAMT, GROUPCURR, GROUPCURRAMT, GROUPCURRRATE, 0 WITHHOLDINGTAX_PER, 0 EFFECTIVERATE_PER, 0 EFFECTIVERATE_AMT, 0 UPFRONTFEES_PER, 0 UPFRONTFEES_AMT, 0 OTHERS_PER, 0 OTHERS_AMT, 0 COVERRATE, 0 PREMIA_PER, '' PREMIA, 0 STAMPDUTY, SECURED, '' NEGOTIABLE, BROKERAGEDATE, 0 BROKERAGETYPEVALUE, '' BROKERNAME, BROKERCODE, BROKERAGE, BROKERAGE_CURR, '' BROKERAGETYPE, REMARKS, 0 SERVICETAXTYPE, 0 SERVICETAXRATE, 0 SERVICETAXAMT, 0 ACCOUNTCHARGE, 0 NETRATEFLAG, nvl(authorisationstatus, 'NA') AUTHORISATIONSTATUSCODE, AUTHORISATIONSTATUS,
						AUTHSTATUSBY, AUTHSTATUSON, AUTHSTATUSREMARKS, CONFIRMATIONSTATUS, CONFSTATUSBY, CONFSTATUSON, CONFSTATUSREMARKS, TRANSACTIONTYPE TRANSTYPE, '' CONTRACTTEMPLATE, DEALNO, GROUPDEALNO, 0 PAY_WASHRATE, '' HEDGEON, NOTIONALSTEPRULE, 0 CAPS, 0 FLOORS, RANGEBARRIERS, BRANCH, DEALTYPE, OPTIONAL01, OPTIONAL02, OPTIONAL03, OPTIONAL04, OPTIONAL05, '' SPOTRATESOURCES_ID, PRODUCT_TYPE, 0 EXCHANGE_RATE, 0 WASHRATE, '' SETTLEMENT, 0 STRATEGYID, SUBPRODUCT PRODUCT_CODE, CONTRACTSTRUCTURE, WORKFLOW, '' INITIAL_EXCHANGE, '' CASHFLOWGENERATION, '' EARLYTERMINATION, BOOKID, deal_location_code, DEPOSITORY, '' DELIVERY_MODE, DELIVERY_MODE_CODE, EXCHANGECODE, PORTCODE, TRANSACTIONTYPECODE TRANSACTION_TYPE_CODE, PAYMENTMODE1, BANKCODE1, PAYMENTMODE2, BANKCODE2, '' CP_PAYMENTMODE1, '' CP_BANKCODE1, SUBSIDIARYCODE, COUNTERCODE, '' COUNTERPARTY_DEALER, ASSETCLASS, currency CONSCURRENCY, NOSTRO_REF_NO, NOSTRODATE, REFERENCE_NO, RESTRUCTURE_CONTRACTCODE, ROLLOVER_CONTRACTCODE, BRANCH_REF_NO, CURRNAME, '' BORROW_TERM, BENCHMARKID, 0 PARVALUE, 0 OFFERINGPRICE, '' INTERESTMODE, INTEREST, MARKUP,
						DAYCOUNT, INTERESTDIRECTION, 0 PAYMENTFREQ, 0 RESETFREQ, '' RESETDATE, DISCOUNTCURVE, 0 COUPYEAR, DEALSOURCE, AMOUNT, QUANTITY, RATE, PRODUCTDESC, BROKER_NAME, BROKERAGEBANKCODE, BROKERAGEBANKNAME, BROKERAGE_AC, '' LOAN_DESCRIPTION, FACEVALUE, ISINO_CODE, SECURITYSYMBOL, 0 INTEREST_TAX_CAT_CODE, PRODUCT1, PCHARGERATE, PCHARGEAMT, 0 XIRRVALUE, '' CUSTOM_CONTRACTCODE, 0 TERMVALUE, '' ACCOUNTINGTYPE, '' REPAY_COMMENCEMENT_DATE, 0 LRN_NUMBER, 0 CUSTOM_PENALTYRATE, 0 LGBG_NUMBER, '' SUPPLIER, '' VESSEL_NAME, 0 CHARGES_PAID_TILL, '' LATEST_DATE_OF_SHIPMENT, '' PAYMENT_TERMS, 0 ORIGINAL_AMOUNT, 0 COMMISSION_PERCENTAGE, REMARKS REMARK, DEAL_REMARKS, EMAIL_STATUS, AUID, MATDATE MATURITY, INDEX_RATIO, Nvl(ORDER_STATUS, 'Order Pending') ORDER_STATUS, To_Char(order_conf_date, 'dd/MM/yyyy hh24:mi:ss') AS order_conf_date, order_conf_by, Nvl(RECON_STATUS, 'Unreconciled') RECON_STATUS, decode(upper(RECON_STATUS), 'RECONCILED', '', RECON_REMARKS) RECON_REMARKS, FD_NUMBER, FD_INTEREST_RATE, FD_TENOR, FD_AMOUNT, FD_AMOUNT_PER, (
							SELECT descr
							FROM default_static_table
							WHERE code = '365' AND module_name = 'asba_fd_daycount'
							) FD_DAY_COUNT, FD_INTEREST, decode(Nvl(final_price, 1), 0, 'F', 'T') FINAL_PRICE, issuer, exchange, netrate, netamount, bsr_code, lotsize, noofcontracts, underlying1 derivative_underlying, sl_consideration, active_status, nominal_price, deal_purpose, Nvl(reporting_asset_class, ASSETCLASS) REPORTING_ASSET_CLASS, bsrnumber, dept_name, Nvl(stt, 0) stt, brokerage_amount, dealerbook, iobj, sectorname, payment_mode, 'TRUE' display_auth_info, Upper('TRUE') printdealticket, primarymarkettype, acc_interest, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, Theirbankname, country, settleflag
					FROM (
						SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, Decode(Lower(assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', assetclass), assetclass) assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No
							, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode,
							brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date, index_ratio, auid, post_accruedinterest,
							posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, bsr_code, netrate, netamount, lotsize, noofcontracts, underlying1, sl_consideration, active_status, nominal_price, deal_purpose, reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, sectorname, payment_mode, primarymarkettype, settleflag
						FROM (
							SELECT s.*, workflow, t.assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2,
								their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, dealno posdealno, portfolio Pos_portfolio, traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue,
								Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1,
								price_leg1, yield_leg1, principal, deal_location_code, osContract.depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, osContract.branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, cm8.bsr_code bsr_code, netrate, netamount, oscontract.lotsize, oscontract.noofcontracts, underlying1, sl_consideration, oscontract.active_status active_status, nominal_price, deal_purpose, ds.reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, oscontract.sectorname, oscontract.payment_mode, primarymarkettype, oscontract.settleflag settleflag
							FROM (
								SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks,
									reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc,
									to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amt1 amount_leg1, amt1 qty_leg1, strikerate price_leg1, 0 yield_leg1, amt2 principal, '' deal_location_code, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0
									netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag
								FROM fxmaster
								WHERE nvl(deletionstatus, 'ND') <> 'D'

								UNION ALL

								SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, c.portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, CASE WHEN transaction_type_code IN (90, 91, 329, 330) THEN sl_date ELSE enddate END matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
												SELECT upper(PARAMVALUE)
												FROM params
												WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
												), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
													SELECT DISTINCT optional02
													FROM contractmaster
													WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
													) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower
										(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security'
										, s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0
									fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, nvl(sl_consideration, 0), 1 active_status, nominal_price, descr deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, dealerwiseprofitability dl, (
										SELECT compcode, compname
										FROM companymaster
										) cm, (
										SELECT compcode, compname, is_taxable
										FROM companymaster
										) cm1, (
										SELECT c.contractcode ccode, c1.loan_description loan_desc
										FROM contractmaster c, contractmaster c1
										WHERE c.refcontractno = c1.contractcode
										) contract, (
										SELECT code, descr, static_value
										FROM default_static_table
										WHERE MODULE_NAME = 'REVAL_PURPOSE'
										ORDER BY To_Number(static_value)
										) d
								WHERE c.contractcode = contract.ccode(+) AND c.purpose_code = d.code(+)
						AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer
						AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+)
						AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324) AND dl.portcode(+) = c.portcode
						AND To_Char(dl.code(+)) = To_Char(c.dealerbook) AND dl.asset_class_code(+) = 2

								UNION ALL

								SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Mutual Fund' product, securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(type_name), 'CLOSE ENDED', matdate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt,
									accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, scheme_code securitysymbol, market product_type, mf.scheme_name security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode,
										'') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_number isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1
									principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, descr deal_purpose, '' bsrnumber, dept_name, 0 stt, 0 BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, mf.iobj, sc.sectorname, payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig, sectormaster sc, dealerwiseprofitability dl, paymentmode pm, (
										SELECT code, descr, static_value
										FROM default_static_table
										WHERE MODULE_NAME = 'REVAL_PURPOSE'
										ORDER BY To_Number(static_value)
										) d
								WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1))
						AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+)
						AND ig.sector = sc.SECTORCODE(+) AND mt.purpose_code = d.code(+) AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook)
						AND dl.asset_class_code(+) = 5 AND pm.pay_mode_code = mt.payment_mode_code

								UNION ALL

								SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Equity' product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, mt.contractcode contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt
									taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.scrip_code securitysymbol, market product_type, mf.scrip_name security_desc, subproduct underlying, mt.brokercode brokercode, brokeragedate, brokerage_curr, dealcharges.BROKERAGE_AMOUNT brokerage, brokeragebank
									, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_no isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1,
									amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, Nvl(dealcharges.net_rate, Nvl(mt.netrate, 0)) netrate, Nvl(dealcharges.net_amount, 0) netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, mf.active_status, 0 nominal_price, '' deal_purpose, bm.bsrnumber, dept_name, dealcharges.stt stt, dealcharges.BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm, companymaster ig, brokerage_master bm, dealerwiseprofitability dl, (
										SELECT CONTRACTCODE, STT, BROKERAGE_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN (((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) + STT) WHEN TRANSACTION_TYPE_CODE = 305 THEN (((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) - STT) WHEN TRANSACTION_TYPE_CODE = 192 THEN ((PRICE_LEG1 * QTY_LEG1) + (BROKERAGE_AMOUNT + STT)) WHEN TRANSACTION_TYPE_CODE = 204 THEN ((PRICE_LEG1 * QTY_LEG1) - (BROKERAGE_AMOUNT + STT)
															) END AS NET_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN ((((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 WHEN TRANSACTION_TYPE_CODE = 305 THEN ((((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 END AS NET_RATE, (BROKERAGE_AMOUNT / QTY_LEG1) B_UNIT
										FROM (
											SELECT CONTRACTCODE, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_STT_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', CHARGE_AMOUNT, 'STT_EQ_PUR', charge_amount, 'STT_EQ_SALE', charge_amount, 0)) AS STT, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_SALE', CHARGE_AMOUNT, 'BROKER_CHARGE_EQ_PUR', charge_amount, 'BROKER_CHARGE_EQ_SALE', charge_amount, 0)) AS BROKERAGE_AMOUNT, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
											FROM (
												SELECT dc.CONTRACTCODE, dc.EVENT_CHARGE_CODE, dc.CHARGE_AMOUNT, MT.QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE, p.paramname, p.paramvalue
												FROM DEAL_CHARGES DC, MUTUALFUND_TRANSACT MT, params p
												WHERE DC.CONTRACTCODE = MT.CONTRACTCODE AND p.paramvalue(+) = dc.event_charge_code AND p.paramname IN ('BROKER_CHARGE_EVENT_ORDER_STT_PUR', 'BROKER_CHARGE_EVENT_ORDER_PUR', 'BROKER_CHARGE_EVENT_ORDER_SALE', 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', 'STT_EQ_PUR', 'STT_EQ_SALE', 'BROKER_CHARGE_EQ_PUR', 'BROKER_CHARGE_EQ_SALE') AND EVENT_CHARGE_CODE IN (p.paramvalue)
												)
											GROUP BY CONTRACTCODE, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
											)
										) dealcharges
								WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND Lower(assetclass) = 'equity' AND nvl(deletionstatus, 'ND') <> 'D'
						AND mf.ratingagency_no = ra.ratingagency_no(+) AND mt.transaction_type_code NOT IN (207) AND dealcharges.contractcode(+) = mt.contractcode
						AND mf.issuer = ig.compcode(+) AND mt.brokercode = bm.brokercode(+) AND mt.exchangecode = bm.exchange_code(+) AND bm.asset_class_code(+) = 7
						AND bm.BR_WORKFLOWCODE(+) = 27 AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 7

								UNION ALL

								SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01,
									optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.
									settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.profit_loss SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto,
									nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
										SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
										FROM equitymaster

										UNION ALL

										SELECT INDEX_NAME, INDEX_NAME, (
												SELECT compcode
												FROM companymaster
												WHERE compname = 'NONE' AND rownum = 1
												) ISSUER
										FROM index_master
										) eq, workflow ass, dealsymbol DE
								WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code
						AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D'

								UNION ALL

								SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02
									optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term,
									'' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0
									) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
								WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+)
						AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%')

								UNION ALL

								SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, ird.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03
									optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, ird.contractcode securitysymbol, 'SECONDARY' product_type, ird.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency
									currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, c.depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, c.branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0)
									contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, c.lotsize, c.noofcontracts, c.underlying underlying1, 0 sl_consideration, to_number(ird.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
								WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow
						AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND'

								UNION ALL

								SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01,
									optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.
									settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(
										contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
								WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode
						AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow

								UNION ALL

								SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(OPENENDED), 'YES', maturitydate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt,
									accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode,
									'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, alt.isinnumber isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, decode(nvl(qty_leg1, 0), 0, ai_quantity, qty_leg1) qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository,
									bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
								FROM mutualfund_transact mt, alternateinvestment alt, (
										SELECT marketsymbol, symbol
										FROM dealsymbol
										WHERE transactiontypecode = '1099999999'
										) d
								WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D'
								) oscontract, (
									SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
									FROM assetclass a, workflow w, transactiontype t
									WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
									) t, (
									SELECT subsidiaryname, bookname, portname portfolio, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
									FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
									WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
									) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
							WHERE 1 = 1 AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
							)
						WHERE 1 = 1
						)
					ORDER BY dealno DESC
					) mainqry
					,(SELECT '['||chargelist||']' charge, contractcode, total_charge FROM (
					SELECT LISTAGG(charges, ',') WITHIN GROUP (ORDER BY contractcode) AS chargelist, contractcode, Sum(charge_amount) total_charge
					FROM
					(
					SELECT '{"name":"'||event_charge_code||'","value":"'||charge_amount||'"}' charges, contractcode, charge_amount FROM deal_charges
					)
					GROUP BY  contractcode)) dc
					WHERE 1 = 1 AND transaction_type_code NOT IN (304, 305, 382, 383)
					AND mainqry.contractcode = dc.contractcode(+) and upper(nvl(confirmationstatus,'UNCONFIRMED')) = 'UNCONFIRMED' AND trunc(tradedate) BETWEEN to_date('<%-FROMDATE%>') AND to_date('<%-TODATE%>')
				`,
				"filter":["FROMDATE","TODATE"]
				},
			"update":{
			"source":`
			SELECT mainqry.*, dc.total_charge,dc.charge, Decode(Upper(Nvl(AUTHORISATIONSTATUS, 'NA')), 'NA', 'Authorise', 'A', 'Confirm', '') next_action
			FROM (
				SELECT SUBSIDIARYNAME, BOOKNAME, PORTFOLIO, PRODUCT, SUBPRODUCT, currency CURR, Decode(TRANSACTIONTYPE, 'Split In', 'Split', TRANSACTIONTYPE) TRANSACTIONTYPE, Decode(TRANSACTION_TYPE, 'Split In', 'Split', TRANSACTION_TYPE) TRANSACTION_TYPE, CONTRACTCODE, Decode(product, 'Swaps', SECURITYSYMBOL, CONTRACTCODE) CONTRACT_ID, TRADEDATE, To_Char(TRADEDATE, 'dd/MM/yyyy hh24:mi:ss') AS TRANSACTIONDATETIME, VALUEDATE, MATDATE, TRADERID, COUNTERPARTY, CATEGORY, '' TRANS_CATEGORY, SECURITY_DESC, PRINCIPAL, 0 WITHHOLDINGTAX, AMOUNT_LEG1, QTY_LEG1, PRICE_LEG1, 0 GROSSAMT, YIELD_LEG1, 0 ACCR_INTR_PU, ACCRUEDINTEREST, CONSIDERATION, POST_CONSIDERATION, POST_ACC_INTEREST_LEG1, POST_ACCRUEDINTEREST, SL_YIELD, SL_PRICE, SL_ACC_INT, contract_wac wac, contract_revalwac revalwac, CASE WHEN TRANSACTIONTYPECODE IN ('112', '127', '108', '204', '161', '104', '391') THEN (nvl(price_leg1, 0) - nvl(contract_wac, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('101') THEN (nvl(contract_wac, 0) - nvl(price_leg1, 0)
									) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328') THEN SLB_PROFIT_LOSS ELSE 0 END profit_loss, REPO_RATE, REFERENCE_NO REFCONTRACTNO, YIELDTO, BANKCURR, AGENCY1 AGENCY1NAME, BANKNAME1, ACCOUNT1, AGENCY2 AGENCY2NAME, BANKNAME2, ACCOUNT2, THEIR_AGENCY1 THEIR_AGENCY1NAME, '' THEIR_BANKNAME1, THEIR_ACCOUNT1, '' THEIR_AGENCY2NAME, THEIR_BANKNAME2, THEIR_ACCOUNT2, LOCALCURR, LOCALCURRRATE, LOCALCURRAMT, GLOBALCURR, GLOBALCURRRATE, GLOBALCURRAMT, GROUPCURR, GROUPCURRAMT, GROUPCURRRATE, 0 WITHHOLDINGTAX_PER, 0 EFFECTIVERATE_PER, 0 EFFECTIVERATE_AMT, 0 UPFRONTFEES_PER, 0 UPFRONTFEES_AMT, 0 OTHERS_PER, 0 OTHERS_AMT, 0 COVERRATE, 0 PREMIA_PER, '' PREMIA, 0 STAMPDUTY, SECURED, '' NEGOTIABLE, BROKERAGEDATE, 0 BROKERAGETYPEVALUE, '' BROKERNAME, BROKERCODE, BROKERAGE, BROKERAGE_CURR, '' BROKERAGETYPE, REMARKS, 0 SERVICETAXTYPE, 0 SERVICETAXRATE, 0 SERVICETAXAMT, 0 ACCOUNTCHARGE, 0 NETRATEFLAG, nvl(authorisationstatus, 'NA') AUTHORISATIONSTATUSCODE, AUTHORISATIONSTATUS,
					AUTHSTATUSBY, AUTHSTATUSON, AUTHSTATUSREMARKS, CONFIRMATIONSTATUS, CONFSTATUSBY, CONFSTATUSON, CONFSTATUSREMARKS, TRANSACTIONTYPE TRANSTYPE, '' CONTRACTTEMPLATE, DEALNO, GROUPDEALNO, 0 PAY_WASHRATE, '' HEDGEON, NOTIONALSTEPRULE, 0 CAPS, 0 FLOORS, RANGEBARRIERS, BRANCH, DEALTYPE, OPTIONAL01, OPTIONAL02, OPTIONAL03, OPTIONAL04, OPTIONAL05, '' SPOTRATESOURCES_ID, PRODUCT_TYPE, 0 EXCHANGE_RATE, 0 WASHRATE, '' SETTLEMENT, 0 STRATEGYID, SUBPRODUCT PRODUCT_CODE, CONTRACTSTRUCTURE, WORKFLOW, '' INITIAL_EXCHANGE, '' CASHFLOWGENERATION, '' EARLYTERMINATION, BOOKID, deal_location_code, DEPOSITORY, '' DELIVERY_MODE, DELIVERY_MODE_CODE, EXCHANGECODE, PORTCODE, TRANSACTIONTYPECODE TRANSACTION_TYPE_CODE, PAYMENTMODE1, BANKCODE1, PAYMENTMODE2, BANKCODE2, '' CP_PAYMENTMODE1, '' CP_BANKCODE1, SUBSIDIARYCODE, COUNTERCODE, '' COUNTERPARTY_DEALER, ASSETCLASS, currency CONSCURRENCY, NOSTRO_REF_NO, NOSTRODATE, REFERENCE_NO, RESTRUCTURE_CONTRACTCODE, ROLLOVER_CONTRACTCODE, BRANCH_REF_NO, CURRNAME, '' BORROW_TERM, BENCHMARKID, 0 PARVALUE, 0 OFFERINGPRICE, '' INTERESTMODE, INTEREST, MARKUP,
					DAYCOUNT, INTERESTDIRECTION, 0 PAYMENTFREQ, 0 RESETFREQ, '' RESETDATE, DISCOUNTCURVE, 0 COUPYEAR, DEALSOURCE, AMOUNT, QUANTITY, RATE, PRODUCTDESC, BROKER_NAME, BROKERAGEBANKCODE, BROKERAGEBANKNAME, BROKERAGE_AC, '' LOAN_DESCRIPTION, FACEVALUE, ISINO_CODE, SECURITYSYMBOL, 0 INTEREST_TAX_CAT_CODE, PRODUCT1, PCHARGERATE, PCHARGEAMT, 0 XIRRVALUE, '' CUSTOM_CONTRACTCODE, 0 TERMVALUE, '' ACCOUNTINGTYPE, '' REPAY_COMMENCEMENT_DATE, 0 LRN_NUMBER, 0 CUSTOM_PENALTYRATE, 0 LGBG_NUMBER, '' SUPPLIER, '' VESSEL_NAME, 0 CHARGES_PAID_TILL, '' LATEST_DATE_OF_SHIPMENT, '' PAYMENT_TERMS, 0 ORIGINAL_AMOUNT, 0 COMMISSION_PERCENTAGE, REMARKS REMARK, DEAL_REMARKS, EMAIL_STATUS, AUID, MATDATE MATURITY, INDEX_RATIO, Nvl(ORDER_STATUS, 'Order Pending') ORDER_STATUS, To_Char(order_conf_date, 'dd/MM/yyyy hh24:mi:ss') AS order_conf_date, order_conf_by, Nvl(RECON_STATUS, 'Unreconciled') RECON_STATUS, decode(upper(RECON_STATUS), 'RECONCILED', '', RECON_REMARKS) RECON_REMARKS, FD_NUMBER, FD_INTEREST_RATE, FD_TENOR, FD_AMOUNT, FD_AMOUNT_PER, (
						SELECT descr
						FROM default_static_table
						WHERE code = '365' AND module_name = 'asba_fd_daycount'
						) FD_DAY_COUNT, FD_INTEREST, decode(Nvl(final_price, 1), 0, 'F', 'T') FINAL_PRICE, issuer, exchange, netrate, netamount, bsr_code, lotsize, noofcontracts, underlying1 derivative_underlying, sl_consideration, active_status, nominal_price, deal_purpose, Nvl(reporting_asset_class, ASSETCLASS) REPORTING_ASSET_CLASS, bsrnumber, dept_name, Nvl(stt, 0) stt, brokerage_amount, dealerbook, iobj, sectorname, payment_mode, 'TRUE' display_auth_info, Upper('TRUE') printdealticket, primarymarkettype, acc_interest, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, Theirbankname, country, settleflag
				FROM (
					SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, Decode(Lower(assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', assetclass), assetclass) assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No
						, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode,
						brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date, index_ratio, auid, post_accruedinterest,
						posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, bsr_code, netrate, netamount, lotsize, noofcontracts, underlying1, sl_consideration, active_status, nominal_price, deal_purpose, reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, sectorname, payment_mode, primarymarkettype, settleflag
					FROM (
						SELECT s.*, workflow, t.assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2,
							their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, dealno posdealno, portfolio Pos_portfolio, traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue,
							Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1,
							price_leg1, yield_leg1, principal, deal_location_code, osContract.depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, osContract.branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, cm8.bsr_code bsr_code, netrate, netamount, oscontract.lotsize, oscontract.noofcontracts, underlying1, sl_consideration, oscontract.active_status active_status, nominal_price, deal_purpose, ds.reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, oscontract.sectorname, oscontract.payment_mode, primarymarkettype, oscontract.settleflag settleflag
						FROM (
							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks,
								reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc,
								to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amt1 amount_leg1, amt1 qty_leg1, strikerate price_leg1, 0 yield_leg1, amt2 principal, '' deal_location_code, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0
								netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag
							FROM fxmaster
							WHERE nvl(deletionstatus, 'ND') <> 'D' AND contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, c.portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, CASE WHEN transaction_type_code IN (90, 91, 329, 330) THEN sl_date ELSE enddate END matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
											SELECT upper(PARAMVALUE)
											FROM params
											WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
											), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
												SELECT DISTINCT optional02
												FROM contractmaster
												WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
												) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower
									(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security'
									, s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0
								fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, nvl(sl_consideration, 0), 1 active_status, nominal_price, descr deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, dealerwiseprofitability dl, (
									SELECT compcode, compname
									FROM companymaster
									) cm, (
									SELECT compcode, compname, is_taxable
									FROM companymaster
									) cm1, (
									SELECT c.contractcode ccode, c1.loan_description loan_desc
									FROM contractmaster c, contractmaster c1
									WHERE c.refcontractno = c1.contractcode
									) contract, (
									SELECT code, descr, static_value
									FROM default_static_table
									WHERE MODULE_NAME = 'REVAL_PURPOSE'
									ORDER BY To_Number(static_value)
									) d
							WHERE c.contractcode = contract.ccode(+) AND c.purpose_code = d.code(+)
					AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer
					AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+)
					AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324) AND dl.portcode(+) = c.portcode
					AND To_Char(dl.code(+)) = To_Char(c.dealerbook) AND dl.asset_class_code(+) = 2
					AND c.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Mutual Fund' product, securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(type_name), 'CLOSE ENDED', matdate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt,
								accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, scheme_code securitysymbol, market product_type, mf.scheme_name security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode,
									'') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_number isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1
								principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, descr deal_purpose, '' bsrnumber, dept_name, 0 stt, 0 BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, mf.iobj, sc.sectorname, payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig, sectormaster sc, dealerwiseprofitability dl, paymentmode pm, (
									SELECT code, descr, static_value
									FROM default_static_table
									WHERE MODULE_NAME = 'REVAL_PURPOSE'
									ORDER BY To_Number(static_value)
									) d
							WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1))
					AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+)
					AND ig.sector = sc.SECTORCODE(+) AND mt.purpose_code = d.code(+) AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook)
					AND dl.asset_class_code(+) = 5 AND pm.pay_mode_code = mt.payment_mode_code 
					AND contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Equity' product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, mt.contractcode contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt
								taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.scrip_code securitysymbol, market product_type, mf.scrip_name security_desc, subproduct underlying, mt.brokercode brokercode, brokeragedate, brokerage_curr, dealcharges.BROKERAGE_AMOUNT brokerage, brokeragebank
								, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_no isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1,
								amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, Nvl(dealcharges.net_rate, Nvl(mt.netrate, 0)) netrate, Nvl(dealcharges.net_amount, 0) netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, mf.active_status, 0 nominal_price, '' deal_purpose, bm.bsrnumber, dept_name, dealcharges.stt stt, dealcharges.BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm, companymaster ig, brokerage_master bm, dealerwiseprofitability dl, (
									SELECT CONTRACTCODE, STT, BROKERAGE_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN (((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) + STT) WHEN TRANSACTION_TYPE_CODE = 305 THEN (((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) - STT) WHEN TRANSACTION_TYPE_CODE = 192 THEN ((PRICE_LEG1 * QTY_LEG1) + (BROKERAGE_AMOUNT + STT)) WHEN TRANSACTION_TYPE_CODE = 204 THEN ((PRICE_LEG1 * QTY_LEG1) - (BROKERAGE_AMOUNT + STT)
														) END AS NET_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN ((((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 WHEN TRANSACTION_TYPE_CODE = 305 THEN ((((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 END AS NET_RATE, (BROKERAGE_AMOUNT / QTY_LEG1) B_UNIT
									FROM (
										SELECT CONTRACTCODE, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_STT_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', CHARGE_AMOUNT, 'STT_EQ_PUR', charge_amount, 'STT_EQ_SALE', charge_amount, 0)) AS STT, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_SALE', CHARGE_AMOUNT, 'BROKER_CHARGE_EQ_PUR', charge_amount, 'BROKER_CHARGE_EQ_SALE', charge_amount, 0)) AS BROKERAGE_AMOUNT, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
										FROM (
											SELECT dc.CONTRACTCODE, dc.EVENT_CHARGE_CODE, dc.CHARGE_AMOUNT, MT.QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE, p.paramname, p.paramvalue
											FROM DEAL_CHARGES DC, MUTUALFUND_TRANSACT MT, params p
											WHERE DC.CONTRACTCODE = MT.CONTRACTCODE AND p.paramvalue(+) = dc.event_charge_code AND p.paramname IN ('BROKER_CHARGE_EVENT_ORDER_STT_PUR', 'BROKER_CHARGE_EVENT_ORDER_PUR', 'BROKER_CHARGE_EVENT_ORDER_SALE', 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', 'STT_EQ_PUR', 'STT_EQ_SALE', 'BROKER_CHARGE_EQ_PUR', 'BROKER_CHARGE_EQ_SALE') AND EVENT_CHARGE_CODE IN (p.paramvalue)
											)
										GROUP BY CONTRACTCODE, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
										)
									) dealcharges
							WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND Lower(assetclass) = 'equity' AND nvl(deletionstatus, 'ND') <> 'D'
					AND mf.ratingagency_no = ra.ratingagency_no(+) AND mt.transaction_type_code NOT IN (207) AND dealcharges.contractcode(+) = mt.contractcode
					AND mf.issuer = ig.compcode(+) AND mt.brokercode = bm.brokercode(+) AND mt.exchangecode = bm.exchange_code(+) AND bm.asset_class_code(+) = 7
					AND bm.BR_WORKFLOWCODE(+) = 27 AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 7
					 AND mt.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01,
								optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.
								settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.profit_loss SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto,
								nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
									SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
									FROM equitymaster

									UNION ALL

									SELECT INDEX_NAME, INDEX_NAME, (
											SELECT compcode
											FROM companymaster
											WHERE compname = 'NONE' AND rownum = 1
											) ISSUER
									FROM index_master
									) eq, workflow ass, dealsymbol DE
							WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code
					AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D'
					 AND mt.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02
								optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term,
								'' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0
								) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
							WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+)
					AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%')
					 AND contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, ird.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03
								optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, ird.contractcode securitysymbol, 'SECONDARY' product_type, ird.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency
								currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, c.depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, c.branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0)
								contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, c.lotsize, c.noofcontracts, c.underlying underlying1, 0 sl_consideration, to_number(ird.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
							WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow
					AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND'
					 AND c.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01,
								optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.
								settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(
									contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
							WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode
					AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow
					 AND mt.contractcode = '<%-CONTRACTCODE%>'

							UNION ALL

							SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(OPENENDED), 'YES', maturitydate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt,
								accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode,
								'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, alt.isinnumber isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, decode(nvl(qty_leg1, 0), 0, ai_quantity, qty_leg1) qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository,
								bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag
							FROM mutualfund_transact mt, alternateinvestment alt, (
									SELECT marketsymbol, symbol
									FROM dealsymbol
									WHERE transactiontypecode = '1099999999'
									) d
							WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D'
					 AND contractcode = '<%-CONTRACTCODE%>'
							) oscontract, (
								SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
								FROM assetclass a, workflow w, transactiontype t
								WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
								) t, (
								SELECT subsidiaryname, bookname, portname portfolio, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
								FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
								WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
								) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
						WHERE 1 = 1 AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
						)
					WHERE 1 = 1
					)
				ORDER BY dealno DESC
					) mainqry
				,(SELECT '['||chargelist||']' charge, contractcode, total_charge FROM (
				SELECT LISTAGG(charges, ',') WITHIN GROUP (ORDER BY contractcode) AS chargelist, contractcode, Sum(charge_amount) total_charge
				FROM
				(
				SELECT '{"name":"'||event_charge_code||'","value":"'||charge_amount||'"}' charges, contractcode, charge_amount FROM deal_charges
				where contractcode = '<%-CONTRACTCODE%>'
				)
				GROUP BY  contractcode)) dc
				WHERE 1 = 1 AND transaction_type_code NOT IN (304, 305, 382, 383)
				AND mainqry.contractcode = dc.contractcode(+) and upper(nvl(confirmationstatus,'UNCONFIRMED')) = 'UNCONFIRMED'
				`,
				"filter":["CONTRACTCODE"]
				},
			"delete":{
				"source":``,
				"filter":["CONTRACTCODE"]
			}
		},
		{
			"collectionName":"fx_positions",
			"notificationFilter":[],
			"create":{
			"source":`
							SELECT * FROM (SELECT * FROM fxpositionsgaps)  where 1=1 and ccy1='<%-CCY1%>'
			`,
				"filter":["CCY1"]
        },
		"refresh":{
			"source":`
							SELECT * FROM (SELECT *  FROM fxpositionsgaps fxgap) 
				`,
				"filter":[]
				},
			"update":{
			"source":`
							SELECT * FROM (SELECT *  FROM fxpositionsgaps fxgap) where 1=1 and ccy1='<%-CCY1%>'
				`,
				"filter":["CCY1"]
				},
			"delete":{
				"source":``,
				"filter":["CCY1"]
			}
		},
		{
			"collectionName":"fxpositionslog",
			"notificationFilter":[],
			"create":{
			"source":`SELECT fxpositionlog_seq.NEXTVAL log_id, ccy1 AS ccy, last_position position, Trunc(current_date) position_date, current_date last_updatedon FROM fxpositionsgaps WHERE ccy1='<%-CCY1%>'`,
        "filter":["CCY1"]
        },
		"refresh":{
			"source":`SELECT fxpositionlog_seq.NEXTVAL log_id, ccy AS ccy, position, Trunc(current_date) position_date, current_date last_updatedon FROM fxpositionlog `,
				"filter": []
				},
			"update":{
			"source":`SELECT fxpositionlog_seq.NEXTVAL log_id, ccy1 AS ccy, last_position position, Trunc(current_date) position_date, current_date last_updatedon FROM fxpositionsgaps WHERE ccy1='<%-CCY1%>'`,
				"filter":["CCY1"]
				},
			"delete":{
				"source":``,
				"filter":["CCY1"]
			}
		},
		{
			"collectionName":"fx_gpb_data",
			"notificationFilter":[],
			"create":{
			"source":`Select usd_balances, fcy_investment, nopl, nopl_limit, nopl_fcyinr, nopl_fcyinr_limit, agl, agl_limit, fedai_var, fedai_var_limit From fx_gpb_data`,
        "filter":[]
        },
		"refresh":{
			"source":`Select usd_balances, fcy_investment, nopl, nopl_limit, nopl_fcyinr, nopl_fcyinr_limit, agl, agl_limit, fedai_var, fedai_var_limit From fx_gpb_data`,
				"filter":[]
				},
			"update":{
			"source":`Select usd_balances, fcy_investment, nopl, nopl_limit, nopl_fcyinr, nopl_fcyinr_limit, agl, agl_limit, fedai_var, fedai_var_limit From fx_gpb_data`,
				"filter":[]
				},
			"delete":{
				"source":``,
				"filter":[]
			}
		},
		{
			"collectionName":"fx_gpb_mat_profile",
			"notificationFilter":[],
			"create":{
			"source":`Select m1 as "1M", m2 as "2M", m3 as "3M", m4 as "4M", m5 as "5M", m6 as "6M", m12 as "12M" From fx_gpb_mat_profile`,
			"filter":[]
			},
		"refresh":{
			"source":`Select m1 as "1M", m2 as "2M", m3 as "3M", m4 as "4M", m5 as "5M", m6 as "6M", m12 as "12M" From fx_gpb_mat_profile`,
				"filter":[]
				},
			"update":{
			"source":`Select m1 as "1M", m2 as "2M", m3 as "3M", m4 as "4M", m5 as "5M", m6 as "6M", m12 as "12M" From fx_gpb_mat_profile`,
				"filter":[]
				},
			"delete":{
				"source":``,
				"filter":[]
			}
		},
		{
			"collectionName":"fx_trade_summary",
			"notificationFilter":[],
			"create":{
			"source":`SELECT * FROM (SELECT 'Total Trades' "Total Trades", Count(*) total_cnt FROM fxmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' 
				AND Nvl(reversalstatus,'F')='F'),
				(SELECT 'Authorised deals' "Authorised deals", Count(*) auth_cnt FROM fxmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Nvl(reversalstatus,'F')='F'
				AND Nvl(authorisationstatus,'NA') = 'A'),
				(
				SELECT 'UnAuthorised deals' "UnAuthorised deals", Count(*) unauth_cnt FROM fxmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Nvl(reversalstatus,'F')='F'
				AND Nvl(authorisationstatus,'NA') = 'NA')
				,
				(SELECT 'Confirmed deals' "Confirmed deals", Count(*) conf_cnt FROM fxmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Nvl(reversalstatus,'F')='F'
				AND Nvl(confirmationstatus,'NA') = 'C')
				,
				(SELECT 'UnConfirmed deals' "UnConfirmed deals", Count(*) unconf_cnt FROM fxmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Nvl(reversalstatus,'F')='F'
				AND Nvl(confirmationstatus,'NA') = 'NA')`,
			"filter":["ASONDATE"]
			},
			"refresh":{
			"source":`SELECT * FROM (SELECT 'Total Trades' "Total Trades", Count(*) total_cnt FROM fxmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' 
				AND Nvl(reversalstatus,'F')='F'),
				(SELECT 'Authorised deals' "Authorised deals", Count(*) auth_cnt FROM fxmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Nvl(reversalstatus,'F')='F'
				AND Nvl(authorisationstatus,'NA') = 'A'),
				(
				SELECT 'UnAuthorised deals' "UnAuthorised deals", Count(*) unauth_cnt FROM fxmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Nvl(reversalstatus,'F')='F'
				AND Nvl(authorisationstatus,'NA') = 'NA')
				,
				(SELECT 'Confirmed deals' "Confirmed deals", Count(*) conf_cnt FROM fxmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Nvl(reversalstatus,'F')='F'
				AND Nvl(confirmationstatus,'NA') = 'C')
				,
				(SELECT 'UnConfirmed deals' "UnConfirmed deals", Count(*) unconf_cnt FROM fxmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Nvl(reversalstatus,'F')='F'
				AND Nvl(confirmationstatus,'NA') = 'NA')`,
			"filter":["ASONDATE"]
				},
			"update":{
			"source":`SELECT * FROM (SELECT 'Total Trades' "Total Trades", Count(*) total_cnt FROM fxmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' 
				AND Nvl(reversalstatus,'F')='F'),
				(SELECT 'Authorised deals' "Authorised deals", Count(*) auth_cnt FROM fxmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Nvl(reversalstatus,'F')='F'
				AND Nvl(authorisationstatus,'NA') = 'A'),
				(
				SELECT 'UnAuthorised deals' "UnAuthorised deals", Count(*) unauth_cnt FROM fxmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Nvl(reversalstatus,'F')='F'
				AND Nvl(authorisationstatus,'NA') = 'NA')
				,
				(SELECT 'Confirmed deals' "Confirmed deals", Count(*) conf_cnt FROM fxmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Nvl(reversalstatus,'F')='F'
				AND Nvl(confirmationstatus,'NA') = 'C')
				,
				(SELECT 'UnConfirmed deals' "UnConfirmed deals", Count(*) unconf_cnt FROM fxmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Nvl(reversalstatus,'F')='F'
				AND Nvl(confirmationstatus,'NA') = 'NA')`,
			"filter":["ASONDATE"]
				},
			"delete":{
				"source":``,
				"filter":[]
			}
		},
		{
			"collectionName":"fx_upl_summary",
			"notificationFilter":[],
			"create":{
			"source":`SELECT source, Sum(total_deals) total_deals, Sum(uploaded_deals)  uploaded_deals, Sum(unprocessed_deals) unprocessed_deals FROM 
				( 
				SELECT 'Reuters' source, unprocessed_deals total_deals, 0 uploaded_deals, unprocessed_deals, 1 srno FROM (
				SELECT Count(*) unprocessed_deals FROM INT_UPL_FILE_EXCEPTION WHERE STATUS = 'UNSUCCESS' 
				AND filename NOT IN (SELECT filename FROM INT_UPL_FILE_EXCEPTION WHERE STATUS = 'SUCCESS' and FILE_id = 'MF46' AND Trunc(upload_date_time) = Trunc(sysdate)) 
				and FILE_id = 'MF46' AND Trunc(upload_date_time) = '<%-ASONDATE%>')
				UNION all
				SELECT 'Reuters' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals, 1 srno
				FROM (
				SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					   CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					   remarks
				FROM upl_stage_fxtransact WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and remarks = 'Reuters Deal Upload'
				)
				UNION ALL
				SELECT 'FX Clear' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals, 2 srno
				FROM (
				SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					   CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					   remarks
				FROM upl_stage_fxtransact WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and remarks = 'FX Clear Deal Upload'
				)
				UNION ALL
				SELECT 'FIX' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals, 3 srno
				FROM (
				SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					   CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					   remarks
				FROM upl_stage_fxtransact WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and remarks = 'FIX Deal Upload'
				)
				)GROUP BY source,srno ORDER by srno`,
			"filter":["ASONDATE"]
			},
		"refresh":{
		"source":`SELECT source, Sum(total_deals) total_deals, Sum(uploaded_deals)  uploaded_deals, Sum(unprocessed_deals) unprocessed_deals FROM 
			( 
			SELECT 'Reuters' source, unprocessed_deals total_deals, 0 uploaded_deals, unprocessed_deals, 1 srno FROM (
			SELECT Count(*) unprocessed_deals FROM INT_UPL_FILE_EXCEPTION WHERE STATUS = 'UNSUCCESS' 
			AND filename NOT IN (SELECT filename FROM INT_UPL_FILE_EXCEPTION WHERE STATUS = 'SUCCESS' and FILE_id = 'MF46' AND Trunc(upload_date_time) = Trunc(sysdate)) 
			and FILE_id = 'MF46' AND Trunc(upload_date_time) = '<%-ASONDATE%>')
			UNION all
			SELECT 'Reuters' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals, 1 srno
			FROM (
			SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
				   CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
				   remarks
			FROM upl_stage_fxtransact WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and remarks = 'Reuters Deal Upload'
			)
			UNION ALL
			SELECT 'FX Clear' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals, 2 srno
			FROM (
			SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
				   CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
				   remarks
			FROM upl_stage_fxtransact WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and remarks = 'FX Clear Deal Upload'
			)
			UNION ALL
			SELECT 'FIX' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals, 3 srno
			FROM (
			SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
				   CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
				   remarks
			FROM upl_stage_fxtransact WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and remarks = 'FIX Deal Upload'
			)
			)GROUP BY source,srno ORDER by srno`,
			"filter":["ASONDATE"]
				},
			"update":{
			"source":`SELECT source, Sum(total_deals) total_deals, Sum(uploaded_deals)  uploaded_deals, Sum(unprocessed_deals) unprocessed_deals FROM 
				( 
				SELECT 'Reuters' source, unprocessed_deals total_deals, 0 uploaded_deals, unprocessed_deals, 1 srno FROM (
				SELECT Count(*) unprocessed_deals FROM INT_UPL_FILE_EXCEPTION WHERE STATUS = 'UNSUCCESS' 
				AND filename NOT IN (SELECT filename FROM INT_UPL_FILE_EXCEPTION WHERE STATUS = 'SUCCESS' and FILE_id = 'MF46' AND Trunc(upload_date_time) = Trunc(sysdate)) 
				and FILE_id = 'MF46' AND Trunc(upload_date_time) = '<%-ASONDATE%>')
				UNION all
				SELECT 'Reuters' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals, 1 srno
				FROM (
				SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					   CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					   remarks
				FROM upl_stage_fxtransact WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and remarks = 'Reuters Deal Upload'
				)
				UNION ALL
				SELECT 'FX Clear' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals, 2 srno
				FROM (
				SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					   CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					   remarks
				FROM upl_stage_fxtransact WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and remarks = 'FX Clear Deal Upload'
				)
				UNION ALL
				SELECT 'FIX' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals, 3 srno
				FROM (
				SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					   CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					   remarks
				FROM upl_stage_fxtransact WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and remarks = 'FIX Deal Upload'
				)
				)GROUP BY source,srno ORDER by srno`,
			"filter":["ASONDATE"]
				},
			"delete":{
				"source":``,
				"filter":[]
			}
		},
		{
			"collectionName":"fx_nostro_stmt_upl",
			"notificationFilter":[],
			"create":{
			"source":`SELECT (SELECT Count(*) FROM bankaccounts WHERE accounttype = 'Bank Ac') nostro_account,
				(SELECT DISTINCT Count(*) FROM banktransaction WHERE trantype = 'Closing' AND Trunc(upload_date) = '<%-ASONDATE%>') stmt_uploaded FROM dual`,
			"filter":["ASONDATE"]
			},
		"refresh":{
			"source":`SELECT (SELECT Count(*) FROM bankaccounts WHERE accounttype = 'Bank Ac') nostro_account,
				(SELECT DISTINCT Count(*) FROM banktransaction WHERE trantype = 'Closing' AND Trunc(upload_date) = '<%-ASONDATE%>') stmt_uploaded FROM dual`,
			"filter":["ASONDATE"]
				},
			"update":{
			"source":`SELECT (SELECT Count(*) FROM bankaccounts WHERE accounttype = 'Bank Ac') nostro_account,
				(SELECT DISTINCT Count(*) FROM banktransaction WHERE trantype = 'Closing' AND Trunc(upload_date) = '<%-ASONDATE%>') stmt_uploaded FROM dual`,
			"filter":["ASONDATE"]
				},
			"delete":{
				"source":``,
				"filter":[]
			}
		},
		{
			"collectionName":"fx_market_data",
			"notificationFilter":[],
			"create":{
			"source":`SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'BOD Rates' descr, 'upload/process' url FROM exchangerate WHERE Trunc(exchangedate) = '<%-ASONDATE%>' AND ratetype = 'BOD'
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'EOD Rates' descr, 'upload/process' url FROM exchangerate WHERE Trunc(exchangedate) = '<%-ASONDATE%>' AND ratetype = 'EOD'
				UNION ALL
				SELECT 'Y' flag,'Live Market Feed Active' descr, '' url FROM dual
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'Valuation Saved' descr, 'positions/read' url FROM mtmvalues WHERE Trunc(mtmdate) = '<%-ASONDATE%>' AND Nvl(Upper(mtm_product),'NA') = 'CURRENCY'
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'Valuation Rates Uploaded' descr, 'upload/process' url FROM valuationrates WHERE Trunc(uploaddate) = '<%-ASONDATE%>'
				UNION all
				SELECT CASE WHEN cnt=total.disccurve_cnt THEN 'Y' ELSE 'N' END AS flag,'Currency wise Yield Curve Uploaded '||'('||cnt||'/'||total.disccurve_cnt||')' descr, 'upload/process' url
				FROM (SELECT Sum(cnt) cnt FROM
				(SELECT Nvl(curr_discountcurve,p.paramvalue) curvename
				,CASE WHEN Nvl(Sum(yield),0) > 0 THEN 1 ELSE 0 END AS cnt
				FROM benchmarkyieldcurve bnc ,currency_master cm, params p
				WHERE currency_code IN (SELECT ccy1 FROM fxpositionsgaps) AND p.paramname = 'fx_default_benchmark'
				AND bnc.benchmark(+) = Nvl(cm.curr_discountcurve,'INR MIFOR')
				AND Trunc(yielddate(+)) = '<%-ASONDATE%>'
				GROUP BY cm.curr_discountcurve,currency_code,p.paramvalue)),(SELECT Count(*) disccurve_cnt FROM fxpositionsgaps cm) total`,
			"filter":["ASONDATE"]
			},
		"refresh":{
			"source":`SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'BOD Rates' descr, 'upload/process' url FROM exchangerate WHERE Trunc(exchangedate) = '<%-ASONDATE%>' AND ratetype = 'BOD'
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'EOD Rates' descr, 'upload/process' url FROM exchangerate WHERE Trunc(exchangedate) = '<%-ASONDATE%>' AND ratetype = 'EOD'
				UNION ALL
				SELECT 'Y' flag,'Live Market Feed Active' descr, '' url FROM dual
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'Valuation Saved' descr, 'positions/read' url FROM mtmvalues WHERE Trunc(mtmdate) = '<%-ASONDATE%>' AND Nvl(Upper(mtm_product),'NA') = 'CURRENCY'
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'Valuation Rates Uploaded' descr, 'upload/process' url FROM valuationrates WHERE Trunc(uploaddate) = '<%-ASONDATE%>'
				UNION all
				SELECT CASE WHEN cnt=total.disccurve_cnt THEN 'Y' ELSE 'N' END AS flag,'Currency wise Yield Curve Uploaded '||'('||cnt||'/'||total.disccurve_cnt||')' descr, 'upload/process' url
				FROM (SELECT Sum(cnt) cnt FROM
				(SELECT Nvl(curr_discountcurve,p.paramvalue) curvename
				,CASE WHEN Nvl(Sum(yield),0) > 0 THEN 1 ELSE 0 END AS cnt
				FROM benchmarkyieldcurve bnc ,currency_master cm, params p
				WHERE currency_code IN (SELECT ccy1 FROM fxpositionsgaps) AND p.paramname = 'fx_default_benchmark'
				AND bnc.benchmark(+) = Nvl(cm.curr_discountcurve,'INR MIFOR')
				AND Trunc(yielddate(+)) = '<%-ASONDATE%>'
				GROUP BY cm.curr_discountcurve,currency_code,p.paramvalue)),(SELECT Count(*) disccurve_cnt FROM fxpositionsgaps cm) total`,
			"filter":["ASONDATE"]
			},
			"update":{
			"source":`SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'BOD Rates' descr, 'upload/process' url FROM exchangerate WHERE Trunc(exchangedate) = '<%-ASONDATE%>' AND ratetype = 'BOD'
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'EOD Rates' descr, 'upload/process' url FROM exchangerate WHERE Trunc(exchangedate) = '<%-ASONDATE%>' AND ratetype = 'EOD'
				UNION ALL
				SELECT 'Y' flag,'Live Market Feed Active' descr, '' url FROM dual
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'Valuation Saved' descr, 'positions/read' url FROM mtmvalues WHERE Trunc(mtmdate) = '<%-ASONDATE%>' AND Nvl(Upper(mtm_product),'NA') = 'CURRENCY'
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'Valuation Rates Uploaded' descr, 'upload/process' url FROM valuationrates WHERE Trunc(uploaddate) = '<%-ASONDATE%>'
				UNION all
				SELECT CASE WHEN cnt=total.disccurve_cnt THEN 'Y' ELSE 'N' END AS flag,'Currency wise Yield Curve Uploaded '||'('||cnt||'/'||total.disccurve_cnt||')' descr, 'upload/process' url
				FROM (SELECT Sum(cnt) cnt FROM
				(SELECT Nvl(curr_discountcurve,p.paramvalue) curvename
				,CASE WHEN Nvl(Sum(yield),0) > 0 THEN 1 ELSE 0 END AS cnt
				FROM benchmarkyieldcurve bnc ,currency_master cm, params p
				WHERE currency_code IN (SELECT ccy1 FROM fxpositionsgaps) AND p.paramname = 'fx_default_benchmark'
				AND bnc.benchmark(+) = Nvl(cm.curr_discountcurve,'INR MIFOR')
				AND Trunc(yielddate(+)) = '<%-ASONDATE%>'
				GROUP BY cm.curr_discountcurve,currency_code,p.paramvalue)),(SELECT Count(*) disccurve_cnt FROM fxpositionsgaps cm) total`,
			"filter":["ASONDATE"]
			},
			"delete":{
				"source":``,
				"filter":[]
			}
		},
		{
			"collectionName":"fx_msg_interface",
			"notificationFilter":[],
			"create":{
			"source":`SELECT Sum(cnt) cnt,agency1,Sum(pending) pending FROM
					( 
					SELECT Sum(CNT) cnt, AGENCY1, Sum(PENDING) pending FROM (
					SELECT Count(*) cnt,agency1,msgstatus
					,Decode(msgstatus,'F',Count(*),'E',Count(*),0) pending 
					FROM (
					SELECT msgtype, messageid, description, settlementid, currency, settlementamount, subsidiaryname, bookname, portfolio, assetclass, product, subproduct, contractcode, counterparty, counterpartybiccode, traderid, currpair, tradedate, settledate, quantity, rate, amount, nostrobank, agency1, bankname1, account1, bankbiccode1, agency2, bankname2, account2, bankbiccode2, theirbankname, theiraccount1, theirbankbiccode1, nostrocurrency, debit_credit, renewal, dealno, basecurr, derivecurr, branch_ref_no, countercode, country, bs, settled, settlementflag, srno, msgcount, abssettlement_amount, netsettlement_amount, leg_no, userid, userterminal, filepath, filename, fileterminal, DATETIME, msgref, deal_ref, groupdealno, CASE WHEN Nvl(MsgStatus, 'F') = 'F' AND Nvl(CounterPartyBicCode, 'NA') = 'NA' AND Upper(Nvl(Description, 'NA')) <> 'ACCOUNT TRANSFER' THEN 'E' WHEN Nvl(MsgStatus, 'F') = 'F' AND Nvl(msgtype, 'NA') = 'NA' AND Upper(Nvl(Description, 'NA')) <> 'ACCOUNT TRANSFER' THEN 'E' ELSE msgstatus END msgstatus, CASE WHEN Nvl(MsgStatus, 'F') = 'F' AND Nvl(CounterPartyBicCode, 'NA') = 'NA' AND Upper(Nvl(Description, 'NA')) <> 'ACCOUNT TRANSFER' THEN 'Cannot generate message for deals with blank CounterParty BicCode' WHEN Nvl(MsgStatus, 'F') = 'F' AND Nvl(msgtype, 'NA') = 'NA' AND Upper(Nvl(Description, 'NA')) <> 'ACCOUNT TRANSFER' THEN 'Cannot generate message for deals with agency other than SWIFT' ELSE '' END ErrorMsg
					FROM (
						SELECT MsgStatus, CASE WHEN upper(Description || Agency1 || Settled) = upper('SETTLEMENTSSWIFTT') THEN 'MT203' WHEN upper(Description || Agency2 || Settled) = upper('SETTLEMENTSSWIFTT') THEN 'MT203' WHEN upper(Description || MsgCount) = upper('Account Transfer1') THEN 'MT200' WHEN upper(Description || Agency1) = upper('ConfirmationSWIFT') THEN 'MT300' WHEN upper(Description || Agency2 || Settled) = upper('ConfirmationSWIFT') THEN 'MT300' WHEN upper(Description || Agency1 || MsgCount) = upper('SETTLEMENTSSWIFTT1') THEN 'MT202' WHEN upper(Description || Agency2 || MsgCount) = upper('SETTLEMENTSSWIFTT1') THEN 'MT202' END msgtype, messageid, description, settlementid, currency, settlementamount, Subsidiaryname, bookname, portfolio, assetclass, Product, SubProduct, contractcode, counterparty, counterpartybiccode, traderid, currpair, tradedate, settledate, quantity, rate, amount, Decode(Upper(BS), 'BUY', MG.BankName2, MG.BankName1) NostroBank, agency1, bankname1, account1, bankbiccode1, agency2, bankname2, account2, bankbiccode2, theirbankname, theiraccount1, theirbankbiccode1, nostrocurrency, debit_credit, renewal, dealno, basecurr, derivecurr, branch_ref_no, countercode, country, bs, settled, settlementflag, srno, msgcount, abssettlement_amount, netsettlement_amount, leg_no, userid, userterminal, filepath, filename, fileterminal, DATETIME, replace(replace(contractcode, 'OUT/20', ''), '/', '') MSGREF, SUBSTR(contractcode, INSTR(contractcode, '/', - 1, 1) + 1) deal_ref, groupdealno
						FROM (
							SELECT *
							FROM (
								SELECT ML.*, Decode(MGL.MessageId, '', 'F', 'T') MsgStatus, userid, userterminal, filepath, filename, fileterminal, DATETIME
								FROM (
									SELECT *
									FROM (
										SELECT SettSQL.*, Nvl(MsgSQL.MsgCount, 0) MsgCount, nvl(AbsSettlement_Amount, 0) AbsSettlement_Amount, nvl(NetSettlement_Amount, 0) NetSettlement_Amount
										FROM (
											SELECT Subsidiaryname, bookname, portfolio, assetclass, workflow, Product, SubProduct, '               ' MsgType, SettlementId || 'S' || 1 MessageId, Decode(Description, 'Account Transfer', 'Account Transfer', 'Settlements') Description, To_Char(SettlementId) SettlementId, 1 Leg_no, Currency CurrPair, Abs(nvl(SettlementAmt, 0)) SettlementAmount, Quantity, Rate, Amount, Currency, Currency NostroCurrency, To_Char(netsettlementdrcr) debit_credit, ContractCode, 'F' Renewal, Decode(Description, 'Account Transfer', SettlementId, DealNo) DealNo, Substr(DealCurrency, 1, 3) BaseCurr, Substr(DealCurrency, 4, 3) DeriveCurr, TradeDate, SettleDate, Counterparty, CounterCode, DealType, Branch_Ref_No, Traderid, Decode(Description, 'Account Transfer', Compname, BankName1) BankName1, Decode(Description, 'Account Transfer', Ac_no, Account1) Account1, Decode(Description, 'Account Transfer', CounterPartyBicCode, BankBICCode1) BankBICCode1, BankName2, Account2, BankBICCode2, Agency1, Agency2, CountryCode Country, Nvl(CounterpartyBICCode, 'NA') CounterpartyBICCode, Theirbankname, Their_Account1 TheirAccount1, TheirBankBicCode1, Transaction_Type BS, 'T' Settled, 'PostSettlement' SettlementFlag, 0 SrNo, groupdealno
											FROM (
												SELECT portfolio, bt.CMS_THEIRACCOUNTTYPE their_accounttype, bt.CMS_OURACCOUNTTYPE our_accountype, Decode(Nvl(oscontract.subsidiaryname, 'T'), 'T', s.subsidiaryname, oscontract.subsidiaryname) subsidiaryname, Decode(Nvl(oscontract.bookname, 'T'), 'T', bk.bookname, oscontract.bookname) bookname, regioncode, regionname, oscontract.country, oscontract.city, Decode(Nvl(oscontract.bookid, '0'), '0', bk.bookid, oscontract.bookid) bookid, Decode(Nvl(oscontract.subsidiaryname, 'T'), 'T', s.SubsidiaryCode, SubCode) subcode, pcode, loccode, countrycode, nvl(cm1.compname, br.countercode) Counterparty, cm2.compname theirbank_name, oscontract.Currency DealCurrency, CounterPartyBicCode, oscontract.workflow, oscontract.assetclass, transactiontype, workflowcode, authorisation, position, mtmmethod, costingmethod, Decode(Nvl(oscontract.contractcode, '0'), '0', br.contractcode, oscontract.contractcode) contractcode, oscontract.portcode, deletionstatus, transactiontypecode, tradedate, transaction_type, Product, SubProduct, underlying, oscontract.valuedate, matdate, Quantity, Rate, Amount, facevalue, consideration, reference_no, dealno, groupdealno, security_desc, product_type, oscontract.countercode, agency1, BankName1, bankcode1, account1, BankBicCode1, agency2, BankName2, bankcode2, account2, BankBicCode2, their_bankcode1, theirbankname, their_account1, TheirBankBicCode1, DealType, oscontract.optional01, oscontract.optional02, oscontract.optional03, oscontract.optional04, oscontract.optional05, oscontract.remarks, nostrodate, nostro_ref_no, taxamt, Decode(bt.settlementtype, 'A', oscontract.globalcurr, bt.globalcurr) globalcurr, Decode(bt.settlementtype, 'A', oscontract.globalcurrrate, bt.globalcurrrate) globalcurrrate, Decode(bt.settlementtype, 'A', oscontract.globalcurramt, bt.globalcurramt) globalcurramt, Decode(bt.settlementtype, 'A', oscontract.localcurr, bt.localcurr) localcurr, Decode(bt.settlementtype, 'A', oscontract.localcurrrate, bt.localcurrrate) localcurrrate, Decode(bt.settlementtype, 'A', oscontract.localcurramt, bt.localcurramt) localcurramt, Decode(bt.settlementtype, 'A', oscontract.groupcurr, bt.groupcurr) groupcurr, Decode(bt.settlementtype, 'A', oscontract.groupcurramt, bt.groupcurramt) groupcurramt, Decode(bt.settlementtype, 'A', oscontract.groupcurrrate, bt.groupcurrrate) groupcurrrate, Decode(Nvl(oscontract.authorisationstatus, 'NA'), 'A', 'Authorised', 'UnAuthorised') authorisationstatus, oscontract.authstatusby, oscontract.authstatuson, oscontract.authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, style, exchangecode, bt.settlementtype, oscontract.branchcode, branch_ref_no, folionumber, legtype, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfrequency, rangebarriers, begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, positiondate, event, posdealno, pos_portfolio, traderid, curr1, curr2, branchname, bt.theirbankcode, bt.their_ac_no, rollover_contractcode, optiontype, br.settlementid, Decode(bt.description, 'Gross Settlement', netsettlementamt, br.settleamt) settleamt, br.settledrcr, br.settlecurr, br.eventid, bt.postingdate, bt.valuedate Settledate, bt.bankcode, bt.ac_no, bt.currency, bt.drcr, bt.settlementamt, bt.adjustment, bt.netsettlementamt, bt.insttype, bt.instno, bt.dealer settl_dealer, bt.linkno, bt.settlementtype settletype, bt.tradetype, bt.description, bt.narration, bt.remarks Cms_Remarks, bt.reconstatus, bt.reconid, bt.recondate, bt.reconby, bt.reconremarks, Nvl(br.cms_AuthStatus, 'N') cms_AuthStatus, br.cms_authby, br.cms_authon, cms_nostro_date, cms_nostro_ref_no, bt.cms_optional01, bt.cms_optional02, bt.cms_optional03, bt.cms_optional04, bt.cms_optional05, br.cms_optional02 ref_optional, bt.subsidiarycode, Decode(Sign(settleamt), - 1, 'CR', 'DR') netsettlementdrcr, br.globalcurramt br_globalcurramt, br.localcurramt br_localcurramt, br.groupcurramt br_groupcurramt, br.globalcurrrate br_globalcurrrate, br.localcurrrate br_localcurrrate, br.groupcurrrate br_groupcurrrate, cm.CompName, category, 0 spotrate, 0 swappoints, '' dealidentity, nvl(isdownloaded, 'F') isdownloaded, source, filename, pa.payment_mode, payment_method, nvl(STATUS, 'Pending') STATUS, cm2.ifsc_code, br.utr_number, enddate, startdate, isino_code, tradedate orig_tradedate, bt.purpose, s.address1, s.address2, br.rtgs_upload, redemption_premium
												FROM (
													SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, positiondate, event, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode, brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date
													FROM (
														SELECT s.*, workflow, Decode(Lower(t.assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', t.assetclass), t.assetclass) assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2, their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, positiondate, event, ospos.dealno posdealno, OSPos.portfolio Pos_portfolio, dealer traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue, Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date
														FROM (
															SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date
															FROM fxmaster
															WHERE nvl(deletionstatus, 'ND') <> 'D'
															
															UNION ALL
															
															SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
																			SELECT upper(PARAMVALUE)
																			FROM params
																			WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
																			), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
																				SELECT DISTINCT optional02
																				FROM contractmaster
																				WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
																				) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security', s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date
															FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, (
																	SELECT compcode, compname
																	FROM companymaster
																	) cm, (
																	SELECT compcode, compname, is_taxable
																	FROM companymaster
																	) cm1, (
																	SELECT c.contractcode ccode, c1.loan_description loan_desc
																	FROM contractmaster c, contractmaster c1
																	WHERE c.refcontractno = c1.contractcode
																	) contract
															WHERE c.contractcode = contract.ccode(+) AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+) AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324)
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, cm.compname product, mf.securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, (Qty_Leg1 * facevalue_PU) facevalue, Price_leg1 * qty_leg1 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, their_bankcode their_bankcode2, their_account their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, To_Char(ETF_Traded) || 'MF' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, rm.rating rating, rm.rating rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date(reference) agm_date
															FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig
															WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1)) AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+)
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, compname product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date(reference) agm_date
															FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm
															WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND assetclass = 'Equity' AND nvl(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+)
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mt.Assetclass, compname product, de.symbol subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mt.currency curr1, mt.currency curr2, mt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date
															FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
																	SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
																	FROM equitymaster
																	
																	UNION ALL
																	
																	SELECT INDEX_NAME, INDEX_NAME, (
																			SELECT compcode
																			FROM companymaster
																			WHERE compname = 'NONE' AND rownum = 1
																			) ISSUER
																	FROM index_master
																	) eq, workflow ass, dealsymbol DE
															WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D'
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date
															FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
															WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+) AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%')
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, c.Assetclass, compname product, de.symbol subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, c.contractcode securitysymbol, 'SECONDARY' product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date
															FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
															WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND'
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transactiontype, contractcode, dealno, groupdealno, tradedate, valuedate, valuedate matdate, traderid, countercode, quantity quantity, 1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, quantity amount, 0 WITHHOLDINGTAX, Product ProductDesc, 0 facevalue, 0 consideration, currency, paymentmode agency1, bankcode, account, '' agency2, '' bankcode2, '' account2, '' their_agency1, '' their_bankcode1, '' their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_refno nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branch branchcode, branch_refno branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, '' exchangecode, deletionstatus, transactiontypecode, '' securitysymbol, '' product_type, '' security_desc, currency underlying, '' brokercode, valuedate brokeragedate, '' brokerage_curr, 0 brokerage, '' brokeragebank, '' brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date
															FROM currentaccount
															WHERE nvl(deletionstatus, 'ND') <> 'D'
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date
															FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
															WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date
															FROM mutualfund_transact mt, alternateinvestment alt, (
																	SELECT marketsymbol, symbol
																	FROM dealsymbol
																	WHERE transactiontypecode = '1099999999'
																	) d
															WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D'
															) osContract, (
																SELECT DISTINCT positiondate, event, dealno, portfolio, dealer, trunc(operationdate) operationdate
																FROM positions
																WHERE Nvl(deletionstatus, 'ND') = 'ND'
																) OSPos, (
																SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
																FROM assetclass a, workflow w, transactiontype t
																WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
																) t, (
																SELECT subsidiaryname, bookname, portname portfolio, isconstituent, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
																FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
																WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
																) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
														WHERE Decode(osContract.transactiontypecode, 26, securitysymbol, 394, securitysymbol, osContract.contractcode) = OSPos.dealno AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
														)
													) oscontract, cms_banktransaction bt, cms_banktransaction_ref br, subsidiarymaster s, BookMaster bk, Companymaster cm, Companymaster cm1, Companymaster cm2, paymentmode pa
												WHERE osContract.contractcode(+) = br.securitysymbol AND br.settlementid = bt.settlementid AND bt.subsidiarycode = s.subsidiarycode AND bk.subsidiarycode || bk.bookid = s.subsidiarycode || bt.bookid AND cm.CompCode(+) = bt.BankCode AND cm1.compcode(+) = br.countercode AND pa.pay_mode_code(+) = bt.paymentmode AND cm2.compcode(+) = br.theirbankcode AND Trunc(bt.valuedate) BETWEEN '<%-ASONDATE%>' AND '<%-ASONDATE%>'
												)
											WHERE 1 = 1 AND Currency <> 'INR' AND To_Char(netsettlementdrcr) = 'CR'
											) SettSQL, (
												SELECT cb.SettlementId, Abs(netsettlementamt) AbsSettlement_Amount, netsettlementamt NetSettlement_Amount, Count(*) MsgCount
												FROM Cms_BankTransaction cb, Cms_BankTransaction_ref cbr
												WHERE cb.SettlementId = cbr.SettlementId
												GROUP BY cb.SettlementId, netsettlementamt
												) MsgSQL
										WHERE SettSQL.SettlementId = MsgSQL.SettlementId(+)
										
										UNION
										
										SELECT Subsidiaryname, bookname, portfolio, assetclass, workflow, Product, SubProduct, '               ' MsgType, DealNo || 'C' || 1 MessageId, 'Confirmation' Description, To_Char(DealNo || 'C' || 1) SettlementId, 1 Leg_No, Curr CurrPair, 0 SettlementAmount, Quantity, Rate, Amount, Curr, Curr NostroCurrency, Decode(Sign(Quantity), - 1, 'CR', 'DR') Debit_Credit, ContractCode, 'F' Renewal, DealNo, Substr(Curr, 1, 3) BaseCurr, Substr(Curr, 4, 3) DeriveCurr, TradeDate, ValueDate, Counterparty, CounterCode, DealType, Branch_Ref_No, TraderId, BankName1, Account1, BankBICCode1, BankName2, Account2, BankBICCode2, agency1name Agency1, agency2name Agency2, Country, Nvl(CounterpartyBICCode, 'NA') CounterpartyBICCode, Theirbankname, Their_Account1 TheirAccount1, TheirBankBicCode1, Transaction_Type BS, '' Settled, '' SettlementFlag, 0 SrNo, groupdealno, 1 MsgCount, 0 AbsSettlement_Amount, 0 NetSettlement_Amount
										FROM (
											SELECT SUBSIDIARYNAME, BOOKNAME, PORTFOLIO, PRODUCT, SUBPRODUCT, currency CURR, Decode(TRANSACTIONTYPE, 'Split In', 'Split', TRANSACTIONTYPE) TRANSACTIONTYPE, Decode(TRANSACTION_TYPE, 'Split In', 'Split', TRANSACTION_TYPE) TRANSACTION_TYPE, CONTRACTCODE, Decode(product, 'Swaps', SECURITYSYMBOL, CONTRACTCODE) CONTRACT_ID, TRADEDATE, To_Char(TRADEDATE, 'dd/MM/yyyy hh24:mi:ss') AS TRANSACTIONDATETIME, VALUEDATE, MATDATE, TRADERID, COUNTERPARTY, CATEGORY, '' TRANS_CATEGORY, SECURITY_DESC, PRINCIPAL, 0 WITHHOLDINGTAX, AMOUNT_LEG1, QTY_LEG1, PRICE_LEG1, 0 GROSSAMT, YIELD_LEG1, 0 ACCR_INTR_PU, ACCRUEDINTEREST, CONSIDERATION, POST_CONSIDERATION, POST_ACC_INTEREST_LEG1, POST_ACCRUEDINTEREST, SL_YIELD, SL_PRICE, SL_ACC_INT, contract_wac wac, contract_revalwac revalwac, CASE WHEN TRANSACTIONTYPECODE IN ('112', '127', '108', '204', '161', '104', '391') THEN (nvl(price_leg1, 0) - nvl(contract_wac, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('101') THEN (nvl(contract_wac, 0) - nvl(price_leg1, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328') THEN SLB_PROFIT_LOSS ELSE 0 END profit_loss, REPO_RATE, REFERENCE_NO REFCONTRACTNO, YIELDTO, BANKCURR, AGENCY1 AGENCY1NAME, BANKNAME1, ACCOUNT1, AGENCY2 AGENCY2NAME, BANKNAME2, ACCOUNT2, THEIR_AGENCY1 THEIR_AGENCY1NAME, '' THEIR_BANKNAME1, THEIR_ACCOUNT1, '' THEIR_AGENCY2NAME, THEIR_BANKNAME2, THEIR_ACCOUNT2, LOCALCURR, LOCALCURRRATE, LOCALCURRAMT, GLOBALCURR, GLOBALCURRRATE, GLOBALCURRAMT, GROUPCURR, GROUPCURRAMT, GROUPCURRRATE, 0 WITHHOLDINGTAX_PER, 0 EFFECTIVERATE_PER, 0 EFFECTIVERATE_AMT, 0 UPFRONTFEES_PER, 0 UPFRONTFEES_AMT, 0 OTHERS_PER, 0 OTHERS_AMT, 0 COVERRATE, 0 PREMIA_PER, '' PREMIA, 0 STAMPDUTY, SECURED, '' NEGOTIABLE, BROKERAGEDATE, 0 BROKERAGETYPEVALUE, '' BROKERNAME, BROKERCODE, BROKERAGE, BROKERAGE_CURR, '' BROKERAGETYPE, REMARKS, 0 SERVICETAXTYPE, 0 SERVICETAXRATE, 0 SERVICETAXAMT, 0 ACCOUNTCHARGE, 0 NETRATEFLAG, nvl(authorisationstatus, 'NA') AUTHORISATIONSTATUSCODE, AUTHORISATIONSTATUS, AUTHSTATUSBY, AUTHSTATUSON, AUTHSTATUSREMARKS, CONFIRMATIONSTATUS, CONFSTATUSBY, CONFSTATUSON, CONFSTATUSREMARKS, TRANSACTIONTYPE TRANSTYPE, '' CONTRACTTEMPLATE, DEALNO, GROUPDEALNO, 0 PAY_WASHRATE, '' HEDGEON, NOTIONALSTEPRULE, 0 CAPS, 0 FLOORS, RANGEBARRIERS, BRANCH, DEALTYPE, OPTIONAL01, OPTIONAL02, OPTIONAL03, OPTIONAL04, OPTIONAL05, '' SPOTRATESOURCES_ID, PRODUCT_TYPE, 0 EXCHANGE_RATE, 0 WASHRATE, '' SETTLEMENT, 0 STRATEGYID, SUBPRODUCT PRODUCT_CODE, CONTRACTSTRUCTURE, WORKFLOW, '' INITIAL_EXCHANGE, '' CASHFLOWGENERATION, '' EARLYTERMINATION, BOOKID, deal_location_code, DEPOSITORY, '' DELIVERY_MODE, DELIVERY_MODE_CODE, EXCHANGECODE, PORTCODE, TRANSACTIONTYPECODE TRANSACTION_TYPE_CODE, PAYMENTMODE1, BANKCODE1, PAYMENTMODE2, BANKCODE2, '' CP_PAYMENTMODE1, '' CP_BANKCODE1, SUBSIDIARYCODE, COUNTERCODE, '' COUNTERPARTY_DEALER, ASSETCLASS, currency CONSCURRENCY, NOSTRO_REF_NO, NOSTRODATE, REFERENCE_NO, RESTRUCTURE_CONTRACTCODE, ROLLOVER_CONTRACTCODE, BRANCH_REF_NO, CURRNAME, '' BORROW_TERM, BENCHMARKID, 0 PARVALUE, 0 OFFERINGPRICE, '' INTERESTMODE, INTEREST, MARKUP, DAYCOUNT, INTERESTDIRECTION, 0 PAYMENTFREQ, 0 RESETFREQ, '' RESETDATE, DISCOUNTCURVE, 0 COUPYEAR, DEALSOURCE, AMOUNT, QUANTITY, RATE, PRODUCTDESC, BROKER_NAME, BROKERAGEBANKCODE, BROKERAGEBANKNAME, BROKERAGE_AC, '' LOAN_DESCRIPTION, FACEVALUE, ISINO_CODE, SECURITYSYMBOL, 0 INTEREST_TAX_CAT_CODE, PRODUCT1, PCHARGERATE, PCHARGEAMT, 0 XIRRVALUE, '' CUSTOM_CONTRACTCODE, 0 TERMVALUE, '' ACCOUNTINGTYPE, '' REPAY_COMMENCEMENT_DATE, 0 LRN_NUMBER, 0 CUSTOM_PENALTYRATE, 0 LGBG_NUMBER, '' SUPPLIER, '' VESSEL_NAME, 0 CHARGES_PAID_TILL, '' LATEST_DATE_OF_SHIPMENT, '' PAYMENT_TERMS, 0 ORIGINAL_AMOUNT, 0 COMMISSION_PERCENTAGE, REMARKS REMARK, DEAL_REMARKS, EMAIL_STATUS, AUID, MATDATE MATURITY, INDEX_RATIO, Nvl(ORDER_STATUS, 'Order Pending') ORDER_STATUS, To_Char(order_conf_date, 'dd/MM/yyyy hh24:mi:ss') AS order_conf_date, order_conf_by, Nvl(RECON_STATUS, 'Unreconciled') RECON_STATUS, decode(upper(RECON_STATUS), 'RECONCILED', '', RECON_REMARKS) RECON_REMARKS, FD_NUMBER, FD_INTEREST_RATE, FD_TENOR, FD_AMOUNT, FD_AMOUNT_PER, (
													SELECT descr
													FROM default_static_table
													WHERE code = '365' AND module_name = 'asba_fd_daycount'
													) FD_DAY_COUNT, FD_INTEREST, decode(Nvl(final_price, 1), 0, 'F', 'T') FINAL_PRICE, issuer, exchange, netrate, netamount, bsr_code, lotsize, noofcontracts, underlying1 derivative_underlying, sl_consideration, active_status, nominal_price, deal_purpose, Nvl(reporting_asset_class, ASSETCLASS) REPORTING_ASSET_CLASS, bsrnumber, dept_name, Nvl(stt, 0) stt, brokerage_amount, dealerbook, iobj, sectorname, payment_mode, 'TRUE' display_auth_info, decode(transactiontypecode, 5001, 'FALSE', Upper('TRUE')) printdealticket, primarymarkettype, acc_interest, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, Theirbankname, country, settleflag, reversalstatus, type, listed
											FROM (
												SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, Decode(Lower(assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', assetclass), assetclass) assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode, brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, bsr_code, netrate, netamount, lotsize, noofcontracts, underlying1, sl_consideration, active_status, nominal_price, deal_purpose, reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, sectorname, payment_mode, primarymarkettype, settleflag, reversalstatus, type, listed
												FROM (
													SELECT s.*, workflow, t.assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2, their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, dealno posdealno, portfolio Pos_portfolio, traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue, Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, osContract.depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, osContract.branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, cm8.bsr_code bsr_code, netrate, netamount, oscontract.lotsize, oscontract.noofcontracts, underlying1, sl_consideration, oscontract.active_status active_status, nominal_price, deal_purpose, ds.reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, oscontract.sectorname, oscontract.payment_mode, primarymarkettype, oscontract.settleflag settleflag, Nvl(reversalstatus, 'F') reversalstatus, TYPE, oscontract.listed
													FROM (
														SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amt1 amount_leg1, amt1 qty_leg1, strikerate price_leg1, 0 yield_leg1, amt2 principal, '' deal_location_code, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag, reversalstatus, product_code TYPE, 1 listed
														FROM fxmaster
														WHERE nvl(deletionstatus, 'ND') <> 'D'
														
														UNION ALL
														
														SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, c.portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, CASE WHEN transaction_type_code IN (90, 91, 329, 330) THEN sl_date ELSE enddate END matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
																		SELECT upper(PARAMVALUE)
																		FROM params
																		WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
																		), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
																			SELECT DISTINCT optional02
																			FROM contractmaster
																			WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
																			) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security', s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, nvl(sl_consideration, 0), 1 active_status, nominal_price, descr deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, TYPE, Decode(s.listed, 'True', 1, 'False', 0, 0) listed
														FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, dealerwiseprofitability dl, (
																SELECT compcode, compname
																FROM companymaster
																) cm, (
																SELECT compcode, compname, is_taxable
																FROM companymaster
																) cm1, (
																SELECT c.contractcode ccode, c1.loan_description loan_desc
																FROM contractmaster c, contractmaster c1
																WHERE c.refcontractno = c1.contractcode
																) contract, (
																SELECT code, descr, static_value
																FROM default_static_table
																WHERE MODULE_NAME = 'REVAL_PURPOSE'
																ORDER BY To_Number(static_value)
																) d
														WHERE c.contractcode = contract.ccode(+) AND c.purpose_code = d.code(+) AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+) AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324) AND dl.portcode(+) = c.portcode AND To_Char(dl.code(+)) = To_Char(c.dealerbook) AND dl.asset_class_code(+) = 2
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Mutual Fund' product, securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(type_name), 'CLOSE ENDED', matdate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, scheme_code securitysymbol, market product_type, mf.scheme_name security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_number isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, descr deal_purpose, '' bsrnumber, dept_name, 0 stt, 0 BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, mf.iobj, sc.sectorname, payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, 'MF' TYPE, listed
														FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig, sectormaster sc, dealerwiseprofitability dl, paymentmode pm, (
																SELECT code, descr, static_value
																FROM default_static_table
																WHERE MODULE_NAME = 'REVAL_PURPOSE'
																ORDER BY To_Number(static_value)
																) d
														WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1)) AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+) AND ig.sector = sc.SECTORCODE(+) AND mt.purpose_code = d.code(+) AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 5 AND pm.pay_mode_code = mt.payment_mode_code
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Equity' product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, mt.contractcode contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.scrip_code securitysymbol, market product_type, mf.scrip_name security_desc, subproduct underlying, mt.brokercode brokercode, brokeragedate, brokerage_curr, dealcharges.BROKERAGE_AMOUNT brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_no isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, Nvl(dealcharges.net_rate, Nvl(mt.netrate, 0)) netrate, Nvl(dealcharges.net_amount, 0) netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, mf.active_status, 0 nominal_price, '' deal_purpose, bm.bsrnumber, dept_name, dealcharges.stt stt, dealcharges.BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, 'EQ' TYPE, listed
														FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm, companymaster ig, brokerage_master bm, dealerwiseprofitability dl, (
																SELECT CONTRACTCODE, STT, BROKERAGE_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN (((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) + STT) WHEN TRANSACTION_TYPE_CODE = 305 THEN (((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) - STT) WHEN TRANSACTION_TYPE_CODE = 192 THEN ((PRICE_LEG1 * QTY_LEG1) + (BROKERAGE_AMOUNT + STT)) WHEN TRANSACTION_TYPE_CODE = 204 THEN ((PRICE_LEG1 * QTY_LEG1) - (BROKERAGE_AMOUNT + STT)) END AS NET_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN ((((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 WHEN TRANSACTION_TYPE_CODE = 305 THEN ((((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 END AS NET_RATE, (BROKERAGE_AMOUNT / QTY_LEG1) B_UNIT
																FROM (
																	SELECT CONTRACTCODE, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_STT_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', CHARGE_AMOUNT, 'STT_EQ_PUR', charge_amount, 'STT_EQ_SALE', charge_amount, 0)) AS STT, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_SALE', CHARGE_AMOUNT, 'BROKER_CHARGE_EQ_PUR', charge_amount, 'BROKER_CHARGE_EQ_SALE', charge_amount, 0)) AS BROKERAGE_AMOUNT, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
																	FROM (
																		SELECT dc.CONTRACTCODE, dc.EVENT_CHARGE_CODE, dc.CHARGE_AMOUNT, MT.QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE, p.paramname, p.paramvalue
																		FROM DEAL_CHARGES DC, MUTUALFUND_TRANSACT MT, params p
																		WHERE DC.CONTRACTCODE = MT.CONTRACTCODE AND p.paramvalue(+) = dc.event_charge_code AND p.paramname IN ('BROKER_CHARGE_EVENT_ORDER_STT_PUR', 'BROKER_CHARGE_EVENT_ORDER_PUR', 'BROKER_CHARGE_EVENT_ORDER_SALE', 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', 'STT_EQ_PUR', 'STT_EQ_SALE', 'BROKER_CHARGE_EQ_PUR', 'BROKER_CHARGE_EQ_SALE') AND EVENT_CHARGE_CODE IN (p.paramvalue)
																		)
																	GROUP BY CONTRACTCODE, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
																	)
																) dealcharges
														WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND Lower(assetclass) = 'equity' AND nvl(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND mt.transaction_type_code NOT IN (207) AND dealcharges.contractcode(+) = mt.contractcode AND mf.issuer = ig.compcode(+) AND mt.brokercode = bm.brokercode(+) AND mt.exchangecode = bm.exchange_code(+) AND bm.asset_class_code(+) = 7 AND bm.BR_WORKFLOWCODE(+) = 27 AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 7
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.profit_loss SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, mf.product TYPE, 1 listed
														FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
																SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
																FROM equitymaster
																
																UNION ALL
																
																SELECT INDEX_NAME, INDEX_NAME, (
																		SELECT compcode
																		FROM companymaster
																		WHERE compname = 'NONE' AND rownum = 1
																		) ISSUER
																FROM index_master
																) eq, workflow ass, dealsymbol DE
														WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D'
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, 'EQ' type, 0 listed
														FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
														WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+) AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%')
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, ird.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, ird.contractcode securitysymbol, 'SECONDARY' product_type, ird.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, c.depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, c.branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, c.lotsize, c.noofcontracts, c.underlying underlying1, 0 sl_consideration, to_number(ird.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, ird.product type, 1 listed
														FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
														WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND'
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transactiontype, contractcode, dealno, groupdealno, tradedate, valuedate, valuedate matdate, traderid, countercode, quantity quantity, 1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, quantity amount, 0 WITHHOLDINGTAX, Product ProductDesc, 0 facevalue, 0 consideration, currency, paymentmode agency1, bankcode, account, '' agency2, '' bankcode2, '' account2, '' their_agency1, '' their_bankcode1, '' their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_refno nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branch branchcode, branch_refno branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, '' exchangecode, deletionstatus, transactiontypecode, '' securitysymbol, '' product_type, '' security_desc, currency underlying, '' brokercode, valuedate brokeragedate, '' brokerage_curr, 0 brokerage, '' brokeragebank, '' brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, '' deal_location, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag, 'F' reversalstatus, 'NA' type, 0 listed
														FROM currentaccount
														WHERE nvl(deletionstatus, 'ND') <> 'D'
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, mf.product type, 1 listed
														FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
														WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(OPENENDED), 'YES', maturitydate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, alt.isinnumber isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, decode(nvl(qty_leg1, 0), 0, ai_quantity, qty_leg1) qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, securitytype type, listed
														FROM mutualfund_transact mt, alternateinvestment alt, (
																SELECT marketsymbol, symbol
																FROM dealsymbol
																WHERE transactiontypecode = '1099999999'
																) d
														WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D'
														) oscontract, (
															SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
															FROM assetclass a, workflow w, transactiontype t
															WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
															) t, (
															SELECT subsidiaryname, bookname, portname portfolio, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
															FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
															WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
															) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
													WHERE 1 = 1 AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
													)
												WHERE 1 = 1
												)
											ORDER BY dealno DESC
											) ConfDetails
										WHERE Trunc(TRADEDATE) BETWEEN '<%-ASONDATE%>' AND '<%-ASONDATE%>'
										) MessageGen
									WHERE 1 = 1
									) ML, (
										SELECT MessageId, userid, userterminal, filepath, filename, fileterminal, DATETIME
										FROM MessageStatus
										WHERE operation = 'INSERT'
										) MGL
								WHERE ML.MessageId = MGL.MessageId(+)
								)
							WHERE 1 = 1 AND Upper(Nvl(DealType, 'INTERBANK')) IN ('INTERBANK') AND trunc(tradedate) BETWEEN to_date('<%-ASONDATE%>', 'dd/MM/yyyy') AND to_date('<%-ASONDATE%>', 'dd/MM/yyyy')
							) MG
						WHERE Nvl(assetclass, 'Currency') IN ('Currency') AND Nvl(product, 'Outright') IN ('Outright')
						) main
					WHERE 1 = 1
					)
					GROUP BY agency1,msgstatus)
					GROUP BY agency1
					UNION 
					SELECT 0 cnt, 'CCIL' AGENCY1, 0 pending FROM dual
					UNION 
					SELECT 0 cnt, 'CLS' AGENCY1, 0 pending FROM dual
					UNION 
					SELECT 0 cnt, 'SWIFT' AGENCY1, 0 pending FROM dual
					)
					GROUP BY agency1`,
			"filter":["ASONDATE"]
			},
		"refresh":{
			"source":`SELECT Sum(cnt) cnt,agency1,Sum(pending) pending FROM
					( 
					SELECT Sum(CNT) cnt, AGENCY1, Sum(PENDING) pending FROM (
					SELECT Count(*) cnt,agency1,msgstatus
					,Decode(msgstatus,'F',Count(*),'E',Count(*),0) pending 
					FROM (
					SELECT msgtype, messageid, description, settlementid, currency, settlementamount, subsidiaryname, bookname, portfolio, assetclass, product, subproduct, contractcode, counterparty, counterpartybiccode, traderid, currpair, tradedate, settledate, quantity, rate, amount, nostrobank, agency1, bankname1, account1, bankbiccode1, agency2, bankname2, account2, bankbiccode2, theirbankname, theiraccount1, theirbankbiccode1, nostrocurrency, debit_credit, renewal, dealno, basecurr, derivecurr, branch_ref_no, countercode, country, bs, settled, settlementflag, srno, msgcount, abssettlement_amount, netsettlement_amount, leg_no, userid, userterminal, filepath, filename, fileterminal, DATETIME, msgref, deal_ref, groupdealno, CASE WHEN Nvl(MsgStatus, 'F') = 'F' AND Nvl(CounterPartyBicCode, 'NA') = 'NA' AND Upper(Nvl(Description, 'NA')) <> 'ACCOUNT TRANSFER' THEN 'E' WHEN Nvl(MsgStatus, 'F') = 'F' AND Nvl(msgtype, 'NA') = 'NA' AND Upper(Nvl(Description, 'NA')) <> 'ACCOUNT TRANSFER' THEN 'E' ELSE msgstatus END msgstatus, CASE WHEN Nvl(MsgStatus, 'F') = 'F' AND Nvl(CounterPartyBicCode, 'NA') = 'NA' AND Upper(Nvl(Description, 'NA')) <> 'ACCOUNT TRANSFER' THEN 'Cannot generate message for deals with blank CounterParty BicCode' WHEN Nvl(MsgStatus, 'F') = 'F' AND Nvl(msgtype, 'NA') = 'NA' AND Upper(Nvl(Description, 'NA')) <> 'ACCOUNT TRANSFER' THEN 'Cannot generate message for deals with agency other than SWIFT' ELSE '' END ErrorMsg
					FROM (
						SELECT MsgStatus, CASE WHEN upper(Description || Agency1 || Settled) = upper('SETTLEMENTSSWIFTT') THEN 'MT203' WHEN upper(Description || Agency2 || Settled) = upper('SETTLEMENTSSWIFTT') THEN 'MT203' WHEN upper(Description || MsgCount) = upper('Account Transfer1') THEN 'MT200' WHEN upper(Description || Agency1) = upper('ConfirmationSWIFT') THEN 'MT300' WHEN upper(Description || Agency2 || Settled) = upper('ConfirmationSWIFT') THEN 'MT300' WHEN upper(Description || Agency1 || MsgCount) = upper('SETTLEMENTSSWIFTT1') THEN 'MT202' WHEN upper(Description || Agency2 || MsgCount) = upper('SETTLEMENTSSWIFTT1') THEN 'MT202' END msgtype, messageid, description, settlementid, currency, settlementamount, Subsidiaryname, bookname, portfolio, assetclass, Product, SubProduct, contractcode, counterparty, counterpartybiccode, traderid, currpair, tradedate, settledate, quantity, rate, amount, Decode(Upper(BS), 'BUY', MG.BankName2, MG.BankName1) NostroBank, agency1, bankname1, account1, bankbiccode1, agency2, bankname2, account2, bankbiccode2, theirbankname, theiraccount1, theirbankbiccode1, nostrocurrency, debit_credit, renewal, dealno, basecurr, derivecurr, branch_ref_no, countercode, country, bs, settled, settlementflag, srno, msgcount, abssettlement_amount, netsettlement_amount, leg_no, userid, userterminal, filepath, filename, fileterminal, DATETIME, replace(replace(contractcode, 'OUT/20', ''), '/', '') MSGREF, SUBSTR(contractcode, INSTR(contractcode, '/', - 1, 1) + 1) deal_ref, groupdealno
						FROM (
							SELECT *
							FROM (
								SELECT ML.*, Decode(MGL.MessageId, '', 'F', 'T') MsgStatus, userid, userterminal, filepath, filename, fileterminal, DATETIME
								FROM (
									SELECT *
									FROM (
										SELECT SettSQL.*, Nvl(MsgSQL.MsgCount, 0) MsgCount, nvl(AbsSettlement_Amount, 0) AbsSettlement_Amount, nvl(NetSettlement_Amount, 0) NetSettlement_Amount
										FROM (
											SELECT Subsidiaryname, bookname, portfolio, assetclass, workflow, Product, SubProduct, '               ' MsgType, SettlementId || 'S' || 1 MessageId, Decode(Description, 'Account Transfer', 'Account Transfer', 'Settlements') Description, To_Char(SettlementId) SettlementId, 1 Leg_no, Currency CurrPair, Abs(nvl(SettlementAmt, 0)) SettlementAmount, Quantity, Rate, Amount, Currency, Currency NostroCurrency, To_Char(netsettlementdrcr) debit_credit, ContractCode, 'F' Renewal, Decode(Description, 'Account Transfer', SettlementId, DealNo) DealNo, Substr(DealCurrency, 1, 3) BaseCurr, Substr(DealCurrency, 4, 3) DeriveCurr, TradeDate, SettleDate, Counterparty, CounterCode, DealType, Branch_Ref_No, Traderid, Decode(Description, 'Account Transfer', Compname, BankName1) BankName1, Decode(Description, 'Account Transfer', Ac_no, Account1) Account1, Decode(Description, 'Account Transfer', CounterPartyBicCode, BankBICCode1) BankBICCode1, BankName2, Account2, BankBICCode2, Agency1, Agency2, CountryCode Country, Nvl(CounterpartyBICCode, 'NA') CounterpartyBICCode, Theirbankname, Their_Account1 TheirAccount1, TheirBankBicCode1, Transaction_Type BS, 'T' Settled, 'PostSettlement' SettlementFlag, 0 SrNo, groupdealno
											FROM (
												SELECT portfolio, bt.CMS_THEIRACCOUNTTYPE their_accounttype, bt.CMS_OURACCOUNTTYPE our_accountype, Decode(Nvl(oscontract.subsidiaryname, 'T'), 'T', s.subsidiaryname, oscontract.subsidiaryname) subsidiaryname, Decode(Nvl(oscontract.bookname, 'T'), 'T', bk.bookname, oscontract.bookname) bookname, regioncode, regionname, oscontract.country, oscontract.city, Decode(Nvl(oscontract.bookid, '0'), '0', bk.bookid, oscontract.bookid) bookid, Decode(Nvl(oscontract.subsidiaryname, 'T'), 'T', s.SubsidiaryCode, SubCode) subcode, pcode, loccode, countrycode, nvl(cm1.compname, br.countercode) Counterparty, cm2.compname theirbank_name, oscontract.Currency DealCurrency, CounterPartyBicCode, oscontract.workflow, oscontract.assetclass, transactiontype, workflowcode, authorisation, position, mtmmethod, costingmethod, Decode(Nvl(oscontract.contractcode, '0'), '0', br.contractcode, oscontract.contractcode) contractcode, oscontract.portcode, deletionstatus, transactiontypecode, tradedate, transaction_type, Product, SubProduct, underlying, oscontract.valuedate, matdate, Quantity, Rate, Amount, facevalue, consideration, reference_no, dealno, groupdealno, security_desc, product_type, oscontract.countercode, agency1, BankName1, bankcode1, account1, BankBicCode1, agency2, BankName2, bankcode2, account2, BankBicCode2, their_bankcode1, theirbankname, their_account1, TheirBankBicCode1, DealType, oscontract.optional01, oscontract.optional02, oscontract.optional03, oscontract.optional04, oscontract.optional05, oscontract.remarks, nostrodate, nostro_ref_no, taxamt, Decode(bt.settlementtype, 'A', oscontract.globalcurr, bt.globalcurr) globalcurr, Decode(bt.settlementtype, 'A', oscontract.globalcurrrate, bt.globalcurrrate) globalcurrrate, Decode(bt.settlementtype, 'A', oscontract.globalcurramt, bt.globalcurramt) globalcurramt, Decode(bt.settlementtype, 'A', oscontract.localcurr, bt.localcurr) localcurr, Decode(bt.settlementtype, 'A', oscontract.localcurrrate, bt.localcurrrate) localcurrrate, Decode(bt.settlementtype, 'A', oscontract.localcurramt, bt.localcurramt) localcurramt, Decode(bt.settlementtype, 'A', oscontract.groupcurr, bt.groupcurr) groupcurr, Decode(bt.settlementtype, 'A', oscontract.groupcurramt, bt.groupcurramt) groupcurramt, Decode(bt.settlementtype, 'A', oscontract.groupcurrrate, bt.groupcurrrate) groupcurrrate, Decode(Nvl(oscontract.authorisationstatus, 'NA'), 'A', 'Authorised', 'UnAuthorised') authorisationstatus, oscontract.authstatusby, oscontract.authstatuson, oscontract.authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, style, exchangecode, bt.settlementtype, oscontract.branchcode, branch_ref_no, folionumber, legtype, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfrequency, rangebarriers, begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, positiondate, event, posdealno, pos_portfolio, traderid, curr1, curr2, branchname, bt.theirbankcode, bt.their_ac_no, rollover_contractcode, optiontype, br.settlementid, Decode(bt.description, 'Gross Settlement', netsettlementamt, br.settleamt) settleamt, br.settledrcr, br.settlecurr, br.eventid, bt.postingdate, bt.valuedate Settledate, bt.bankcode, bt.ac_no, bt.currency, bt.drcr, bt.settlementamt, bt.adjustment, bt.netsettlementamt, bt.insttype, bt.instno, bt.dealer settl_dealer, bt.linkno, bt.settlementtype settletype, bt.tradetype, bt.description, bt.narration, bt.remarks Cms_Remarks, bt.reconstatus, bt.reconid, bt.recondate, bt.reconby, bt.reconremarks, Nvl(br.cms_AuthStatus, 'N') cms_AuthStatus, br.cms_authby, br.cms_authon, cms_nostro_date, cms_nostro_ref_no, bt.cms_optional01, bt.cms_optional02, bt.cms_optional03, bt.cms_optional04, bt.cms_optional05, br.cms_optional02 ref_optional, bt.subsidiarycode, Decode(Sign(settleamt), - 1, 'CR', 'DR') netsettlementdrcr, br.globalcurramt br_globalcurramt, br.localcurramt br_localcurramt, br.groupcurramt br_groupcurramt, br.globalcurrrate br_globalcurrrate, br.localcurrrate br_localcurrrate, br.groupcurrrate br_groupcurrrate, cm.CompName, category, 0 spotrate, 0 swappoints, '' dealidentity, nvl(isdownloaded, 'F') isdownloaded, source, filename, pa.payment_mode, payment_method, nvl(STATUS, 'Pending') STATUS, cm2.ifsc_code, br.utr_number, enddate, startdate, isino_code, tradedate orig_tradedate, bt.purpose, s.address1, s.address2, br.rtgs_upload, redemption_premium
												FROM (
													SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, positiondate, event, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode, brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date
													FROM (
														SELECT s.*, workflow, Decode(Lower(t.assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', t.assetclass), t.assetclass) assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2, their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, positiondate, event, ospos.dealno posdealno, OSPos.portfolio Pos_portfolio, dealer traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue, Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date
														FROM (
															SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date
															FROM fxmaster
															WHERE nvl(deletionstatus, 'ND') <> 'D'
															
															UNION ALL
															
															SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
																			SELECT upper(PARAMVALUE)
																			FROM params
																			WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
																			), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
																				SELECT DISTINCT optional02
																				FROM contractmaster
																				WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
																				) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security', s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date
															FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, (
																	SELECT compcode, compname
																	FROM companymaster
																	) cm, (
																	SELECT compcode, compname, is_taxable
																	FROM companymaster
																	) cm1, (
																	SELECT c.contractcode ccode, c1.loan_description loan_desc
																	FROM contractmaster c, contractmaster c1
																	WHERE c.refcontractno = c1.contractcode
																	) contract
															WHERE c.contractcode = contract.ccode(+) AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+) AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324)
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, cm.compname product, mf.securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, (Qty_Leg1 * facevalue_PU) facevalue, Price_leg1 * qty_leg1 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, their_bankcode their_bankcode2, their_account their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, To_Char(ETF_Traded) || 'MF' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, rm.rating rating, rm.rating rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date(reference) agm_date
															FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig
															WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1)) AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+)
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, compname product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date(reference) agm_date
															FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm
															WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND assetclass = 'Equity' AND nvl(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+)
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mt.Assetclass, compname product, de.symbol subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mt.currency curr1, mt.currency curr2, mt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date
															FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
																	SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
																	FROM equitymaster
																	
																	UNION ALL
																	
																	SELECT INDEX_NAME, INDEX_NAME, (
																			SELECT compcode
																			FROM companymaster
																			WHERE compname = 'NONE' AND rownum = 1
																			) ISSUER
																	FROM index_master
																	) eq, workflow ass, dealsymbol DE
															WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D'
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date
															FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
															WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+) AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%')
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, c.Assetclass, compname product, de.symbol subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, c.contractcode securitysymbol, 'SECONDARY' product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date
															FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
															WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND'
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transactiontype, contractcode, dealno, groupdealno, tradedate, valuedate, valuedate matdate, traderid, countercode, quantity quantity, 1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, quantity amount, 0 WITHHOLDINGTAX, Product ProductDesc, 0 facevalue, 0 consideration, currency, paymentmode agency1, bankcode, account, '' agency2, '' bankcode2, '' account2, '' their_agency1, '' their_bankcode1, '' their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_refno nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branch branchcode, branch_refno branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, '' exchangecode, deletionstatus, transactiontypecode, '' securitysymbol, '' product_type, '' security_desc, currency underlying, '' brokercode, valuedate brokeragedate, '' brokerage_curr, 0 brokerage, '' brokeragebank, '' brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date
															FROM currentaccount
															WHERE nvl(deletionstatus, 'ND') <> 'D'
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date
															FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
															WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date
															FROM mutualfund_transact mt, alternateinvestment alt, (
																	SELECT marketsymbol, symbol
																	FROM dealsymbol
																	WHERE transactiontypecode = '1099999999'
																	) d
															WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D'
															) osContract, (
																SELECT DISTINCT positiondate, event, dealno, portfolio, dealer, trunc(operationdate) operationdate
																FROM positions
																WHERE Nvl(deletionstatus, 'ND') = 'ND'
																) OSPos, (
																SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
																FROM assetclass a, workflow w, transactiontype t
																WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
																) t, (
																SELECT subsidiaryname, bookname, portname portfolio, isconstituent, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
																FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
																WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
																) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
														WHERE Decode(osContract.transactiontypecode, 26, securitysymbol, 394, securitysymbol, osContract.contractcode) = OSPos.dealno AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
														)
													) oscontract, cms_banktransaction bt, cms_banktransaction_ref br, subsidiarymaster s, BookMaster bk, Companymaster cm, Companymaster cm1, Companymaster cm2, paymentmode pa
												WHERE osContract.contractcode(+) = br.securitysymbol AND br.settlementid = bt.settlementid AND bt.subsidiarycode = s.subsidiarycode AND bk.subsidiarycode || bk.bookid = s.subsidiarycode || bt.bookid AND cm.CompCode(+) = bt.BankCode AND cm1.compcode(+) = br.countercode AND pa.pay_mode_code(+) = bt.paymentmode AND cm2.compcode(+) = br.theirbankcode AND Trunc(bt.valuedate) BETWEEN '<%-ASONDATE%>' AND '<%-ASONDATE%>'
												)
											WHERE 1 = 1 AND Currency <> 'INR' AND To_Char(netsettlementdrcr) = 'CR'
											) SettSQL, (
												SELECT cb.SettlementId, Abs(netsettlementamt) AbsSettlement_Amount, netsettlementamt NetSettlement_Amount, Count(*) MsgCount
												FROM Cms_BankTransaction cb, Cms_BankTransaction_ref cbr
												WHERE cb.SettlementId = cbr.SettlementId
												GROUP BY cb.SettlementId, netsettlementamt
												) MsgSQL
										WHERE SettSQL.SettlementId = MsgSQL.SettlementId(+)
										
										UNION
										
										SELECT Subsidiaryname, bookname, portfolio, assetclass, workflow, Product, SubProduct, '               ' MsgType, DealNo || 'C' || 1 MessageId, 'Confirmation' Description, To_Char(DealNo || 'C' || 1) SettlementId, 1 Leg_No, Curr CurrPair, 0 SettlementAmount, Quantity, Rate, Amount, Curr, Curr NostroCurrency, Decode(Sign(Quantity), - 1, 'CR', 'DR') Debit_Credit, ContractCode, 'F' Renewal, DealNo, Substr(Curr, 1, 3) BaseCurr, Substr(Curr, 4, 3) DeriveCurr, TradeDate, ValueDate, Counterparty, CounterCode, DealType, Branch_Ref_No, TraderId, BankName1, Account1, BankBICCode1, BankName2, Account2, BankBICCode2, agency1name Agency1, agency2name Agency2, Country, Nvl(CounterpartyBICCode, 'NA') CounterpartyBICCode, Theirbankname, Their_Account1 TheirAccount1, TheirBankBicCode1, Transaction_Type BS, '' Settled, '' SettlementFlag, 0 SrNo, groupdealno, 1 MsgCount, 0 AbsSettlement_Amount, 0 NetSettlement_Amount
										FROM (
											SELECT SUBSIDIARYNAME, BOOKNAME, PORTFOLIO, PRODUCT, SUBPRODUCT, currency CURR, Decode(TRANSACTIONTYPE, 'Split In', 'Split', TRANSACTIONTYPE) TRANSACTIONTYPE, Decode(TRANSACTION_TYPE, 'Split In', 'Split', TRANSACTION_TYPE) TRANSACTION_TYPE, CONTRACTCODE, Decode(product, 'Swaps', SECURITYSYMBOL, CONTRACTCODE) CONTRACT_ID, TRADEDATE, To_Char(TRADEDATE, 'dd/MM/yyyy hh24:mi:ss') AS TRANSACTIONDATETIME, VALUEDATE, MATDATE, TRADERID, COUNTERPARTY, CATEGORY, '' TRANS_CATEGORY, SECURITY_DESC, PRINCIPAL, 0 WITHHOLDINGTAX, AMOUNT_LEG1, QTY_LEG1, PRICE_LEG1, 0 GROSSAMT, YIELD_LEG1, 0 ACCR_INTR_PU, ACCRUEDINTEREST, CONSIDERATION, POST_CONSIDERATION, POST_ACC_INTEREST_LEG1, POST_ACCRUEDINTEREST, SL_YIELD, SL_PRICE, SL_ACC_INT, contract_wac wac, contract_revalwac revalwac, CASE WHEN TRANSACTIONTYPECODE IN ('112', '127', '108', '204', '161', '104', '391') THEN (nvl(price_leg1, 0) - nvl(contract_wac, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('101') THEN (nvl(contract_wac, 0) - nvl(price_leg1, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328') THEN SLB_PROFIT_LOSS ELSE 0 END profit_loss, REPO_RATE, REFERENCE_NO REFCONTRACTNO, YIELDTO, BANKCURR, AGENCY1 AGENCY1NAME, BANKNAME1, ACCOUNT1, AGENCY2 AGENCY2NAME, BANKNAME2, ACCOUNT2, THEIR_AGENCY1 THEIR_AGENCY1NAME, '' THEIR_BANKNAME1, THEIR_ACCOUNT1, '' THEIR_AGENCY2NAME, THEIR_BANKNAME2, THEIR_ACCOUNT2, LOCALCURR, LOCALCURRRATE, LOCALCURRAMT, GLOBALCURR, GLOBALCURRRATE, GLOBALCURRAMT, GROUPCURR, GROUPCURRAMT, GROUPCURRRATE, 0 WITHHOLDINGTAX_PER, 0 EFFECTIVERATE_PER, 0 EFFECTIVERATE_AMT, 0 UPFRONTFEES_PER, 0 UPFRONTFEES_AMT, 0 OTHERS_PER, 0 OTHERS_AMT, 0 COVERRATE, 0 PREMIA_PER, '' PREMIA, 0 STAMPDUTY, SECURED, '' NEGOTIABLE, BROKERAGEDATE, 0 BROKERAGETYPEVALUE, '' BROKERNAME, BROKERCODE, BROKERAGE, BROKERAGE_CURR, '' BROKERAGETYPE, REMARKS, 0 SERVICETAXTYPE, 0 SERVICETAXRATE, 0 SERVICETAXAMT, 0 ACCOUNTCHARGE, 0 NETRATEFLAG, nvl(authorisationstatus, 'NA') AUTHORISATIONSTATUSCODE, AUTHORISATIONSTATUS, AUTHSTATUSBY, AUTHSTATUSON, AUTHSTATUSREMARKS, CONFIRMATIONSTATUS, CONFSTATUSBY, CONFSTATUSON, CONFSTATUSREMARKS, TRANSACTIONTYPE TRANSTYPE, '' CONTRACTTEMPLATE, DEALNO, GROUPDEALNO, 0 PAY_WASHRATE, '' HEDGEON, NOTIONALSTEPRULE, 0 CAPS, 0 FLOORS, RANGEBARRIERS, BRANCH, DEALTYPE, OPTIONAL01, OPTIONAL02, OPTIONAL03, OPTIONAL04, OPTIONAL05, '' SPOTRATESOURCES_ID, PRODUCT_TYPE, 0 EXCHANGE_RATE, 0 WASHRATE, '' SETTLEMENT, 0 STRATEGYID, SUBPRODUCT PRODUCT_CODE, CONTRACTSTRUCTURE, WORKFLOW, '' INITIAL_EXCHANGE, '' CASHFLOWGENERATION, '' EARLYTERMINATION, BOOKID, deal_location_code, DEPOSITORY, '' DELIVERY_MODE, DELIVERY_MODE_CODE, EXCHANGECODE, PORTCODE, TRANSACTIONTYPECODE TRANSACTION_TYPE_CODE, PAYMENTMODE1, BANKCODE1, PAYMENTMODE2, BANKCODE2, '' CP_PAYMENTMODE1, '' CP_BANKCODE1, SUBSIDIARYCODE, COUNTERCODE, '' COUNTERPARTY_DEALER, ASSETCLASS, currency CONSCURRENCY, NOSTRO_REF_NO, NOSTRODATE, REFERENCE_NO, RESTRUCTURE_CONTRACTCODE, ROLLOVER_CONTRACTCODE, BRANCH_REF_NO, CURRNAME, '' BORROW_TERM, BENCHMARKID, 0 PARVALUE, 0 OFFERINGPRICE, '' INTERESTMODE, INTEREST, MARKUP, DAYCOUNT, INTERESTDIRECTION, 0 PAYMENTFREQ, 0 RESETFREQ, '' RESETDATE, DISCOUNTCURVE, 0 COUPYEAR, DEALSOURCE, AMOUNT, QUANTITY, RATE, PRODUCTDESC, BROKER_NAME, BROKERAGEBANKCODE, BROKERAGEBANKNAME, BROKERAGE_AC, '' LOAN_DESCRIPTION, FACEVALUE, ISINO_CODE, SECURITYSYMBOL, 0 INTEREST_TAX_CAT_CODE, PRODUCT1, PCHARGERATE, PCHARGEAMT, 0 XIRRVALUE, '' CUSTOM_CONTRACTCODE, 0 TERMVALUE, '' ACCOUNTINGTYPE, '' REPAY_COMMENCEMENT_DATE, 0 LRN_NUMBER, 0 CUSTOM_PENALTYRATE, 0 LGBG_NUMBER, '' SUPPLIER, '' VESSEL_NAME, 0 CHARGES_PAID_TILL, '' LATEST_DATE_OF_SHIPMENT, '' PAYMENT_TERMS, 0 ORIGINAL_AMOUNT, 0 COMMISSION_PERCENTAGE, REMARKS REMARK, DEAL_REMARKS, EMAIL_STATUS, AUID, MATDATE MATURITY, INDEX_RATIO, Nvl(ORDER_STATUS, 'Order Pending') ORDER_STATUS, To_Char(order_conf_date, 'dd/MM/yyyy hh24:mi:ss') AS order_conf_date, order_conf_by, Nvl(RECON_STATUS, 'Unreconciled') RECON_STATUS, decode(upper(RECON_STATUS), 'RECONCILED', '', RECON_REMARKS) RECON_REMARKS, FD_NUMBER, FD_INTEREST_RATE, FD_TENOR, FD_AMOUNT, FD_AMOUNT_PER, (
													SELECT descr
													FROM default_static_table
													WHERE code = '365' AND module_name = 'asba_fd_daycount'
													) FD_DAY_COUNT, FD_INTEREST, decode(Nvl(final_price, 1), 0, 'F', 'T') FINAL_PRICE, issuer, exchange, netrate, netamount, bsr_code, lotsize, noofcontracts, underlying1 derivative_underlying, sl_consideration, active_status, nominal_price, deal_purpose, Nvl(reporting_asset_class, ASSETCLASS) REPORTING_ASSET_CLASS, bsrnumber, dept_name, Nvl(stt, 0) stt, brokerage_amount, dealerbook, iobj, sectorname, payment_mode, 'TRUE' display_auth_info, decode(transactiontypecode, 5001, 'FALSE', Upper('TRUE')) printdealticket, primarymarkettype, acc_interest, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, Theirbankname, country, settleflag, reversalstatus, type, listed
											FROM (
												SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, Decode(Lower(assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', assetclass), assetclass) assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode, brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, bsr_code, netrate, netamount, lotsize, noofcontracts, underlying1, sl_consideration, active_status, nominal_price, deal_purpose, reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, sectorname, payment_mode, primarymarkettype, settleflag, reversalstatus, type, listed
												FROM (
													SELECT s.*, workflow, t.assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2, their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, dealno posdealno, portfolio Pos_portfolio, traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue, Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, osContract.depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, osContract.branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, cm8.bsr_code bsr_code, netrate, netamount, oscontract.lotsize, oscontract.noofcontracts, underlying1, sl_consideration, oscontract.active_status active_status, nominal_price, deal_purpose, ds.reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, oscontract.sectorname, oscontract.payment_mode, primarymarkettype, oscontract.settleflag settleflag, Nvl(reversalstatus, 'F') reversalstatus, TYPE, oscontract.listed
													FROM (
														SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amt1 amount_leg1, amt1 qty_leg1, strikerate price_leg1, 0 yield_leg1, amt2 principal, '' deal_location_code, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag, reversalstatus, product_code TYPE, 1 listed
														FROM fxmaster
														WHERE nvl(deletionstatus, 'ND') <> 'D'
														
														UNION ALL
														
														SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, c.portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, CASE WHEN transaction_type_code IN (90, 91, 329, 330) THEN sl_date ELSE enddate END matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
																		SELECT upper(PARAMVALUE)
																		FROM params
																		WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
																		), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
																			SELECT DISTINCT optional02
																			FROM contractmaster
																			WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
																			) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security', s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, nvl(sl_consideration, 0), 1 active_status, nominal_price, descr deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, TYPE, Decode(s.listed, 'True', 1, 'False', 0, 0) listed
														FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, dealerwiseprofitability dl, (
																SELECT compcode, compname
																FROM companymaster
																) cm, (
																SELECT compcode, compname, is_taxable
																FROM companymaster
																) cm1, (
																SELECT c.contractcode ccode, c1.loan_description loan_desc
																FROM contractmaster c, contractmaster c1
																WHERE c.refcontractno = c1.contractcode
																) contract, (
																SELECT code, descr, static_value
																FROM default_static_table
																WHERE MODULE_NAME = 'REVAL_PURPOSE'
																ORDER BY To_Number(static_value)
																) d
														WHERE c.contractcode = contract.ccode(+) AND c.purpose_code = d.code(+) AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+) AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324) AND dl.portcode(+) = c.portcode AND To_Char(dl.code(+)) = To_Char(c.dealerbook) AND dl.asset_class_code(+) = 2
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Mutual Fund' product, securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(type_name), 'CLOSE ENDED', matdate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, scheme_code securitysymbol, market product_type, mf.scheme_name security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_number isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, descr deal_purpose, '' bsrnumber, dept_name, 0 stt, 0 BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, mf.iobj, sc.sectorname, payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, 'MF' TYPE, listed
														FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig, sectormaster sc, dealerwiseprofitability dl, paymentmode pm, (
																SELECT code, descr, static_value
																FROM default_static_table
																WHERE MODULE_NAME = 'REVAL_PURPOSE'
																ORDER BY To_Number(static_value)
																) d
														WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1)) AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+) AND ig.sector = sc.SECTORCODE(+) AND mt.purpose_code = d.code(+) AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 5 AND pm.pay_mode_code = mt.payment_mode_code
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Equity' product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, mt.contractcode contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.scrip_code securitysymbol, market product_type, mf.scrip_name security_desc, subproduct underlying, mt.brokercode brokercode, brokeragedate, brokerage_curr, dealcharges.BROKERAGE_AMOUNT brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_no isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, Nvl(dealcharges.net_rate, Nvl(mt.netrate, 0)) netrate, Nvl(dealcharges.net_amount, 0) netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, mf.active_status, 0 nominal_price, '' deal_purpose, bm.bsrnumber, dept_name, dealcharges.stt stt, dealcharges.BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, 'EQ' TYPE, listed
														FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm, companymaster ig, brokerage_master bm, dealerwiseprofitability dl, (
																SELECT CONTRACTCODE, STT, BROKERAGE_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN (((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) + STT) WHEN TRANSACTION_TYPE_CODE = 305 THEN (((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) - STT) WHEN TRANSACTION_TYPE_CODE = 192 THEN ((PRICE_LEG1 * QTY_LEG1) + (BROKERAGE_AMOUNT + STT)) WHEN TRANSACTION_TYPE_CODE = 204 THEN ((PRICE_LEG1 * QTY_LEG1) - (BROKERAGE_AMOUNT + STT)) END AS NET_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN ((((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 WHEN TRANSACTION_TYPE_CODE = 305 THEN ((((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 END AS NET_RATE, (BROKERAGE_AMOUNT / QTY_LEG1) B_UNIT
																FROM (
																	SELECT CONTRACTCODE, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_STT_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', CHARGE_AMOUNT, 'STT_EQ_PUR', charge_amount, 'STT_EQ_SALE', charge_amount, 0)) AS STT, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_SALE', CHARGE_AMOUNT, 'BROKER_CHARGE_EQ_PUR', charge_amount, 'BROKER_CHARGE_EQ_SALE', charge_amount, 0)) AS BROKERAGE_AMOUNT, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
																	FROM (
																		SELECT dc.CONTRACTCODE, dc.EVENT_CHARGE_CODE, dc.CHARGE_AMOUNT, MT.QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE, p.paramname, p.paramvalue
																		FROM DEAL_CHARGES DC, MUTUALFUND_TRANSACT MT, params p
																		WHERE DC.CONTRACTCODE = MT.CONTRACTCODE AND p.paramvalue(+) = dc.event_charge_code AND p.paramname IN ('BROKER_CHARGE_EVENT_ORDER_STT_PUR', 'BROKER_CHARGE_EVENT_ORDER_PUR', 'BROKER_CHARGE_EVENT_ORDER_SALE', 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', 'STT_EQ_PUR', 'STT_EQ_SALE', 'BROKER_CHARGE_EQ_PUR', 'BROKER_CHARGE_EQ_SALE') AND EVENT_CHARGE_CODE IN (p.paramvalue)
																		)
																	GROUP BY CONTRACTCODE, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
																	)
																) dealcharges
														WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND Lower(assetclass) = 'equity' AND nvl(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND mt.transaction_type_code NOT IN (207) AND dealcharges.contractcode(+) = mt.contractcode AND mf.issuer = ig.compcode(+) AND mt.brokercode = bm.brokercode(+) AND mt.exchangecode = bm.exchange_code(+) AND bm.asset_class_code(+) = 7 AND bm.BR_WORKFLOWCODE(+) = 27 AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 7
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.profit_loss SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, mf.product TYPE, 1 listed
														FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
																SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
																FROM equitymaster
																
																UNION ALL
																
																SELECT INDEX_NAME, INDEX_NAME, (
																		SELECT compcode
																		FROM companymaster
																		WHERE compname = 'NONE' AND rownum = 1
																		) ISSUER
																FROM index_master
																) eq, workflow ass, dealsymbol DE
														WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D'
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, 'EQ' type, 0 listed
														FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
														WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+) AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%')
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, ird.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, ird.contractcode securitysymbol, 'SECONDARY' product_type, ird.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, c.depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, c.branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, c.lotsize, c.noofcontracts, c.underlying underlying1, 0 sl_consideration, to_number(ird.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, ird.product type, 1 listed
														FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
														WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND'
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transactiontype, contractcode, dealno, groupdealno, tradedate, valuedate, valuedate matdate, traderid, countercode, quantity quantity, 1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, quantity amount, 0 WITHHOLDINGTAX, Product ProductDesc, 0 facevalue, 0 consideration, currency, paymentmode agency1, bankcode, account, '' agency2, '' bankcode2, '' account2, '' their_agency1, '' their_bankcode1, '' their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_refno nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branch branchcode, branch_refno branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, '' exchangecode, deletionstatus, transactiontypecode, '' securitysymbol, '' product_type, '' security_desc, currency underlying, '' brokercode, valuedate brokeragedate, '' brokerage_curr, 0 brokerage, '' brokeragebank, '' brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, '' deal_location, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag, 'F' reversalstatus, 'NA' type, 0 listed
														FROM currentaccount
														WHERE nvl(deletionstatus, 'ND') <> 'D'
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, mf.product type, 1 listed
														FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
														WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(OPENENDED), 'YES', maturitydate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, alt.isinnumber isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, decode(nvl(qty_leg1, 0), 0, ai_quantity, qty_leg1) qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, securitytype type, listed
														FROM mutualfund_transact mt, alternateinvestment alt, (
																SELECT marketsymbol, symbol
																FROM dealsymbol
																WHERE transactiontypecode = '1099999999'
																) d
														WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D'
														) oscontract, (
															SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
															FROM assetclass a, workflow w, transactiontype t
															WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
															) t, (
															SELECT subsidiaryname, bookname, portname portfolio, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
															FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
															WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
															) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
													WHERE 1 = 1 AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
													)
												WHERE 1 = 1
												)
											ORDER BY dealno DESC
											) ConfDetails
										WHERE Trunc(TRADEDATE) BETWEEN '<%-ASONDATE%>' AND '<%-ASONDATE%>'
										) MessageGen
									WHERE 1 = 1
									) ML, (
										SELECT MessageId, userid, userterminal, filepath, filename, fileterminal, DATETIME
										FROM MessageStatus
										WHERE operation = 'INSERT'
										) MGL
								WHERE ML.MessageId = MGL.MessageId(+)
								)
							WHERE 1 = 1 AND Upper(Nvl(DealType, 'INTERBANK')) IN ('INTERBANK') AND trunc(tradedate) BETWEEN to_date('<%-ASONDATE%>', 'dd/MM/yyyy') AND to_date('<%-ASONDATE%>', 'dd/MM/yyyy')
							) MG
						WHERE Nvl(assetclass, 'Currency') IN ('Currency') AND Nvl(product, 'Outright') IN ('Outright')
						) main
					WHERE 1 = 1
					)
					GROUP BY agency1,msgstatus)
					GROUP BY agency1
					UNION 
					SELECT 0 cnt, 'CCIL' AGENCY1, 0 pending FROM dual
					UNION 
					SELECT 0 cnt, 'CLS' AGENCY1, 0 pending FROM dual
					UNION 
					SELECT 0 cnt, 'SWIFT' AGENCY1, 0 pending FROM dual
					)
					GROUP BY agency1`,
			"filter":["ASONDATE"]
				},
			"update":{
		"source":`SELECT Sum(cnt) cnt,agency1,Sum(pending) pending FROM
					( 
					SELECT Sum(CNT) cnt, AGENCY1, Sum(PENDING) pending FROM (
					SELECT Count(*) cnt,agency1,msgstatus
					,Decode(msgstatus,'F',Count(*),'E',Count(*),0) pending 
					FROM (
					SELECT msgtype, messageid, description, settlementid, currency, settlementamount, subsidiaryname, bookname, portfolio, assetclass, product, subproduct, contractcode, counterparty, counterpartybiccode, traderid, currpair, tradedate, settledate, quantity, rate, amount, nostrobank, agency1, bankname1, account1, bankbiccode1, agency2, bankname2, account2, bankbiccode2, theirbankname, theiraccount1, theirbankbiccode1, nostrocurrency, debit_credit, renewal, dealno, basecurr, derivecurr, branch_ref_no, countercode, country, bs, settled, settlementflag, srno, msgcount, abssettlement_amount, netsettlement_amount, leg_no, userid, userterminal, filepath, filename, fileterminal, DATETIME, msgref, deal_ref, groupdealno, CASE WHEN Nvl(MsgStatus, 'F') = 'F' AND Nvl(CounterPartyBicCode, 'NA') = 'NA' AND Upper(Nvl(Description, 'NA')) <> 'ACCOUNT TRANSFER' THEN 'E' WHEN Nvl(MsgStatus, 'F') = 'F' AND Nvl(msgtype, 'NA') = 'NA' AND Upper(Nvl(Description, 'NA')) <> 'ACCOUNT TRANSFER' THEN 'E' ELSE msgstatus END msgstatus, CASE WHEN Nvl(MsgStatus, 'F') = 'F' AND Nvl(CounterPartyBicCode, 'NA') = 'NA' AND Upper(Nvl(Description, 'NA')) <> 'ACCOUNT TRANSFER' THEN 'Cannot generate message for deals with blank CounterParty BicCode' WHEN Nvl(MsgStatus, 'F') = 'F' AND Nvl(msgtype, 'NA') = 'NA' AND Upper(Nvl(Description, 'NA')) <> 'ACCOUNT TRANSFER' THEN 'Cannot generate message for deals with agency other than SWIFT' ELSE '' END ErrorMsg
					FROM (
						SELECT MsgStatus, CASE WHEN upper(Description || Agency1 || Settled) = upper('SETTLEMENTSSWIFTT') THEN 'MT203' WHEN upper(Description || Agency2 || Settled) = upper('SETTLEMENTSSWIFTT') THEN 'MT203' WHEN upper(Description || MsgCount) = upper('Account Transfer1') THEN 'MT200' WHEN upper(Description || Agency1) = upper('ConfirmationSWIFT') THEN 'MT300' WHEN upper(Description || Agency2 || Settled) = upper('ConfirmationSWIFT') THEN 'MT300' WHEN upper(Description || Agency1 || MsgCount) = upper('SETTLEMENTSSWIFTT1') THEN 'MT202' WHEN upper(Description || Agency2 || MsgCount) = upper('SETTLEMENTSSWIFTT1') THEN 'MT202' END msgtype, messageid, description, settlementid, currency, settlementamount, Subsidiaryname, bookname, portfolio, assetclass, Product, SubProduct, contractcode, counterparty, counterpartybiccode, traderid, currpair, tradedate, settledate, quantity, rate, amount, Decode(Upper(BS), 'BUY', MG.BankName2, MG.BankName1) NostroBank, agency1, bankname1, account1, bankbiccode1, agency2, bankname2, account2, bankbiccode2, theirbankname, theiraccount1, theirbankbiccode1, nostrocurrency, debit_credit, renewal, dealno, basecurr, derivecurr, branch_ref_no, countercode, country, bs, settled, settlementflag, srno, msgcount, abssettlement_amount, netsettlement_amount, leg_no, userid, userterminal, filepath, filename, fileterminal, DATETIME, replace(replace(contractcode, 'OUT/20', ''), '/', '') MSGREF, SUBSTR(contractcode, INSTR(contractcode, '/', - 1, 1) + 1) deal_ref, groupdealno
						FROM (
							SELECT *
							FROM (
								SELECT ML.*, Decode(MGL.MessageId, '', 'F', 'T') MsgStatus, userid, userterminal, filepath, filename, fileterminal, DATETIME
								FROM (
									SELECT *
									FROM (
										SELECT SettSQL.*, Nvl(MsgSQL.MsgCount, 0) MsgCount, nvl(AbsSettlement_Amount, 0) AbsSettlement_Amount, nvl(NetSettlement_Amount, 0) NetSettlement_Amount
										FROM (
											SELECT Subsidiaryname, bookname, portfolio, assetclass, workflow, Product, SubProduct, '               ' MsgType, SettlementId || 'S' || 1 MessageId, Decode(Description, 'Account Transfer', 'Account Transfer', 'Settlements') Description, To_Char(SettlementId) SettlementId, 1 Leg_no, Currency CurrPair, Abs(nvl(SettlementAmt, 0)) SettlementAmount, Quantity, Rate, Amount, Currency, Currency NostroCurrency, To_Char(netsettlementdrcr) debit_credit, ContractCode, 'F' Renewal, Decode(Description, 'Account Transfer', SettlementId, DealNo) DealNo, Substr(DealCurrency, 1, 3) BaseCurr, Substr(DealCurrency, 4, 3) DeriveCurr, TradeDate, SettleDate, Counterparty, CounterCode, DealType, Branch_Ref_No, Traderid, Decode(Description, 'Account Transfer', Compname, BankName1) BankName1, Decode(Description, 'Account Transfer', Ac_no, Account1) Account1, Decode(Description, 'Account Transfer', CounterPartyBicCode, BankBICCode1) BankBICCode1, BankName2, Account2, BankBICCode2, Agency1, Agency2, CountryCode Country, Nvl(CounterpartyBICCode, 'NA') CounterpartyBICCode, Theirbankname, Their_Account1 TheirAccount1, TheirBankBicCode1, Transaction_Type BS, 'T' Settled, 'PostSettlement' SettlementFlag, 0 SrNo, groupdealno
											FROM (
												SELECT portfolio, bt.CMS_THEIRACCOUNTTYPE their_accounttype, bt.CMS_OURACCOUNTTYPE our_accountype, Decode(Nvl(oscontract.subsidiaryname, 'T'), 'T', s.subsidiaryname, oscontract.subsidiaryname) subsidiaryname, Decode(Nvl(oscontract.bookname, 'T'), 'T', bk.bookname, oscontract.bookname) bookname, regioncode, regionname, oscontract.country, oscontract.city, Decode(Nvl(oscontract.bookid, '0'), '0', bk.bookid, oscontract.bookid) bookid, Decode(Nvl(oscontract.subsidiaryname, 'T'), 'T', s.SubsidiaryCode, SubCode) subcode, pcode, loccode, countrycode, nvl(cm1.compname, br.countercode) Counterparty, cm2.compname theirbank_name, oscontract.Currency DealCurrency, CounterPartyBicCode, oscontract.workflow, oscontract.assetclass, transactiontype, workflowcode, authorisation, position, mtmmethod, costingmethod, Decode(Nvl(oscontract.contractcode, '0'), '0', br.contractcode, oscontract.contractcode) contractcode, oscontract.portcode, deletionstatus, transactiontypecode, tradedate, transaction_type, Product, SubProduct, underlying, oscontract.valuedate, matdate, Quantity, Rate, Amount, facevalue, consideration, reference_no, dealno, groupdealno, security_desc, product_type, oscontract.countercode, agency1, BankName1, bankcode1, account1, BankBicCode1, agency2, BankName2, bankcode2, account2, BankBicCode2, their_bankcode1, theirbankname, their_account1, TheirBankBicCode1, DealType, oscontract.optional01, oscontract.optional02, oscontract.optional03, oscontract.optional04, oscontract.optional05, oscontract.remarks, nostrodate, nostro_ref_no, taxamt, Decode(bt.settlementtype, 'A', oscontract.globalcurr, bt.globalcurr) globalcurr, Decode(bt.settlementtype, 'A', oscontract.globalcurrrate, bt.globalcurrrate) globalcurrrate, Decode(bt.settlementtype, 'A', oscontract.globalcurramt, bt.globalcurramt) globalcurramt, Decode(bt.settlementtype, 'A', oscontract.localcurr, bt.localcurr) localcurr, Decode(bt.settlementtype, 'A', oscontract.localcurrrate, bt.localcurrrate) localcurrrate, Decode(bt.settlementtype, 'A', oscontract.localcurramt, bt.localcurramt) localcurramt, Decode(bt.settlementtype, 'A', oscontract.groupcurr, bt.groupcurr) groupcurr, Decode(bt.settlementtype, 'A', oscontract.groupcurramt, bt.groupcurramt) groupcurramt, Decode(bt.settlementtype, 'A', oscontract.groupcurrrate, bt.groupcurrrate) groupcurrrate, Decode(Nvl(oscontract.authorisationstatus, 'NA'), 'A', 'Authorised', 'UnAuthorised') authorisationstatus, oscontract.authstatusby, oscontract.authstatuson, oscontract.authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, style, exchangecode, bt.settlementtype, oscontract.branchcode, branch_ref_no, folionumber, legtype, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfrequency, rangebarriers, begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, positiondate, event, posdealno, pos_portfolio, traderid, curr1, curr2, branchname, bt.theirbankcode, bt.their_ac_no, rollover_contractcode, optiontype, br.settlementid, Decode(bt.description, 'Gross Settlement', netsettlementamt, br.settleamt) settleamt, br.settledrcr, br.settlecurr, br.eventid, bt.postingdate, bt.valuedate Settledate, bt.bankcode, bt.ac_no, bt.currency, bt.drcr, bt.settlementamt, bt.adjustment, bt.netsettlementamt, bt.insttype, bt.instno, bt.dealer settl_dealer, bt.linkno, bt.settlementtype settletype, bt.tradetype, bt.description, bt.narration, bt.remarks Cms_Remarks, bt.reconstatus, bt.reconid, bt.recondate, bt.reconby, bt.reconremarks, Nvl(br.cms_AuthStatus, 'N') cms_AuthStatus, br.cms_authby, br.cms_authon, cms_nostro_date, cms_nostro_ref_no, bt.cms_optional01, bt.cms_optional02, bt.cms_optional03, bt.cms_optional04, bt.cms_optional05, br.cms_optional02 ref_optional, bt.subsidiarycode, Decode(Sign(settleamt), - 1, 'CR', 'DR') netsettlementdrcr, br.globalcurramt br_globalcurramt, br.localcurramt br_localcurramt, br.groupcurramt br_groupcurramt, br.globalcurrrate br_globalcurrrate, br.localcurrrate br_localcurrrate, br.groupcurrrate br_groupcurrrate, cm.CompName, category, 0 spotrate, 0 swappoints, '' dealidentity, nvl(isdownloaded, 'F') isdownloaded, source, filename, pa.payment_mode, payment_method, nvl(STATUS, 'Pending') STATUS, cm2.ifsc_code, br.utr_number, enddate, startdate, isino_code, tradedate orig_tradedate, bt.purpose, s.address1, s.address2, br.rtgs_upload, redemption_premium
												FROM (
													SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, positiondate, event, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode, brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date
													FROM (
														SELECT s.*, workflow, Decode(Lower(t.assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', t.assetclass), t.assetclass) assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2, their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, positiondate, event, ospos.dealno posdealno, OSPos.portfolio Pos_portfolio, dealer traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue, Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date
														FROM (
															SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date
															FROM fxmaster
															WHERE nvl(deletionstatus, 'ND') <> 'D'
															
															UNION ALL
															
															SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
																			SELECT upper(PARAMVALUE)
																			FROM params
																			WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
																			), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
																				SELECT DISTINCT optional02
																				FROM contractmaster
																				WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
																				) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security', s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date
															FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, (
																	SELECT compcode, compname
																	FROM companymaster
																	) cm, (
																	SELECT compcode, compname, is_taxable
																	FROM companymaster
																	) cm1, (
																	SELECT c.contractcode ccode, c1.loan_description loan_desc
																	FROM contractmaster c, contractmaster c1
																	WHERE c.refcontractno = c1.contractcode
																	) contract
															WHERE c.contractcode = contract.ccode(+) AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+) AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324)
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, cm.compname product, mf.securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, (Qty_Leg1 * facevalue_PU) facevalue, Price_leg1 * qty_leg1 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, their_bankcode their_bankcode2, their_account their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, To_Char(ETF_Traded) || 'MF' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, rm.rating rating, rm.rating rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date(reference) agm_date
															FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig
															WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1)) AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+)
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, compname product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date(reference) agm_date
															FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm
															WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND assetclass = 'Equity' AND nvl(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+)
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mt.Assetclass, compname product, de.symbol subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mt.currency curr1, mt.currency curr2, mt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date
															FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
																	SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
																	FROM equitymaster
																	
																	UNION ALL
																	
																	SELECT INDEX_NAME, INDEX_NAME, (
																			SELECT compcode
																			FROM companymaster
																			WHERE compname = 'NONE' AND rownum = 1
																			) ISSUER
																	FROM index_master
																	) eq, workflow ass, dealsymbol DE
															WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D'
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date
															FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
															WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+) AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%')
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, c.Assetclass, compname product, de.symbol subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, c.contractcode securitysymbol, 'SECONDARY' product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date
															FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
															WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND'
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transactiontype, contractcode, dealno, groupdealno, tradedate, valuedate, valuedate matdate, traderid, countercode, quantity quantity, 1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, quantity amount, 0 WITHHOLDINGTAX, Product ProductDesc, 0 facevalue, 0 consideration, currency, paymentmode agency1, bankcode, account, '' agency2, '' bankcode2, '' account2, '' their_agency1, '' their_bankcode1, '' their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_refno nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branch branchcode, branch_refno branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, '' exchangecode, deletionstatus, transactiontypecode, '' securitysymbol, '' product_type, '' security_desc, currency underlying, '' brokercode, valuedate brokeragedate, '' brokerage_curr, 0 brokerage, '' brokeragebank, '' brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date
															FROM currentaccount
															WHERE nvl(deletionstatus, 'ND') <> 'D'
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date
															FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
															WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow
															
															UNION ALL
															
															SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, Decode(Nvl(authorisationstatus, 'NA'), 'A', 'Authorised', 'V', 'Verified', 'UnAuthorised') authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date
															FROM mutualfund_transact mt, alternateinvestment alt, (
																	SELECT marketsymbol, symbol
																	FROM dealsymbol
																	WHERE transactiontypecode = '1099999999'
																	) d
															WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D'
															) osContract, (
																SELECT DISTINCT positiondate, event, dealno, portfolio, dealer, trunc(operationdate) operationdate
																FROM positions
																WHERE Nvl(deletionstatus, 'ND') = 'ND'
																) OSPos, (
																SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
																FROM assetclass a, workflow w, transactiontype t
																WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
																) t, (
																SELECT subsidiaryname, bookname, portname portfolio, isconstituent, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
																FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
																WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
																) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
														WHERE Decode(osContract.transactiontypecode, 26, securitysymbol, 394, securitysymbol, osContract.contractcode) = OSPos.dealno AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
														)
													) oscontract, cms_banktransaction bt, cms_banktransaction_ref br, subsidiarymaster s, BookMaster bk, Companymaster cm, Companymaster cm1, Companymaster cm2, paymentmode pa
												WHERE osContract.contractcode(+) = br.securitysymbol AND br.settlementid = bt.settlementid AND bt.subsidiarycode = s.subsidiarycode AND bk.subsidiarycode || bk.bookid = s.subsidiarycode || bt.bookid AND cm.CompCode(+) = bt.BankCode AND cm1.compcode(+) = br.countercode AND pa.pay_mode_code(+) = bt.paymentmode AND cm2.compcode(+) = br.theirbankcode AND Trunc(bt.valuedate) BETWEEN '<%-ASONDATE%>' AND '<%-ASONDATE%>'
												)
											WHERE 1 = 1 AND Currency <> 'INR' AND To_Char(netsettlementdrcr) = 'CR'
											) SettSQL, (
												SELECT cb.SettlementId, Abs(netsettlementamt) AbsSettlement_Amount, netsettlementamt NetSettlement_Amount, Count(*) MsgCount
												FROM Cms_BankTransaction cb, Cms_BankTransaction_ref cbr
												WHERE cb.SettlementId = cbr.SettlementId
												GROUP BY cb.SettlementId, netsettlementamt
												) MsgSQL
										WHERE SettSQL.SettlementId = MsgSQL.SettlementId(+)
										
										UNION
										
										SELECT Subsidiaryname, bookname, portfolio, assetclass, workflow, Product, SubProduct, '               ' MsgType, DealNo || 'C' || 1 MessageId, 'Confirmation' Description, To_Char(DealNo || 'C' || 1) SettlementId, 1 Leg_No, Curr CurrPair, 0 SettlementAmount, Quantity, Rate, Amount, Curr, Curr NostroCurrency, Decode(Sign(Quantity), - 1, 'CR', 'DR') Debit_Credit, ContractCode, 'F' Renewal, DealNo, Substr(Curr, 1, 3) BaseCurr, Substr(Curr, 4, 3) DeriveCurr, TradeDate, ValueDate, Counterparty, CounterCode, DealType, Branch_Ref_No, TraderId, BankName1, Account1, BankBICCode1, BankName2, Account2, BankBICCode2, agency1name Agency1, agency2name Agency2, Country, Nvl(CounterpartyBICCode, 'NA') CounterpartyBICCode, Theirbankname, Their_Account1 TheirAccount1, TheirBankBicCode1, Transaction_Type BS, '' Settled, '' SettlementFlag, 0 SrNo, groupdealno, 1 MsgCount, 0 AbsSettlement_Amount, 0 NetSettlement_Amount
										FROM (
											SELECT SUBSIDIARYNAME, BOOKNAME, PORTFOLIO, PRODUCT, SUBPRODUCT, currency CURR, Decode(TRANSACTIONTYPE, 'Split In', 'Split', TRANSACTIONTYPE) TRANSACTIONTYPE, Decode(TRANSACTION_TYPE, 'Split In', 'Split', TRANSACTION_TYPE) TRANSACTION_TYPE, CONTRACTCODE, Decode(product, 'Swaps', SECURITYSYMBOL, CONTRACTCODE) CONTRACT_ID, TRADEDATE, To_Char(TRADEDATE, 'dd/MM/yyyy hh24:mi:ss') AS TRANSACTIONDATETIME, VALUEDATE, MATDATE, TRADERID, COUNTERPARTY, CATEGORY, '' TRANS_CATEGORY, SECURITY_DESC, PRINCIPAL, 0 WITHHOLDINGTAX, AMOUNT_LEG1, QTY_LEG1, PRICE_LEG1, 0 GROSSAMT, YIELD_LEG1, 0 ACCR_INTR_PU, ACCRUEDINTEREST, CONSIDERATION, POST_CONSIDERATION, POST_ACC_INTEREST_LEG1, POST_ACCRUEDINTEREST, SL_YIELD, SL_PRICE, SL_ACC_INT, contract_wac wac, contract_revalwac revalwac, CASE WHEN TRANSACTIONTYPECODE IN ('112', '127', '108', '204', '161', '104', '391') THEN (nvl(price_leg1, 0) - nvl(contract_wac, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('101') THEN (nvl(contract_wac, 0) - nvl(price_leg1, 0)) * qty_leg1 WHEN TRANSACTIONTYPECODE IN ('315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328') THEN SLB_PROFIT_LOSS ELSE 0 END profit_loss, REPO_RATE, REFERENCE_NO REFCONTRACTNO, YIELDTO, BANKCURR, AGENCY1 AGENCY1NAME, BANKNAME1, ACCOUNT1, AGENCY2 AGENCY2NAME, BANKNAME2, ACCOUNT2, THEIR_AGENCY1 THEIR_AGENCY1NAME, '' THEIR_BANKNAME1, THEIR_ACCOUNT1, '' THEIR_AGENCY2NAME, THEIR_BANKNAME2, THEIR_ACCOUNT2, LOCALCURR, LOCALCURRRATE, LOCALCURRAMT, GLOBALCURR, GLOBALCURRRATE, GLOBALCURRAMT, GROUPCURR, GROUPCURRAMT, GROUPCURRRATE, 0 WITHHOLDINGTAX_PER, 0 EFFECTIVERATE_PER, 0 EFFECTIVERATE_AMT, 0 UPFRONTFEES_PER, 0 UPFRONTFEES_AMT, 0 OTHERS_PER, 0 OTHERS_AMT, 0 COVERRATE, 0 PREMIA_PER, '' PREMIA, 0 STAMPDUTY, SECURED, '' NEGOTIABLE, BROKERAGEDATE, 0 BROKERAGETYPEVALUE, '' BROKERNAME, BROKERCODE, BROKERAGE, BROKERAGE_CURR, '' BROKERAGETYPE, REMARKS, 0 SERVICETAXTYPE, 0 SERVICETAXRATE, 0 SERVICETAXAMT, 0 ACCOUNTCHARGE, 0 NETRATEFLAG, nvl(authorisationstatus, 'NA') AUTHORISATIONSTATUSCODE, AUTHORISATIONSTATUS, AUTHSTATUSBY, AUTHSTATUSON, AUTHSTATUSREMARKS, CONFIRMATIONSTATUS, CONFSTATUSBY, CONFSTATUSON, CONFSTATUSREMARKS, TRANSACTIONTYPE TRANSTYPE, '' CONTRACTTEMPLATE, DEALNO, GROUPDEALNO, 0 PAY_WASHRATE, '' HEDGEON, NOTIONALSTEPRULE, 0 CAPS, 0 FLOORS, RANGEBARRIERS, BRANCH, DEALTYPE, OPTIONAL01, OPTIONAL02, OPTIONAL03, OPTIONAL04, OPTIONAL05, '' SPOTRATESOURCES_ID, PRODUCT_TYPE, 0 EXCHANGE_RATE, 0 WASHRATE, '' SETTLEMENT, 0 STRATEGYID, SUBPRODUCT PRODUCT_CODE, CONTRACTSTRUCTURE, WORKFLOW, '' INITIAL_EXCHANGE, '' CASHFLOWGENERATION, '' EARLYTERMINATION, BOOKID, deal_location_code, DEPOSITORY, '' DELIVERY_MODE, DELIVERY_MODE_CODE, EXCHANGECODE, PORTCODE, TRANSACTIONTYPECODE TRANSACTION_TYPE_CODE, PAYMENTMODE1, BANKCODE1, PAYMENTMODE2, BANKCODE2, '' CP_PAYMENTMODE1, '' CP_BANKCODE1, SUBSIDIARYCODE, COUNTERCODE, '' COUNTERPARTY_DEALER, ASSETCLASS, currency CONSCURRENCY, NOSTRO_REF_NO, NOSTRODATE, REFERENCE_NO, RESTRUCTURE_CONTRACTCODE, ROLLOVER_CONTRACTCODE, BRANCH_REF_NO, CURRNAME, '' BORROW_TERM, BENCHMARKID, 0 PARVALUE, 0 OFFERINGPRICE, '' INTERESTMODE, INTEREST, MARKUP, DAYCOUNT, INTERESTDIRECTION, 0 PAYMENTFREQ, 0 RESETFREQ, '' RESETDATE, DISCOUNTCURVE, 0 COUPYEAR, DEALSOURCE, AMOUNT, QUANTITY, RATE, PRODUCTDESC, BROKER_NAME, BROKERAGEBANKCODE, BROKERAGEBANKNAME, BROKERAGE_AC, '' LOAN_DESCRIPTION, FACEVALUE, ISINO_CODE, SECURITYSYMBOL, 0 INTEREST_TAX_CAT_CODE, PRODUCT1, PCHARGERATE, PCHARGEAMT, 0 XIRRVALUE, '' CUSTOM_CONTRACTCODE, 0 TERMVALUE, '' ACCOUNTINGTYPE, '' REPAY_COMMENCEMENT_DATE, 0 LRN_NUMBER, 0 CUSTOM_PENALTYRATE, 0 LGBG_NUMBER, '' SUPPLIER, '' VESSEL_NAME, 0 CHARGES_PAID_TILL, '' LATEST_DATE_OF_SHIPMENT, '' PAYMENT_TERMS, 0 ORIGINAL_AMOUNT, 0 COMMISSION_PERCENTAGE, REMARKS REMARK, DEAL_REMARKS, EMAIL_STATUS, AUID, MATDATE MATURITY, INDEX_RATIO, Nvl(ORDER_STATUS, 'Order Pending') ORDER_STATUS, To_Char(order_conf_date, 'dd/MM/yyyy hh24:mi:ss') AS order_conf_date, order_conf_by, Nvl(RECON_STATUS, 'Unreconciled') RECON_STATUS, decode(upper(RECON_STATUS), 'RECONCILED', '', RECON_REMARKS) RECON_REMARKS, FD_NUMBER, FD_INTEREST_RATE, FD_TENOR, FD_AMOUNT, FD_AMOUNT_PER, (
													SELECT descr
													FROM default_static_table
													WHERE code = '365' AND module_name = 'asba_fd_daycount'
													) FD_DAY_COUNT, FD_INTEREST, decode(Nvl(final_price, 1), 0, 'F', 'T') FINAL_PRICE, issuer, exchange, netrate, netamount, bsr_code, lotsize, noofcontracts, underlying1 derivative_underlying, sl_consideration, active_status, nominal_price, deal_purpose, Nvl(reporting_asset_class, ASSETCLASS) REPORTING_ASSET_CLASS, bsrnumber, dept_name, Nvl(stt, 0) stt, brokerage_amount, dealerbook, iobj, sectorname, payment_mode, 'TRUE' display_auth_info, decode(transactiontypecode, 5001, 'FALSE', Upper('TRUE')) printdealticket, primarymarkettype, acc_interest, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, Theirbankname, country, settleflag, reversalstatus, type, listed
											FROM (
												SELECT redemption_premium, secdescription, subsidiaryname, bookname, portfolio, Decode(Lower(assetclass), 'equity', Decode(security_desc, '1MF', 'Mutual Funds', assetclass), assetclass) assetclass, NVL(decode(lower(Product), 'loan', decode(interestdirection, '1', 'Lending', '-1', 'Borrowing'), Product), 'Others') product, SubProduct, transactiontype, Currency, Contractcode, decode(optional04, 'Security Out', 'Security Out', 'Security In', 'Security In', Decode(transaction_type, '17', 'Disburse', transaction_type)) transaction_type, ProductDesc, tradedate, valuedate, Quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, facevalue, consideration, optiontype, style, folionumber, Counterparty, Traderid, Agency1, Bankname1, Account1, Agency2, Bankname2, Account2, Their_Agency1, Theirbankname, Their_Account1, Their_Agency2, Their_bankname2, Their_Account2, CounterPartyBicCode, BankBicCode1, BankBicCode2, TheirBankBicCode1, broker_name, BrokerageBankName, Brokerage_Ac, DealType, branch_ref_no, Reference_No, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, nostro_ref_no, nostrodate, regionname, country, city, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, remarks, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, legtype, interestdirection, interest, markup, benchmarkid, discountcurve, paymentFrequency, daycount, resetfreq resetfrequency, rangebarriers, begn_stub begin_stub, end_stub, frn_cap, frn_flr, notionalsteprule, taxamt, chargesamt, branchcode, upperbarrier, lowerbarrier, averageoption, exchangecode, deletionstatus, transactiontypecode, Nvl(securitysymbol, contractcode) securitysymbol, product_type, security_desc, underlying, bookid, posdealno, pos_portfolio, regioncode, subcode, pcode, loccode, countrycode, workflowcode, authorisation, position, mtmmethod, costingmethod, portcode, matdate, countercode, Brokeragebank BrokeragebankCode, brokercode, bankcode1, bankcode2, their_bankcode1, issuer, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, dealno, groupdealno, workflow, curr1, curr2, branchname, tradetype, currname, exchange, Term, brokeragedate, brokerage_curr, nvl(brokerage, 0) brokerage, category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, rating, rating1, counterparty_group, issuer_groupname, sector, security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, Decode(lower(assetclass), 'equity', assetclass, 'mutual funds', assetclass, product) product1, loan_desc, enddate, startdate, isino_code, isfmp, trust_deed, rating_agency, rating_agency1, is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt CPCharges, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, bsr_code, netrate, netamount, lotsize, noofcontracts, underlying1, sl_consideration, active_status, nominal_price, deal_purpose, reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, sectorname, payment_mode, primarymarkettype, settleflag, reversalstatus, type, listed
												FROM (
													SELECT s.*, workflow, t.assetclass, transactiontype, workflowcode, authorisation, position, prefix, t.mtmmethod mtmmethod, costingmethod, osContract.redemption_premium, osContract.description secdescription, contractcode, portcode, deletionstatus, oscontract.transactiontypecode, tradedate, Product, transaction_type, SubProduct, Currency, underlying, valuedate, matdate, quantity, Rate, YIELD, PRICE, ACC_INTEREST, sl_yield, sl_price, sl_acc_int, repo_rate, Amount, withholdingtax, consideration, reference_no, restructure_Contractcode, rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, oscontract.dealno, groupdealno, security_desc, product_type, cm.compname Counterparty, cm.BicCode CounterPartyBicCode, pm1.payment_mode Agency1, cm1.compname Bankname1, account1, cm1.BicCode BankBicCode1, cm2.BicCode BankBicCode2, pm2.payment_mode Agency2, cm2.compname Bankname2, account2, pm3.payment_mode Their_Agency1, cm3.compname Theirbankname, their_account1, pm4.payment_mode Their_Agency2, cm7.compname Their_bankname2, their_account2, cm4.compname broker_name, cm3.BicCode TheirBankBicCode1, DealType, optional01, optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, nostrodate, nostro_ref_no, globalcurr, globalcurrrate, globalcurramt, localcurr, localcurrrate, localcurramt, groupcurr, groupcurramt, groupcurrrate, authorisationstatus, authstatusby, authstatuson, authstatusremarks, confirmationstatus, confstatusby, confstatuson, confstatusremarks, optiontype, style, exchange, oscontract.branchcode, branch_ref_no, folionumber, interest, markup, benchmarkid, discountcurve, daycount, resetfreq, rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, notionalsteprule, countercode, agency1 agency1Code, bankcode1, agency2 agency2code, bankcode2, their_bankcode1, oscontract.exchangecode, dealno posdealno, portfolio Pos_portfolio, traderid, securitysymbol, averageoption, lowerbarrier, upperbarrier, chargesamt, taxamt, pymtfreq paymentFrequency, interestdirection, legtype, ProductDesc, oscontract.facevalue facevalue, Brokercode, Brokeragedate, Brokerage_Curr, Brokerage, Brokeragebank, cm6.Compname BrokerageBankName, Brokerage_Ac, osContract.issuer, curr1, curr2, cm5.compname branchname, t.tradetype tradetype, currname, Term, cm.categorycode category, spotrate, swappts, dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating, 'NONE') rating, nvl(rating1, 'NONE') rating1, cm.groupcode counterparty_group, cm8.issuer_group issuer_groupname, cm8.sector sector, symbolcategory security_type, subsidiarycode, custdealtype, accruedinterest, pchargerate, pchargeamt, loan_desc, isino_code, startdate, enddate, isfmp, trust_deed, rating_agency, rating_agency1, osContract.is_taxable, deal_remarks, email_status, trans_mis_category, sttchargeamt, SLB_DAYS_TO_MATURITY, SLB_MATURITY_DATE, SLB_MARGIN_PERC, SLB_MARGIN_AMOUNT, SLB_FEES_PER_UNIT, SLB_FEES_RECEIVED, SLB_YIELD, SLB_WAC, SLB_PROFIT_LOSS, securitytaxamt, agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, osContract.depository, bankcurr, delivery_mode_code, paymentmode1, paymentmode2, osContract.branch, yieldto, contract_wac, contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, cm8.bsr_code bsr_code, netrate, netamount, oscontract.lotsize, oscontract.noofcontracts, underlying1, sl_consideration, oscontract.active_status active_status, nominal_price, deal_purpose, ds.reporting_asset_class, bsrnumber, dept_name, stt, brokerage_amount, dealerbook, DEALSOURCE, iobj, oscontract.sectorname, oscontract.payment_mode, primarymarkettype, oscontract.settleflag settleflag, Nvl(reversalstatus, 'F') reversalstatus, TYPE, oscontract.listed
													FROM (
														SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, valuedate, expirydate matdate, traderid, countercode, amt1 quantity, strikerate rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amt2 amount, 0 WITHHOLDINGTAX, ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, agency2, bankcode2, account2, '' their_agency1, their_bankcode1, their_account1, '' their_agency2, their_bankcode1 their_bankcode2, their_account1 their_account2, optiontype, style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, upperbarrier, lowerbarrier, averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, assetclass product_type, underlyingtype security_desc, underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, Nvl(DealType, 'Others') DealType, curr1, curr2, curr1 currname, '' Term, category, spotrate, swappts, dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amt1 amount_leg1, amt1 qty_leg1, strikerate price_leg1, 0 yield_leg1, amt2 principal, '' deal_location_code, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag, reversalstatus, product_code TYPE, 1 listed
														FROM fxmaster
														WHERE nvl(deletionstatus, 'ND') <> 'D'
														
														UNION ALL
														
														SELECT nvl(redemption_premium, 0) redemption_premium, s.description, Decode(Lower(product), 'security', Decode(washrate - price_leg1, 0, 'Regular', Decode(Sign(washrate - price_leg1), 1, 'Discounted', - 1, 'Premium')), 'Reg') custdealtype, subsidiarycode, bookid, c.portcode, Assetclass, product, subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, issdate valuedate, CASE WHEN transaction_type_code IN (90, 91, 329, 330) THEN sl_date ELSE enddate END matdate, traderid, countercode, qty_leg1 quantity, To_Number(Decode(Discounted, 'T', Nvl(Yield_Leg1, 0), Nvl(interest, 0))) rate, To_Number(Nvl(YIELD_LEG1, 0)) YIELD, To_Number(Nvl(PRICE_LEG1, 0)) PRICE, To_Number(Nvl(ACC_INTEREST_LEG1, 0)) ACC_INTEREST, To_Number(Nvl(sl_yield, 0)) sl_yield, To_Number(Nvl(sl_price, 0)) sl_price, To_Number(Nvl(sl_acc_int, 0)) sl_acc_int, To_Number(Nvl(repo_rate, 0)) repo_rate, principal amount, WITHHOLDINGTAX, '' ProductDesc, amount_leg1 facevalue, decode(Lower(product), 'security', decode((
																		SELECT upper(PARAMVALUE)
																		FROM params
																		WHERE upper(PARAMNAME) = 'SETTLEMENT_ON'
																		), 'NET CONSIDERATION', post_consideration, consideration), consideration) AS consideration, decode(s.currency, '', c.currency, s.currency) currency, paymentmode1 agency1, bankcode1, account1, paymentmode2 agency2, bankcode2, account2, cp_paymentmode1 their_agency1, cp_bankcode1 their_bankcode1, cp_account1 their_account1, cp_paymentmode2 their_agency2, cp_bankcode2 their_bankcode2, cp_account2 their_account2, '' optiontype, '' style, '' folionumber, interestmode legTYPE, interestdirection, interest, markup, benchmarkid, discountcurve, coupyear pymtfreq, daycount, frn_reset_unit resetfreq, c.rangebarriers, begn_stub, end_stub, frn_cap, frn_flr, c.notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, CASE WHEN transaction_type_code IN (18, 19, 20, 21) THEN (
																			SELECT DISTINCT optional02
																			FROM contractmaster
																			WHERE contractcode = c.refcontractno AND transaction_type_code IN (16, 17)
																			) ELSE optional02 END optional02, optional03, optional04, optional05, cm_optional02, cm_optional03, ContractStructure, remarks, refcontractno reference_no, restructure_ref_code restructure_Contractcode, rollover_ref_no rollover_contractcode, nvl(available_for_settlement, 'T') available_for_settlement, branch branchcode, branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, decode(lower(product), 'swaps', nvl(s.localcurr, c.localcurr), c.localcurr), decode(lower(product), 'swaps', nvl(s.localcurrrate, c.localcurrrate), c.localcurrrate), decode(lower(product), 'swaps', nvl(s.localcurramt, c.localcurramt), c.localcurramt), decode(lower(product), 'swaps', nvl(s.globalcurr, c.globalcurr), c.globalcurr), decode(lower(product), 'swaps', nvl(s.globalcurrrate, c.globalcurrrate), c.globalcurrrate), decode(lower(product), 'swaps', nvl(s.globalcurramt, c.globalcurramt), c.globalcurramt), decode(lower(product), 'swaps', nvl(s.groupcurr, c.groupcurr), c.groupcurr), decode(lower(product), 'swaps', nvl(s.groupcurrrate, c.groupcurrrate), c.groupcurrrate), decode(lower(product), 'swaps', nvl(s.groupcurramt, c.groupcurramt), c.groupcurramt), to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, s.securitysymbol, product_type, s.security_desc, optional01 underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, Nvl(cm.compname, cm1.compname) AS issuer, Nvl(cm.compcode, cm1.compcode) AS issuercode, Nvl(DealType, 'Others') DealType, c.currency curr1, c.currency curr2, c.currency currname, borrow_term Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, secured, localcurrfv, globalcurrfv, groupcurrfv, nvl(rating1, 'NONE') rating, nvl(rating2, 'NONE') rating1, accruedinterest, c.penaltychargerate pchargerate, c.penaltychargeamount pchargeamt, Decode(Lower(product), 'security', s.security_desc, contract.loan_desc) loan_desc, enddate, startdate, isino_code, 'F' isfmp, c.sn_code trust_deed, ra1.ratingagency rating_agency, ra2.ratingagency rating_agency1, cm1.is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, to_date('') agm_date, index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, nvl(sl_consideration, 0), 1 active_status, nominal_price, descr deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, TYPE, Decode(s.listed, 'True', 1, 'False', 0, 0) listed
														FROM contractmaster c, secmast s, ratingagency ra1, ratingagency ra2, dealerwiseprofitability dl, (
																SELECT compcode, compname
																FROM companymaster
																) cm, (
																SELECT compcode, compname, is_taxable
																FROM companymaster
																) cm1, (
																SELECT c.contractcode ccode, c1.loan_description loan_desc
																FROM contractmaster c, contractmaster c1
																WHERE c.refcontractno = c1.contractcode
																) contract, (
																SELECT code, descr, static_value
																FROM default_static_table
																WHERE MODULE_NAME = 'REVAL_PURPOSE'
																ORDER BY To_Number(static_value)
																) d
														WHERE c.contractcode = contract.ccode(+) AND c.purpose_code = d.code(+) AND Decode(Lower(product), 'security', c.security_desc, 'loan', nvl(refcontractno, c.contractcode), c.contractcode) = s.contractcode(+) AND cm.compcode(+) = s.issuer AND cm1.compcode(+) = countercode AND nvl(deletionstatus, 'ND') <> 'D' AND s.agency1_code = ra1.ratingagency_no(+) AND s.agency2_code = ra2.ratingagency_no(+) AND c.transaction_type_code NOT IN (300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324) AND dl.portcode(+) = c.portcode AND To_Char(dl.code(+)) = To_Char(c.dealerbook) AND dl.asset_class_code(+) = 2
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Mutual Fund' product, securitytype subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(type_name), 'CLOSE ENDED', matdate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, scheme_code securitysymbol, market product_type, mf.scheme_name security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scheme_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_number isino_code, nvl(isfmp, 'F') isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, mf.mis_category trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, descr deal_purpose, '' bsrnumber, dept_name, 0 stt, 0 BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, mf.iobj, sc.sectorname, payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, 'MF' TYPE, listed
														FROM mutualfund_transact mt, mutualfundmaster mf, companymaster cm, ratingmaster rm, ratingagency ra, companymaster ig, sectormaster sc, dealerwiseprofitability dl, paymentmode pm, (
																SELECT code, descr, static_value
																FROM default_static_table
																WHERE MODULE_NAME = 'REVAL_PURPOSE'
																ORDER BY To_Number(static_value)
																) d
														WHERE mt.product = cm.compcode AND mt.subproduct = mf.scheme_code AND (assetclass = 'Mutual Funds' OR (assetclass = 'Equity' AND etf_traded = 1)) AND nvl(deletionstatus, 'ND') <> 'D' AND rm.serialno(+) = mf.rating_no1 AND mf.ratingagency_no = ra.ratingagency_no(+) AND mf.fund = ig.compcode(+) AND ig.sector = sc.SECTORCODE(+) AND mt.purpose_code = d.code(+) AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 5 AND pm.pay_mode_code = mt.payment_mode_code
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, mt.portcode, Assetclass, 'Equity' product, 'Equity' subproduct, Decode(optional01, 'Security In', 'Security In', transaction_type) transaction_type, mt.contractcode contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.scrip_code securitysymbol, market product_type, mf.scrip_name security_desc, subproduct underlying, mt.brokercode brokercode, brokeragedate, brokerage_curr, dealcharges.BROKERAGE_AMOUNT brokerage, brokeragebank, brokerage_ac, ig.compname issuer, nvl(ig.compcode, '') issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, mf.isin_no isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, mf.dept_code depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, Nvl(dealcharges.net_rate, Nvl(mt.netrate, 0)) netrate, Nvl(dealcharges.net_amount, 0) netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, mf.active_status, 0 nominal_price, '' deal_purpose, bm.bsrnumber, dept_name, dealcharges.stt stt, dealcharges.BROKERAGE_AMOUNT, dl.dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, 'EQ' TYPE, listed
														FROM mutualfund_transact mt, equitymaster mf, ratingagency ra, companymaster cm, companymaster ig, brokerage_master bm, dealerwiseprofitability dl, (
																SELECT CONTRACTCODE, STT, BROKERAGE_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN (((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) + STT) WHEN TRANSACTION_TYPE_CODE = 305 THEN (((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1) - STT) WHEN TRANSACTION_TYPE_CODE = 192 THEN ((PRICE_LEG1 * QTY_LEG1) + (BROKERAGE_AMOUNT + STT)) WHEN TRANSACTION_TYPE_CODE = 204 THEN ((PRICE_LEG1 * QTY_LEG1) - (BROKERAGE_AMOUNT + STT)) END AS NET_AMOUNT, CASE WHEN TRANSACTION_TYPE_CODE = 304 THEN ((((PRICE_LEG1 + (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 WHEN TRANSACTION_TYPE_CODE = 305 THEN ((((PRICE_LEG1 - (BROKERAGE_AMOUNT / QTY_LEG1)) * QTY_LEG1))) / QTY_LEG1 END AS NET_RATE, (BROKERAGE_AMOUNT / QTY_LEG1) B_UNIT
																FROM (
																	SELECT CONTRACTCODE, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_STT_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', CHARGE_AMOUNT, 'STT_EQ_PUR', charge_amount, 'STT_EQ_SALE', charge_amount, 0)) AS STT, SUM(DECODE(paramname, 'BROKER_CHARGE_EVENT_ORDER_PUR', CHARGE_AMOUNT, 'BROKER_CHARGE_EVENT_ORDER_SALE', CHARGE_AMOUNT, 'BROKER_CHARGE_EQ_PUR', charge_amount, 'BROKER_CHARGE_EQ_SALE', charge_amount, 0)) AS BROKERAGE_AMOUNT, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
																	FROM (
																		SELECT dc.CONTRACTCODE, dc.EVENT_CHARGE_CODE, dc.CHARGE_AMOUNT, MT.QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE, p.paramname, p.paramvalue
																		FROM DEAL_CHARGES DC, MUTUALFUND_TRANSACT MT, params p
																		WHERE DC.CONTRACTCODE = MT.CONTRACTCODE AND p.paramvalue(+) = dc.event_charge_code AND p.paramname IN ('BROKER_CHARGE_EVENT_ORDER_STT_PUR', 'BROKER_CHARGE_EVENT_ORDER_PUR', 'BROKER_CHARGE_EVENT_ORDER_SALE', 'BROKER_CHARGE_EVENT_ORDER_STT_SALE', 'STT_EQ_PUR', 'STT_EQ_SALE', 'BROKER_CHARGE_EQ_PUR', 'BROKER_CHARGE_EQ_SALE') AND EVENT_CHARGE_CODE IN (p.paramvalue)
																		)
																	GROUP BY CONTRACTCODE, QTY_LEG1, PRICE_LEG1, TRANSACTION_TYPE_CODE
																	)
																) dealcharges
														WHERE mt.product = cm.compcode AND mt.subproduct = mf.scrip_code AND Lower(assetclass) = 'equity' AND nvl(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND mt.transaction_type_code NOT IN (207) AND dealcharges.contractcode(+) = mt.contractcode AND mf.issuer = ig.compcode(+) AND mt.brokercode = bm.brokercode(+) AND mt.exchangecode = bm.exchange_code(+) AND bm.asset_class_code(+) = 7 AND bm.BR_WORKFLOWCODE(+) = 27 AND dl.portcode(+) = mt.portcode AND To_Char(dl.code(+)) = To_Char(mt.dealerbook) AND dl.asset_class_code(+) = 7
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.profit_loss SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, mf.product TYPE, 1 listed
														FROM mutualfund_transact mt, exchangetradedderivatives mf, companymaster cm, (
																SELECT SCRIP_NAME, SCRIP_CODE, ISSUER
																FROM equitymaster
																
																UNION ALL
																
																SELECT INDEX_NAME, INDEX_NAME, (
																		SELECT compcode
																		FROM companymaster
																		WHERE compname = 'NONE' AND rownum = 1
																		) ISSUER
																FROM index_master
																) eq, workflow ass, dealsymbol DE
														WHERE eq.issuer = cm.compcode AND eq.scrip_code = mf.underlying AND AsS.workflowcode = mf.workflow AND DE.transactiontypecode = mT.transaction_type_code AND DE.MARKETSYMBOL = mf.PRODUCT AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D'
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, SLB.SECURITYSYMBOL AS product, scrip_name subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, value_date_leg1 matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, MT.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, contractcode securitysymbol, market product_type, '' security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, MT.currency curr1, MT.currency curr2, MT.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, To_Char(rating_no1) rating, To_Char(rating_no1) rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, scrip_name loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, ra.ratingagency rating_agency, ra.ratingagency rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, 'EQ' type, 0 listed
														FROM mutualfund_transact mt, SLBMASTER SLB, equitymaster mf, ratingagency ra, companymaster cm
														WHERE 1 = 1 AND (mt.product = cm.compcode(+) AND mt.product = SLB.SECURITYSYMBOL(+)) AND MT.SUBPRODUCT = SLB.UNDERLYING(+) AND mt.subproduct = mf.scrip_code(+) AND MT.ASSETCLASS = 'Equity' AND NVL(deletionstatus, 'ND') <> 'D' AND mf.ratingagency_no = ra.ratingagency_no(+) AND (CONTRACTCODE LIKE 'SLB%' OR CONTRACTCODE LIKE 'SBT%')
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, '' custdealtype, c.subsidiarycode, bookid, portcode, ird.Assetclass, AsS.workflow product, DE.SYMBOL subproduct, transaction_type, c.contractcode, dealno, groupdealno, c.tradedate, matdate valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, c.currency, '' agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, bankcode1 their_bankcode1, account1 their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, c.remarks, refcontractno reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, c.localcurr, c.localcurrrate, c.localcurramt, c.globalcurr, c.globalcurrrate, c.globalcurramt, c.groupcurr, c.groupcurrrate, c.groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, ird.contractcode securitysymbol, 'SECONDARY' product_type, ird.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, c.currency curr1, c.currency curr2, c.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, c.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(c.email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, index_ratio, auid, post_accruedinterest, posttax_yield, posttax_price, post_acc_interest_leg1, post_consideration, amount_leg1, qty_leg1, price_leg1, yield_leg1, principal, deal_location_code, c.depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, paymentmode1, paymentmode2, c.branch, yieldto, nvl(contract_wac, 0) contract_wac, nvl(contract_revalwac, 0) contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, c.lotsize, c.noofcontracts, c.underlying underlying1, 0 sl_consideration, to_number(ird.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, ird.product type, 1 listed
														FROM contractmaster c, exchangetradedderivatives ird, companymaster cm, secmast eq, workflow ass, dealsymbol DE
														WHERE eq.issuer = cm.compcode AND eq.securitysymbol = ird.underlying AND c.REFCONTRACTNO = ird.contractcode AND AsS.workflowcode = ird.workflow AND DE.transactiontypecode = C.transaction_type_code AND DE.MARKETSYMBOL = ird.PRODUCT AND nvl(deletionstatus, 'ND') = 'ND'
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, subsidiarycode, bookid, portcode, Assetclass, product, subproduct, transactiontype, contractcode, dealno, groupdealno, tradedate, valuedate, valuedate matdate, traderid, countercode, quantity quantity, 1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, quantity amount, 0 WITHHOLDINGTAX, Product ProductDesc, 0 facevalue, 0 consideration, currency, paymentmode agency1, bankcode, account, '' agency2, '' bankcode2, '' account2, '' their_agency1, '' their_bankcode1, '' their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, '' folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_refno nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01, optional02, optional03, optional04, optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, remarks, reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, branch branchcode, branch_refno branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, '' exchangecode, deletionstatus, transactiontypecode, '' securitysymbol, '' product_type, '' security_desc, currency underlying, '' brokercode, valuedate brokeragedate, '' brokerage_curr, 0 brokerage, '' brokeragebank, '' brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, currency curr1, currency curr2, currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, 'NONE' rating, 'NONE' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, '' loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(email_status, 'Email Pending') email_status, '' trans_mis_category, 0 sttchargeamt, 0 AS SLB_DAYS_TO_MATURITY, TO_DATE('') AS SLB_MATURITY_DATE, 0 AS SLB_MARGIN_PERC, 0 AS SLB_MARGIN_AMOUNT, 0 AS SLB_FEES_PER_UNIT, 0 AS SLB_FEES_RECEIVED, 0 AS SLB_YIELD, 0 AS SLB_WAC, 0 AS SLB_PROFIT_LOSS, 0 securitytaxamt, To_Date('') agm_date, 0 index_ratio, 0 auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, 0 amount_leg1, 0 qty_leg1, 0 price_leg1, 0 yield_leg1, 0 principal, '' deal_location, '' depository, '' bankcurr, '' delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, 0 contract_wac, 0 contract_revalwac, '' order_status, to_date('') order_conf_date, '' order_conf_by, '' recon_status, '' recon_remarks, '' fd_number, 0 fd_interest_rate, 0 fd_tenor, 0 fd_amount, 0 fd_amount_per, '' fd_day_count, 0 fd_interest, 1 final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, '' primarymarkettype, '' settleflag, 'F' reversalstatus, 'NA' type, 0 listed
														FROM currentaccount
														WHERE nvl(deletionstatus, 'ND') <> 'D'
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, '' custdealtype, mt.subsidiarycode, bookid, portcode, mf.Assetclass, AsS.workflow product, DE1.SYMBOL subproduct, transaction_type, mt.contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, maturitydate matdate, traderid, countercode, qty_leg1 quantity, price_leg1 rate, 0 YIELD, 0 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, mf.settlementcurr currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' Contractstructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, mf.contractcode securitysymbol, market product_type, mf.description security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, mf.settlementcurr curr1, mf.settlementcurr curr2, mf.settlementcurr currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, mf.contractcode loan_desc, to_date('') enddate, to_date('') startdate, '' isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, amount_leg1, qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, mt.lotsize, mt.noofcontracts, mt.underlying underlying1, 0 sl_consideration, to_number(mf.active_status) active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, mf.product type, 1 listed
														FROM mutualfund_transact mt, exchangetradedderivatives mf, workflow ass, dealsymbol de, dealsymbol de1
														WHERE de.transactiontypecode IN (5001) AND de.symbol = mt.underlying AND de1.transactiontypecode = mt.transaction_type_code AND mt.subproduct = mf.contractcode AND nvl(deletionstatus, 'ND') <> 'D' AND AsS.workflowcode = mf.workflow
														
														UNION ALL
														
														SELECT 0 redemption_premium, '' description, 'Regular' custdealtype, mt.subsidiarycode, bookid, portcode, Assetclass, 'Mutual Fund' product, symbol subproduct, transaction_type, contractcode, dealno, groupdealno, tradedate, value_date_leg1 valuedate, Decode(Upper(OPENENDED), 'YES', maturitydate, value_date_leg1) matdate, traderid, countercode, qty_leg1 quantity, Price_leg1 rate, 0 YIELD, price_leg1 PRICE, 0 ACC_INTEREST, 0 sl_yield, 0 sl_price, 0 sl_acc_int, 0 repo_rate, amount_leg1 amount, 0 WITHHOLDINGTAX, SubProduct ProductDesc, 0 facevalue, 0 consideration, alt.currency, agency1, bankcode1, account1, '' agency2, '' bankcode2, '' account2, '' their_agency1, their_bankcode their_bankcode1, their_account their_account1, '' their_agency2, '' their_bankcode2, '' their_account2, '' optiontype, '' style, mt.folionumber, '' legTYPE, 0 interestdirection, '' interest, 0 markup, '' benchmarkid, '' discountcurve, 0 pymtfreq, 0 daycount, 0 resetfreq, '' rangebarriers, '' begn_stub, '' end_stub, 0 frn_cap, 0 frn_flr, '' notionalsteprule, nostrodate, nostro_ref_no, servicetaxamt taxamt, accountcharge chargesamt, optional01 optional01, optional02 optional02, optional03 optional03, optional04 optional04, optional05 optional05, '' cm_optional02, '' cm_optional03, '' ContractStructure, mt.remarks, ref_deal_ticket_no reference_no, '' restructure_Contractcode, '' rollover_contractcode, '' available_for_settlement, '' branchcode, '' branch_ref_no, authorisationstatus, authstatusby, authstatuson, authstatusremarks, Decode(Nvl(confirmationstatus, 'NC'), 'C', 'Confirmed', 'UnConfirmed') confirmationstatus, confstatusby, confstatuson, confstatusremarks, '' upperbarrier, '' lowerbarrier, '' averageoption, localcurr, localcurrrate, localcurramt, globalcurr, globalcurrrate, globalcurramt, groupcurr, groupcurrrate, groupcurramt, to_char(exchangecode) exchangecode, deletionstatus, transaction_type_code transactiontypecode, alt.securitysymbol securitysymbol, market product_type, alt.securitydesc security_desc, subproduct underlying, brokercode, brokeragedate, brokerage_curr, brokerage, brokeragebank, brokerage_ac, '' issuer, '' issuercode, 'Others' DealType, alt.currency curr1, alt.currency curr2, alt.currency currname, '' Term, '' category, 0 spotrate, 0 swappts, '' dealidentity, '' secured, 0 localcurrfv, 0 globalcurrfv, 0 groupcurrfv, '' rating, '' rating1, 0 accruedinterest, 0 pchargerate, 0 pchargeamt, alt.securitysymbol loan_desc, to_date('') enddate, to_date('') startdate, alt.isinnumber isino_code, 'F' isfmp, '' trust_deed, '' rating_agency, '' rating_agency1, '' is_taxable, deal_remarks, nvl(mt.email_status, 'Email Pending') email_status, '' trans_mis_category, sttchargeamt, mt.SLB_DAYS_TO_MATURITY, mt.SLB_MATURITY_DATE, mt.SLB_MARGIN_PERC, mt.SLB_MARGIN_AMOUNT, mt.SLB_FEES_PER_UNIT, mt.SLB_FEES_RECEIVED, mt.SLB_YIELD, mt.SLB_WAC, mt.SLB_PROFIT_LOSS, securitytaxamt, To_Date('') agm_date, 0 index_ratio, auid, 0 post_accruedinterest, 0 posttax_yield, 0 posttax_price, 0 post_acc_interest_leg1, 0 post_consideration, FACEVALUE_PU * qty_leg1 amount_leg1, decode(nvl(qty_leg1, 0), 0, ai_quantity, qty_leg1) qty_leg1, price_leg1, 0 yield_leg1, amount_leg1 principal, deal_location, '' depository, bankcurr, to_char(delivery_mode_code) delivery_mode_code, '' paymentmode1, '' paymentmode2, '' branch, '' yieldto, nvl(contract_wac, 0) contract_wac, 0 contract_revalwac, order_status, order_conf_date, order_conf_by, recon_status, recon_remarks, fd_number, fd_interest_rate, fd_tenor, fd_amount, fd_amount_per, fd_day_count, fd_interest, final_price, 0 netrate, 0 netamount, 0 lotsize, 0 noofcontracts, '' underlying1, 0 sl_consideration, 1 active_status, 0 nominal_price, '' deal_purpose, '' bsrnumber, '' dept_name, 0 stt, 0 BROKERAGE_AMOUNT, '' dealerbook, '' DEALSOURCE, '' iobj, '' sectorname, '' payment_mode, primarymarkettype, Nvl(contract_settle, 'NS') settleflag, reversalstatus, securitytype type, listed
														FROM mutualfund_transact mt, alternateinvestment alt, (
																SELECT marketsymbol, symbol
																FROM dealsymbol
																WHERE transactiontypecode = '1099999999'
																) d
														WHERE 1 = 1 AND alt.securitytype = d.marketsymbol AND mt.subproduct = alt.securitysymbol AND nvl(deletionstatus, 'ND') <> 'D'
														) oscontract, (
															SELECT a.assetclasscode, assetclass, w.workflowcode, workflow, markettype, workflowdesc, transactiontypecode, transactiontype, authorisation, position, prefix, mtmmethod, costingmethod, tradetype, uploadkey, Decode(transactiontypecode, 72, 'S', 'M') TransCurr
															FROM assetclass a, workflow w, transactiontype t
															WHERE a.assetclasscode = w.assetclasscode AND w.workflowcode = t.workflowcode
															) t, (
															SELECT subsidiaryname, bookname, portname portfolio, c.regioncode, regionname, description country, locname city, b.bookid, s.subsidiarycode subcode, portcode pcode, loccode, c.code countrycode, costing_policy
															FROM portmast p, bookmaster b, subsidiarymaster s, locations l, country c, regionmaster r
															WHERE p.bookid = b.bookid AND b.subsidiarycode = s.subsidiarycode AND s.city = loccode AND l.code = c.code AND c.regioncode = r.regioncode
															) s, companymaster cm, paymentmode pm1, companymaster cm1, paymentmode pm2, companymaster cm2, companymaster cm3, companymaster cm4, exchange e, companymaster cm5, CompanyMaster cm6, CompanyMaster cm7, paymentmode pm3, paymentmode pm4, company_group cg, issuer_group ig, companymaster cm8, dealsymbol ds, sectormaster sect
													WHERE 1 = 1 AND osContract.transactiontypecode = t.transactiontypecode AND nvl(deletionstatus, 'ND') <> 'D' AND s.pcode = osContract.portcode AND countercode = cm.compcode(+) AND cm.groupcode = cg.groupcode(+) AND oscontract.issuercode = cm8.compcode(+) AND cm8.issuer_group = ig.igroupcode(+) AND cm8.sector = sect.sectorname(+) AND agency1 = pm1.pay_mode_code(+) AND bankcode1 = cm1.compcode(+) AND agency2 = pm2.pay_mode_code(+) AND their_agency1 = pm3.pay_mode_code(+) AND their_agency2 = pm4.pay_mode_code(+) AND bankcode2 = cm2.compcode(+) AND their_bankcode1 = cm3.compcode(+) AND their_bankcode2 = cm7.compcode(+) AND brokercode = cm4.compcode(+) AND Brokeragebank = cm6.compcode(+) AND oscontract.exchangecode = e.exchangecode(+) AND oscontract.branchcode = cm5.compcode(+) AND upper(subproduct) = upper(ds.symbol(+)) AND Decode(oscontract.transactiontypecode, 17, 1004, 16, 1004, 18, 1004, 19, 1004, oscontract.transactiontypecode) = to_char(ds.transactiontypecode(+))
													)
												WHERE 1 = 1
												)
											ORDER BY dealno DESC
											) ConfDetails
										WHERE Trunc(TRADEDATE) BETWEEN '<%-ASONDATE%>' AND '<%-ASONDATE%>'
										) MessageGen
									WHERE 1 = 1
									) ML, (
										SELECT MessageId, userid, userterminal, filepath, filename, fileterminal, DATETIME
										FROM MessageStatus
										WHERE operation = 'INSERT'
										) MGL
								WHERE ML.MessageId = MGL.MessageId(+)
								)
							WHERE 1 = 1 AND Upper(Nvl(DealType, 'INTERBANK')) IN ('INTERBANK') AND trunc(tradedate) BETWEEN to_date('<%-ASONDATE%>', 'dd/MM/yyyy') AND to_date('<%-ASONDATE%>', 'dd/MM/yyyy')
							) MG
						WHERE Nvl(assetclass, 'Currency') IN ('Currency') AND Nvl(product, 'Outright') IN ('Outright')
						) main
					WHERE 1 = 1
					)
					GROUP BY agency1,msgstatus)
					GROUP BY agency1
					UNION 
					SELECT 0 cnt, 'CCIL' AGENCY1, 0 pending FROM dual
					UNION 
					SELECT 0 cnt, 'CLS' AGENCY1, 0 pending FROM dual
					UNION 
					SELECT 0 cnt, 'SWIFT' AGENCY1, 0 pending FROM dual
					)
					GROUP BY agency1`,
			"filter":["ASONDATE"]
				},
			"delete":{
				"source":``,
				"filter":[]
			}
		},
		{
			"collectionName":"fx_mirrorbalances",
			"notificationFilter":[],
			"create":{
			"source":`SELECT bankname || ' - ' || currency || ' - ' ||accountno descr,amount FROM (SELECT *
				FROM (
					SELECT subsidiaryname, bookname, bankname, accountno, currency, Sum(amount) amount, Decode(Sign(Sum(amount)), - 1, 'CR', 'DR') DRCR, localcurr, Sum(localcurramt) localcurramt, globalcurr, Sum(globalcurramt) globalcurramt, groupcurr, Sum(groupcurramt) groupcurramt, bankcode
					FROM (
						SELECT subsidiaryname, Bookname, BankName, Ac_No AccountNo, SettleCurr Currency, Sum(NetSettlementAmt) Amount, Decode(Sign(Sum(NetSettlementAmt)), - 1, 'CR', 'DR') DRCR, br_localcurr localcurr, Sum(br_localcurramt) LocalCurrAmt, br_globalcurr globalcurr, Sum(br_globalcurramt) globalcurramt, br_groupcurr groupcurr, Sum(br_groupcurramt) GroupCurrAmt, BankCode, description
						FROM (
							SELECT subsidiaryname, Bookname, CompName BankName, bt.settlementid, 0 settleamt, 1 settledrcr, bt.Currency settlecurr, '' eventid, bt.postingdate, bt.valuedate cms_valuedate, bt.bankcode, bt.ac_no, bt.currency, bt.drcr, bt.settlementamt, bt.adjustment, bt.netsettlementamt, bt.insttype, bt.instno, bt.dealer settl_dealer, bt.linkno, bt.settlementtype settletype, bt.tradetype, bt.description, bt.remarks, bt.reconstatus, bt.reconid, bt.recondate, bt.reconby, bt.reconremarks, bt.cms_optional01, bt.cms_optional02, bt.cms_optional03, bt.cms_optional04, bt.cms_optional05, bt.subsidiarycode, bt.netsettlementdrcr, bt.localcurr br_localcurr, bt.globalcurr br_globalcurr, bt.groupcurr br_groupcurr, bt.globalcurramt br_globalcurramt, bt.localcurramt br_localcurramt, bt.groupcurramt br_groupcurramt
							FROM cms_banktransaction bt, subsidiarymaster sm, companymaster cm, Bookmaster bk
							WHERE sm.subsidiarycode = bk.subsidiarycode AND bt.subsidiarycode = sm.subsidiarycode 
					  AND cm.CompCode = bt.BankCode AND bt.bookid = bk.bookid AND Decode(Nvl(bt.settlementtype, 'A'), 'M', Decode((
											SELECT Nvl(Cms_AuthStatus, 'N') Cms_AuthStatus
											FROM cms_banktransaction_ref
											WHERE Settlementid = bt.SettlementId
											), 'A', 1, 0), 1) = 1 AND bt.SettlementId IN (
									SELECT DISTINCT SettlementId
									FROM cms_banktransaction_ref
									) AND Trunc(bt.valuedate) <=  '<%-ASONDATE%>'
							)                                                                                                                                          
						GROUP BY subsidiaryname, Bookname, settlecurr, BankName, BankCode, ac_no, br_localcurr, br_globalcurr, br_groupcurr, description
						)
					GROUP BY subsidiaryname, bookname, bankname, accountno, currency, localcurr, globalcurr, groupcurr, bankcode
					ORDER BY bankname
					)
				WHERE 1 = 1 AND currency <> 'INR'
				ORDER BY Abs(amount) desc
				) WHERE ROWNUM <= 5`,
			"filter":["ASONDATE"]
			},
		"refresh":{
			"source":`SELECT bankname || ' - ' || currency || ' - ' ||accountno descr,amount FROM (SELECT *
				FROM (
					SELECT subsidiaryname, bookname, bankname, accountno, currency, Sum(amount) amount, Decode(Sign(Sum(amount)), - 1, 'CR', 'DR') DRCR, localcurr, Sum(localcurramt) localcurramt, globalcurr, Sum(globalcurramt) globalcurramt, groupcurr, Sum(groupcurramt) groupcurramt, bankcode
					FROM (
						SELECT subsidiaryname, Bookname, BankName, Ac_No AccountNo, SettleCurr Currency, Sum(NetSettlementAmt) Amount, Decode(Sign(Sum(NetSettlementAmt)), - 1, 'CR', 'DR') DRCR, br_localcurr localcurr, Sum(br_localcurramt) LocalCurrAmt, br_globalcurr globalcurr, Sum(br_globalcurramt) globalcurramt, br_groupcurr groupcurr, Sum(br_groupcurramt) GroupCurrAmt, BankCode, description
						FROM (
							SELECT subsidiaryname, Bookname, CompName BankName, bt.settlementid, 0 settleamt, 1 settledrcr, bt.Currency settlecurr, '' eventid, bt.postingdate, bt.valuedate cms_valuedate, bt.bankcode, bt.ac_no, bt.currency, bt.drcr, bt.settlementamt, bt.adjustment, bt.netsettlementamt, bt.insttype, bt.instno, bt.dealer settl_dealer, bt.linkno, bt.settlementtype settletype, bt.tradetype, bt.description, bt.remarks, bt.reconstatus, bt.reconid, bt.recondate, bt.reconby, bt.reconremarks, bt.cms_optional01, bt.cms_optional02, bt.cms_optional03, bt.cms_optional04, bt.cms_optional05, bt.subsidiarycode, bt.netsettlementdrcr, bt.localcurr br_localcurr, bt.globalcurr br_globalcurr, bt.groupcurr br_groupcurr, bt.globalcurramt br_globalcurramt, bt.localcurramt br_localcurramt, bt.groupcurramt br_groupcurramt
							FROM cms_banktransaction bt, subsidiarymaster sm, companymaster cm, Bookmaster bk
							WHERE sm.subsidiarycode = bk.subsidiarycode AND bt.subsidiarycode = sm.subsidiarycode 
					  AND cm.CompCode = bt.BankCode AND bt.bookid = bk.bookid AND Decode(Nvl(bt.settlementtype, 'A'), 'M', Decode((
											SELECT Nvl(Cms_AuthStatus, 'N') Cms_AuthStatus
											FROM cms_banktransaction_ref
											WHERE Settlementid = bt.SettlementId
											), 'A', 1, 0), 1) = 1 AND bt.SettlementId IN (
									SELECT DISTINCT SettlementId
									FROM cms_banktransaction_ref
									) AND Trunc(bt.valuedate) <=  '<%-ASONDATE%>'
							)                                                                                                                                          
						GROUP BY subsidiaryname, Bookname, settlecurr, BankName, BankCode, ac_no, br_localcurr, br_globalcurr, br_groupcurr, description
						)
					GROUP BY subsidiaryname, bookname, bankname, accountno, currency, localcurr, globalcurr, groupcurr, bankcode
					ORDER BY bankname
					)
				WHERE 1 = 1 AND currency <> 'INR'
				ORDER BY Abs(amount) desc
				) WHERE ROWNUM <= 5`,
			"filter":["ASONDATE"]
				},
			"update":{
			"source":`SELECT bankname || ' - ' || currency || ' - ' ||accountno descr,amount FROM (SELECT *
				FROM (
					SELECT subsidiaryname, bookname, bankname, accountno, currency, Sum(amount) amount, Decode(Sign(Sum(amount)), - 1, 'CR', 'DR') DRCR, localcurr, Sum(localcurramt) localcurramt, globalcurr, Sum(globalcurramt) globalcurramt, groupcurr, Sum(groupcurramt) groupcurramt, bankcode
					FROM (
						SELECT subsidiaryname, Bookname, BankName, Ac_No AccountNo, SettleCurr Currency, Sum(NetSettlementAmt) Amount, Decode(Sign(Sum(NetSettlementAmt)), - 1, 'CR', 'DR') DRCR, br_localcurr localcurr, Sum(br_localcurramt) LocalCurrAmt, br_globalcurr globalcurr, Sum(br_globalcurramt) globalcurramt, br_groupcurr groupcurr, Sum(br_groupcurramt) GroupCurrAmt, BankCode, description
						FROM (
							SELECT subsidiaryname, Bookname, CompName BankName, bt.settlementid, 0 settleamt, 1 settledrcr, bt.Currency settlecurr, '' eventid, bt.postingdate, bt.valuedate cms_valuedate, bt.bankcode, bt.ac_no, bt.currency, bt.drcr, bt.settlementamt, bt.adjustment, bt.netsettlementamt, bt.insttype, bt.instno, bt.dealer settl_dealer, bt.linkno, bt.settlementtype settletype, bt.tradetype, bt.description, bt.remarks, bt.reconstatus, bt.reconid, bt.recondate, bt.reconby, bt.reconremarks, bt.cms_optional01, bt.cms_optional02, bt.cms_optional03, bt.cms_optional04, bt.cms_optional05, bt.subsidiarycode, bt.netsettlementdrcr, bt.localcurr br_localcurr, bt.globalcurr br_globalcurr, bt.groupcurr br_groupcurr, bt.globalcurramt br_globalcurramt, bt.localcurramt br_localcurramt, bt.groupcurramt br_groupcurramt
							FROM cms_banktransaction bt, subsidiarymaster sm, companymaster cm, Bookmaster bk
							WHERE sm.subsidiarycode = bk.subsidiarycode AND bt.subsidiarycode = sm.subsidiarycode 
					  AND cm.CompCode = bt.BankCode AND bt.bookid = bk.bookid AND Decode(Nvl(bt.settlementtype, 'A'), 'M', Decode((
											SELECT Nvl(Cms_AuthStatus, 'N') Cms_AuthStatus
											FROM cms_banktransaction_ref
											WHERE Settlementid = bt.SettlementId
											), 'A', 1, 0), 1) = 1 AND bt.SettlementId IN (
									SELECT DISTINCT SettlementId
									FROM cms_banktransaction_ref
									) AND Trunc(bt.valuedate) <=  '<%-ASONDATE%>'
							)                                                                                                                                          
						GROUP BY subsidiaryname, Bookname, settlecurr, BankName, BankCode, ac_no, br_localcurr, br_globalcurr, br_groupcurr, description
						)
					GROUP BY subsidiaryname, bookname, bankname, accountno, currency, localcurr, globalcurr, groupcurr, bankcode
					ORDER BY bankname
					)
				WHERE 1 = 1 AND currency <> 'INR'
				ORDER BY Abs(amount) desc
				) WHERE ROWNUM <= 5`,
			"filter":["ASONDATE"]
				},
			"delete":{
				"source":``,
				"filter":[]
			}
		},
		{
			"collectionName":"fx_settlements",
			"notificationFilter":[],
			"create":{
			"source":`SELECT total.totaltrade "Trade(s) to be settled", total.AGENCY, pending.st "Settled trade(s)",pending.ag "Accounting Generated" FROM 
				(SELECT sum(totaltrade) totaltrade,agency FROM ((SELECT Count(*) totaltrade,payment_mode agency FROM (
				SELECT securitysymbol,pm.payment_mode FROM securityevents se,fxmaster fx,paymentmode pm WHERE Trunc(actualdate) = Trunc(sysdate) AND securitysymbol LIKE 'OUT%'
				AND fx.contractcode = se.securitysymbol AND pm.pay_mode_code = fx.agency1 
				GROUP BY securitysymbol,pm.payment_mode) GROUP BY payment_mode)
				UNION
				SELECT 0 totaltrade, 'CCIL' AGENCY
					FROM dual
					
					UNION
					
					SELECT 0 totaltrade, 'CLS' AGENCY
					FROM dual                                             
					
					UNION
					
					SELECT 0 totaltrade, 'SWIFT' AGENCY
					FROM dual   )

				GROUP BY agency) total
				,(SELECT Sum(st) st,agency,Sum(ag) ag FROM ((select Count(*) st,payment_mode agency
				,sum(deal_no) ag FROM (
				SELECT pm.payment_mode,REF.contractcode,CASE WHEN Count(deal_no)>0 THEN 1 ELSE 0 END AS deal_no FROM cms_banktransaction cms,cms_banktransaction_ref ref
				,paymentmode pm, ac_voucher_master vm 
				WHERE
				1=1
				AND REF.settlementid = cms.settlementid
				AND To_Char(cms.settlementid) = To_Char(vm.deal_no(+)) 
				AND Trunc(cms.valuedate) = To_Date('<%-ASONDATE%>')
				AND To_char(cms.paymentmode) = To_char(pm.pay_mode_code)
				and ref.contractcode like '%OUT%'
				GROUP BY contractcode,payment_mode)
				GROUP BY payment_mode)
				UNION
				SELECT 0 st, 'CCIL' AGENCY,0 ag
					FROM dual
					
					UNION
					
					SELECT 0 st, 'CLS' AGENCY,0 ag
					FROM dual                                             
					
					UNION
					
					SELECT 0 st, 'SWIFT' AGENCY,0 ag
					FROM dual  ) 
				  GROUP BY agency ) pending
				WHERE pending.agency=total.agency`,
			"filter":["ASONDATE"]
			},
		"refresh":{
			"source":`SELECT total.totaltrade "Trade(s) to be settled", total.AGENCY, pending.st "Settled trade(s)",pending.ag "Accounting Generated" FROM 
				(SELECT sum(totaltrade) totaltrade,agency FROM ((SELECT Count(*) totaltrade,payment_mode agency FROM (
				SELECT securitysymbol,pm.payment_mode FROM securityevents se,fxmaster fx,paymentmode pm WHERE Trunc(actualdate) = Trunc(sysdate) AND securitysymbol LIKE 'OUT%'
				AND fx.contractcode = se.securitysymbol AND pm.pay_mode_code = fx.agency1 
				GROUP BY securitysymbol,pm.payment_mode) GROUP BY payment_mode)
				UNION
				SELECT 0 totaltrade, 'CCIL' AGENCY
					FROM dual
					
					UNION
					
					SELECT 0 totaltrade, 'CLS' AGENCY
					FROM dual                                             
					
					UNION
					
					SELECT 0 totaltrade, 'SWIFT' AGENCY
					FROM dual   )

				GROUP BY agency) total
				,(SELECT Sum(st) st,agency,Sum(ag) ag FROM ((select Count(*) st,payment_mode agency
				,sum(deal_no) ag FROM (
				SELECT pm.payment_mode,REF.contractcode,CASE WHEN Count(deal_no)>0 THEN 1 ELSE 0 END AS deal_no FROM cms_banktransaction cms,cms_banktransaction_ref ref
				,paymentmode pm, ac_voucher_master vm 
				WHERE
				1=1
				AND REF.settlementid = cms.settlementid
				AND To_Char(cms.settlementid) = To_Char(vm.deal_no(+)) 
				AND Trunc(cms.valuedate) = To_Date('<%-ASONDATE%>')
				AND To_char(cms.paymentmode) = To_char(pm.pay_mode_code)
				and ref.contractcode like '%OUT%'
				GROUP BY contractcode,payment_mode)
				GROUP BY payment_mode)
				UNION
				SELECT 0 st, 'CCIL' AGENCY,0 ag
					FROM dual
					
					UNION
					
					SELECT 0 st, 'CLS' AGENCY,0 ag
					FROM dual                                             
					
					UNION
					
					SELECT 0 st, 'SWIFT' AGENCY,0 ag
					FROM dual  ) 
				  GROUP BY agency ) pending
				WHERE pending.agency=total.agency`,
			"filter":["ASONDATE"]
				},
			"update":{
			"source":`SELECT total.totaltrade "Trade(s) to be settled", total.AGENCY, pending.st "Settled trade(s)",pending.ag "Accounting Generated" FROM 
				(SELECT sum(totaltrade) totaltrade,agency FROM ((SELECT Count(*) totaltrade,payment_mode agency FROM (
				SELECT securitysymbol,pm.payment_mode FROM securityevents se,fxmaster fx,paymentmode pm WHERE Trunc(actualdate) = Trunc(sysdate) AND securitysymbol LIKE 'OUT%'
				AND fx.contractcode = se.securitysymbol AND pm.pay_mode_code = fx.agency1 
				GROUP BY securitysymbol,pm.payment_mode) GROUP BY payment_mode)
				UNION
				SELECT 0 totaltrade, 'CCIL' AGENCY
					FROM dual
					
					UNION
					
					SELECT 0 totaltrade, 'CLS' AGENCY
					FROM dual                                             
					
					UNION
					
					SELECT 0 totaltrade, 'SWIFT' AGENCY
					FROM dual   )

				GROUP BY agency) total
				,(SELECT Sum(st) st,agency,Sum(ag) ag FROM ((select Count(*) st,payment_mode agency
				,sum(deal_no) ag FROM (
				SELECT pm.payment_mode,REF.contractcode,CASE WHEN Count(deal_no)>0 THEN 1 ELSE 0 END AS deal_no FROM cms_banktransaction cms,cms_banktransaction_ref ref
				,paymentmode pm, ac_voucher_master vm 
				WHERE
				1=1
				AND REF.settlementid = cms.settlementid
				AND To_Char(cms.settlementid) = To_Char(vm.deal_no(+)) 
				AND Trunc(cms.valuedate) = To_Date('<%-ASONDATE%>')
				AND To_char(cms.paymentmode) = To_char(pm.pay_mode_code)
				and ref.contractcode like '%OUT%'
				GROUP BY contractcode,payment_mode)
				GROUP BY payment_mode)
				UNION
				SELECT 0 st, 'CCIL' AGENCY,0 ag
					FROM dual
					
					UNION
					
					SELECT 0 st, 'CLS' AGENCY,0 ag
					FROM dual                                             
					
					UNION
					
					SELECT 0 st, 'SWIFT' AGENCY,0 ag
					FROM dual  ) 
				  GROUP BY agency ) pending
				WHERE pending.agency=total.agency`,
			"filter":["ASONDATE"]
				},
			"delete":{
				"source":``,
				"filter":[]
			}
		},
		{
			"collectionName":"fis_trade_summary",
			"notificationFilter":[],
			"create":{
				"source":`SELECT * FROM
					(SELECT 'Total Trades' "Total Trades", Count(*) total_cnt FROM contractmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Upper(assetclass) IN ('INTEREST RATE','COMMODITY','CAPITAL') AND InStr(portcode,'.') = 0
					),
					(SELECT 'Authorised deals' "Authorised deals", Count(*) auth_cnt FROM contractmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Upper(assetclass) IN ('INTEREST RATE','COMMODITY','CAPITAL') AND InStr(portcode,'.') = 0
					AND Nvl(authorisationstatus,'NA') = 'A'),
					(
					SELECT 'UnAuthorised deals' "UnAuthorised deals", Count(*) unauth_cnt FROM contractmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Upper(assetclass) IN ('INTEREST RATE','COMMODITY','CAPITAL') AND InStr(portcode,'.') = 0
					AND Nvl(authorisationstatus,'NA') = 'NA')
					,
					(SELECT 'Confirmed deals' "Confirmed deals", Count(*) conf_cnt FROM contractmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Upper(assetclass) IN ('INTEREST RATE','COMMODITY','CAPITAL') AND InStr(portcode,'.') = 0
					AND Nvl(confirmationstatus,'NA') = 'C')
					,
					(SELECT 'UnConfirmed deals' "UnConfirmed deals", Count(*) unconf_cnt FROM contractmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Upper(assetclass) IN ('INTEREST RATE','COMMODITY','CAPITAL') AND InStr(portcode,'.') = 0
					AND Nvl(confirmationstatus,'NA') = 'NA')`,
				"filter":["ASONDATE"]
			},
			"refresh":{
				"source":`SELECT * FROM
					(SELECT 'Total Trades' "Total Trades", Count(*) total_cnt FROM contractmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Upper(assetclass) IN ('INTEREST RATE','COMMODITY','CAPITAL') AND InStr(portcode,'.') = 0
					),
					(SELECT 'Authorised deals' "Authorised deals", Count(*) auth_cnt FROM contractmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Upper(assetclass) IN ('INTEREST RATE','COMMODITY','CAPITAL') AND InStr(portcode,'.') = 0
					AND Nvl(authorisationstatus,'NA') = 'A'),
					(
					SELECT 'UnAuthorised deals' "UnAuthorised deals", Count(*) unauth_cnt FROM contractmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Upper(assetclass) IN ('INTEREST RATE','COMMODITY','CAPITAL') AND InStr(portcode,'.') = 0
					AND Nvl(authorisationstatus,'NA') = 'NA')
					,
					(SELECT 'Confirmed deals' "Confirmed deals", Count(*) conf_cnt FROM contractmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Upper(assetclass) IN ('INTEREST RATE','COMMODITY','CAPITAL') AND InStr(portcode,'.') = 0
					AND Nvl(confirmationstatus,'NA') = 'C')
					,
					(SELECT 'UnConfirmed deals' "UnConfirmed deals", Count(*) unconf_cnt FROM contractmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Upper(assetclass) IN ('INTEREST RATE','COMMODITY','CAPITAL') AND InStr(portcode,'.') = 0
					AND Nvl(confirmationstatus,'NA') = 'NA')`,
				"filter":["ASONDATE"]
			},
			"update":{
				"source":`SELECT * FROM
					(SELECT 'Total Trades' "Total Trades", Count(*) total_cnt FROM contractmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Upper(assetclass) IN ('INTEREST RATE','COMMODITY','CAPITAL') AND InStr(portcode,'.') = 0
					),
					(SELECT 'Authorised deals' "Authorised deals", Count(*) auth_cnt FROM contractmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Upper(assetclass) IN ('INTEREST RATE','COMMODITY','CAPITAL') AND InStr(portcode,'.') = 0
					AND Nvl(authorisationstatus,'NA') = 'A'),
					(
					SELECT 'UnAuthorised deals' "UnAuthorised deals", Count(*) unauth_cnt FROM contractmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Upper(assetclass) IN ('INTEREST RATE','COMMODITY','CAPITAL') AND InStr(portcode,'.') = 0
					AND Nvl(authorisationstatus,'NA') = 'NA')
					,
					(SELECT 'Confirmed deals' "Confirmed deals", Count(*) conf_cnt FROM contractmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Upper(assetclass) IN ('INTEREST RATE','COMMODITY','CAPITAL') AND InStr(portcode,'.') = 0
					AND Nvl(confirmationstatus,'NA') = 'C')
					,
					(SELECT 'UnConfirmed deals' "UnConfirmed deals", Count(*) unconf_cnt FROM contractmaster WHERE To_char(To_date(tradedate,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy') = '<%-ASONDATE%>' AND Nvl(deletionstatus,'ND')='ND' AND Upper(assetclass) IN ('INTEREST RATE','COMMODITY','CAPITAL') AND InStr(portcode,'.') = 0
					AND Nvl(confirmationstatus,'NA') = 'NA')`,
				"filter":["ASONDATE"]
			},
			"delete":{
				"source":``,
				"filter":[]
			}
		},
		{
			"collectionName":"fis_upl_summary",
			"notificationFilter":[],
			"create":{
				"source":`SELECT 'NDS OM' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'nds_om_transaction'
					)
					UNION ALL
					SELECT 'NDS OM REPORTED' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'nds_om_reported_transaction'
					)
					UNION ALL
					SELECT 'CROM' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'crom_transactions'
					)
					UNION ALL
					SELECT 'CROM REPORTED' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'crom_transactions_rep'
					)
					UNION ALL
					SELECT 'TREP' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'trep_transactions'
					)
					UNION ALL
					SELECT 'NDS CALL' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'nds_call_transactions'
					)
					UNION ALL
					SELECT 'ASTROID' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'ois_upload_transactions'
					)`,
				"filter":["ASONDATE"]
			},
			"refresh":{
				"source":`SELECT 'NDS OM' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'nds_om_transaction'
					)
					UNION ALL
					SELECT 'NDS OM REPORTED' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'nds_om_reported_transaction'
					)
					UNION ALL
					SELECT 'CROM' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'crom_transactions'
					)
					UNION ALL
					SELECT 'CROM REPORTED' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'crom_transactions_rep'
					)
					UNION ALL
					SELECT 'TREP' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'trep_transactions'
					)
					UNION ALL
					SELECT 'NDS CALL' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'nds_call_transactions'
					)
					UNION ALL
					SELECT 'ASTROID' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'ois_upload_transactions'
					)`,
				"filter":["ASONDATE"]
			},
			"update":{
				"source":`SELECT 'NDS OM' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					 upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'nds_om_transaction'
					)
					UNION ALL
					SELECT 'NDS OM REPORTED' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'nds_om_reported_transaction'
					)
					UNION ALL
					SELECT 'CROM' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'crom_transactions'
					)
					UNION ALL
					SELECT 'CROM REPORTED' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'crom_transactions_rep'
					)
					UNION ALL
					SELECT 'TREP' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'trep_transactions'
					)
					UNION ALL
					SELECT 'NDS CALL' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'nds_call_transactions'
					)
					UNION ALL
					SELECT 'ASTROID' source, Count(*) total_deals, Count(uploaded_deals) uploaded_deals, Count(unprocessed_deals) unprocessed_deals FROM
					( 
					SELECT CASE WHEN Upper(upload_status) = 'MAT' THEN 'T' END uploaded_deals,
					CASE WHEN Upper(upload_status) IN ('ERR','UMP','MAP') THEN 'F' END unprocessed_deals,
					upload_source
					FROM UPL_STAGE_CONTRACTMASTER WHERE Trunc(uploaded_on) = '<%-ASONDATE%>' and upload_source = 'ois_upload_transactions'
					)`,
				"filter":["ASONDATE"]
			},
			"delete":{
				"source":``,
				"filter":[]
			}
		},
		{
		"collectionName":"fis_market_data",
		"notificationFilter":[],
		"create":{
			"source":`SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'BOD Rates Uploaded' descr, 'upload/process' url FROM exchangerate WHERE Trunc(exchangedate) = '<%-ASONDATE%>' AND ratetype = 'BOD'
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'EOD Rates Uploaded' descr, 'upload/process' url FROM exchangerate WHERE Trunc(exchangedate) = '<%-ASONDATE%>' AND ratetype = 'EOD'
				UNION ALL
				SELECT 'Y' flag,'Market Data Feed Active' descr, '' url FROM dual
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'Accrual Calculation Completed' descr, 'positions/read' url FROM swapaccruals WHERE Trunc(accrualdate) = '<%-ASONDATE%>'
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'Ammortization Calculation Completed' descr, 'positions/read' url  FROM ammortization WHERE Trunc(ammortdate) = '<%-ASONDATE%>'
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'Valuation Calculation Completed' descr, 'positions/read' url  FROM mtmvalues WHERE Trunc(mtmdate) = '<%-ASONDATE%>' AND Nvl(Upper(mtm_product),'NA') IN ('OPTIONS','SWAPS','SECURITY','FUTURES')
				UNION ALL
				SELECT CASE WHEN Count(type) = sum(cnt) THEN 'Y' ELSE 'N' END AS flag, 'FIMMDA Files Uploaded '||'('||sum(cnt)||'/'||Count(type)||')' descr, 'upload/process' url
				FROM (
				select 'Annualised Fimmda Spredsheet For Banks' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = '1' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Annualised Fimmda Spredsheet For Corporates' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = '3' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Annualised Fimmda Spredsheet For NBFC' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = '2' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Annualised Fimmda Spredsheet For PSUs FIs' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = '4' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Annualised Risk Free Yield' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = '0' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Semi-Annualised Risk Free Yield' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = 'NONE' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Fimmda Prices GS' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM fimmdaprices WHERE TYPE = 'GS' AND Trunc(asondate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Fimmda Prices SG' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM fimmdaprices WHERE TYPE = 'SG' AND Trunc(asondate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Fimmda 15 Day Prices' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM fimmda15day_prices WHERE Trunc(uploaddate) = '<%-ASONDATE%>'
				)`,
			"filter":["ASONDATE"]
		},
		"refresh":{
			"source":`SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'BOD Rates Uploaded' descr, 'upload/process' url FROM exchangerate WHERE Trunc(exchangedate) = '<%-ASONDATE%>' AND ratetype = 'BOD'
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'EOD Rates Uploaded' descr, 'upload/process' url FROM exchangerate WHERE Trunc(exchangedate) = '<%-ASONDATE%>' AND ratetype = 'EOD'
				UNION ALL
				SELECT 'Y' flag,'Market Data Feed Active' descr, '' url FROM dual
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'Accrual Calculation Completed' descr, 'positions/read' url FROM swapaccruals WHERE Trunc(accrualdate) = '<%-ASONDATE%>'
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'Ammortization Calculation Completed' descr, 'positions/read' url  FROM ammortization WHERE Trunc(ammortdate) = '<%-ASONDATE%>'
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'Valuation Calculation Completed' descr, 'positions/read' url  FROM mtmvalues WHERE Trunc(mtmdate) = '<%-ASONDATE%>' AND Nvl(Upper(mtm_product),'NA') IN ('OPTIONS','SWAPS','SECURITY','FUTURES')
				UNION ALL
				SELECT CASE WHEN Count(type) = sum(cnt) THEN 'Y' ELSE 'N' END AS flag, 'FIMMDA Files Uploaded '||'('||sum(cnt)||'/'||Count(type)||')' descr, 'upload/process' url
				FROM (
				select 'Annualised Fimmda Spredsheet For Banks' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = '1' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Annualised Fimmda Spredsheet For Corporates' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = '3' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Annualised Fimmda Spredsheet For NBFC' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = '2' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Annualised Fimmda Spredsheet For PSUs FIs' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = '4' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Annualised Risk Free Yield' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = '0' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Semi-Annualised Risk Free Yield' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = 'NONE' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Fimmda Prices GS' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM fimmdaprices WHERE TYPE = 'GS' AND Trunc(asondate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Fimmda Prices SG' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM fimmdaprices WHERE TYPE = 'SG' AND Trunc(asondate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Fimmda 15 Day Prices' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM fimmda15day_prices WHERE Trunc(uploaddate) = '<%-ASONDATE%>'
				)`,
			"filter":["ASONDATE"]
		},
		"update":{
			"source":`SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'BOD Rates Uploaded' descr, 'upload/process' url FROM exchangerate WHERE Trunc(exchangedate) = '<%-ASONDATE%>' AND ratetype = 'BOD'
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'EOD Rates Uploaded' descr, 'upload/process' url FROM exchangerate WHERE Trunc(exchangedate) = '<%-ASONDATE%>' AND ratetype = 'EOD'
				UNION ALL
				SELECT 'Y' flag,'Market Data Feed Active' descr, '' url FROM dual
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'Accrual Calculation Completed' descr, 'positions/read' url FROM swapaccruals WHERE Trunc(accrualdate) = '<%-ASONDATE%>'
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'Ammortization Calculation Completed' descr, 'positions/read' url  FROM ammortization WHERE Trunc(ammortdate) = '<%-ASONDATE%>'
				UNION ALL
				SELECT CASE WHEN Count(*)>0 THEN 'Y' ELSE 'N' END AS flag,'Valuation Calculation Completed' descr, 'positions/read' url  FROM mtmvalues WHERE Trunc(mtmdate) = '<%-ASONDATE%>' AND Nvl(Upper(mtm_product),'NA') IN ('OPTIONS','SWAPS','SECURITY','FUTURES')
				UNION ALL
				SELECT CASE WHEN Count(type) = sum(cnt) THEN 'Y' ELSE 'N' END AS flag, 'FIMMDA Files Uploaded '||'('||sum(cnt)||'/'||Count(type)||')' descr, 'upload/process' url
				FROM (
				select 'Annualised Fimmda Spredsheet For Banks' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = '1' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Annualised Fimmda Spredsheet For Corporates' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = '3' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Annualised Fimmda Spredsheet For NBFC' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = '2' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Annualised Fimmda Spredsheet For PSUs FIs' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = '4' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Annualised Risk Free Yield' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = '0' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Semi-Annualised Risk Free Yield' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM benchmarkyieldcurve WHERE category = 'NONE' AND yieldtype = 'YTM' AND Trunc(yielddate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Fimmda Prices GS' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM fimmdaprices WHERE TYPE = 'GS' AND Trunc(asondate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Fimmda Prices SG' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM fimmdaprices WHERE TYPE = 'SG' AND Trunc(asondate) = '<%-ASONDATE%>'
				UNION ALL
				select 'Fimmda 15 Day Prices' TYPE, CASE WHEN Count(*)>0 THEN 1 ELSE 0 END AS cnt FROM fimmda15day_prices WHERE Trunc(uploaddate) = '<%-ASONDATE%>'
				)`,
			"filter":["ASONDATE"]
		},
		"delete":{
			"source":``,
			"filter":[]
		}
	},
	{
		"collectionName":"fis_settlements",
		"notificationFilter":[],
		"create":{
			"source":`SELECT total.total "Trade(s) to be settled", total.agency agency, pending.st "Settled trade(s)", pending.ag "Accounting Generated"
				FROM (
					SELECT Sum(TOTALTRADES) total, PAYMENT_MODE agency
					FROM (
						SELECT Count(*) totaltrades, Decode(pm.payment_mode, 'NDS-CCIL', 'NDS-CCIL', 'NEFT', 'NEFT', 'RTGS', 'RTGS', 'SGL-DVP', 'SGL-DVP', 'Others') payment_mode
						FROM contractmaster cm, paymentmode pm
						WHERE Trunc(matdate) = '<%-ASONDATE%>' AND pm.pay_mode_code = cm.paymentmode2 AND Nvl(deletionstatus, 'ND') = 'ND' AND cm.paymentmode1 IS NULL
						AND InStr(portcode,'.') = 0
						GROUP BY pm.payment_mode
						
						UNION
						
						SELECT Count(*) totaltrades, Decode(pm.payment_mode, 'NDS-CCIL', 'NDS-CCIL', 'NEFT', 'NEFT', 'RTGS', 'RTGS', 'SGL-DVP', 'SGL-DVP', 'Others') payment_mode
						FROM contractmaster cm, paymentmode pm
						WHERE Trunc(matdate) = '<%-ASONDATE%>' AND pm.pay_mode_code = cm.paymentmode1 AND Nvl(deletionstatus, 'ND') = 'ND' AND cm.paymentmode2 IS NULL
						AND InStr(portcode,'.') = 0
						GROUP BY pm.payment_mode
						
						UNION
<<<<<<< Updated upstream
=======

						SELECT Count(*) totaltrades, Decode(pm.payment_mode, 'NDS-CCIL', 'NDS-CCIL', 'NEFT', 'NEFT', 'RTGS', 'RTGS', 'SGL-DVP', 'SGL-DVP', 'Others') payment_mode
						FROM contractmaster cm, paymentmode pm
						WHERE Trunc(issdate) = '<%-ASONDATE%>' AND pm.pay_mode_code = cm.paymentmode2 AND Nvl(deletionstatus, 'ND') = 'ND' AND cm.paymentmode1 IS NULL
						AND InStr(portcode,'.') = 0
						AND cm.CONTRACTSTRUCTURE = 'Lending And Borrowing'
						GROUP BY pm.payment_mode
						
						UNION
						
						SELECT Count(*) totaltrades, Decode(pm.payment_mode, 'NDS-CCIL', 'NDS-CCIL', 'NEFT', 'NEFT', 'RTGS', 'RTGS', 'SGL-DVP', 'SGL-DVP', 'Others') payment_mode
						FROM contractmaster cm, paymentmode pm
						WHERE Trunc(issdate) = '<%-ASONDATE%>' AND pm.pay_mode_code = cm.paymentmode1 AND Nvl(deletionstatus, 'ND') = 'ND' AND cm.paymentmode2 IS NULL
						AND InStr(portcode,'.') = 0
						AND cm.CONTRACTSTRUCTURE = 'Lending And Borrowing'
						GROUP BY pm.payment_mode

						UNION
>>>>>>> Stashed changes
						
						SELECT 0 TOTALTRADES, 'NDS-CCIL' PAYMENT_MODE
						FROM dual
						
						UNION
						
						SELECT 0 TOTALTRADES, 'NEFT' PAYMENT_MODE
						FROM dual
						
						UNION
						
						SELECT 0 TOTALTRADES, 'RTGS' PAYMENT_MODE
						FROM dual
						
						UNION
						
						SELECT 0 TOTALTRADES, 'NDS-SGL' PAYMENT_MODE
						FROM dual
						
						UNION
						
						SELECT 0 TOTALTRADES, 'Others' PAYMENT_MODE
						FROM dual
						)
					GROUP BY PAYMENT_MODE
					) total, (
						SELECT Sum(st) st, agency, Sum(ag) ag
						FROM (
							SELECT Count(*) st, payment_mode agency, sum(deal_no) ag
							FROM (
								SELECT Decode(pm.payment_mode, 'NDS-CCIL', 'NDS-CCIL', 'NEFT', 'NEFT', 'RTGS', 'RTGS', 'SGL-DVP', 'SGL-DVP', 'Others') payment_mode, CASE WHEN Count(vm.deal_no) > 0 THEN 1 ELSE 0 END AS deal_no
								FROM cms_banktransaction cms, cms_banktransaction_ref ref, paymentmode pm, ac_voucher_master vm, contractmaster cm, contractmaster cm2
								WHERE 1 = 1 AND REF.settlementid = cms.settlementid AND cm.contractcode(+) = REF.contractcode AND To_Char(cms.settlementid) = To_Char(vm.deal_no(+)) AND Trunc(cms.valuedate) = To_Date('<%-ASONDATE%>') AND To_char(cm.paymentmode2) = To_char(pm.pay_mode_code) AND To_char(cm2.paymentmode1) = To_char(pm.pay_mode_code)
								GROUP BY REF.contractcode, pm.payment_mode
								)
							GROUP BY payment_mode
							
							UNION
							
							SELECT 0 st, 'NDS-CCIL' PAYMENT_MODE, 0 deal_no
							FROM dual
							
							UNION
							
							SELECT 0 st, 'NEFT' PAYMENT_MODE, 0 deal_no
							FROM dual
							
							UNION
							
							SELECT 0 st, 'RTGS' PAYMENT_MODE, 0 deal_no
							FROM dual
							
							UNION
							
							SELECT 0 st, 'NDS-SGL' PAYMENT_MODE, 0 deal_no
							FROM dual
							
							UNION
							
							SELECT 0 st, 'Others' PAYMENT_MODE, 0 deal_no
							FROM dual
							)
						GROUP BY agency
						) pending
				WHERE pending.agency = total.agency`,
			"filter":["ASONDATE"]
			},
			"refresh":{
			"source":`SELECT total.total "Trade(s) to be settled", total.agency agency, pending.st "Settled trade(s)", pending.ag "Accounting Generated"
				FROM (
					SELECT Sum(TOTALTRADES) total, PAYMENT_MODE agency
					FROM (
						SELECT Count(*) totaltrades, Decode(pm.payment_mode, 'NDS-CCIL', 'NDS-CCIL', 'NEFT', 'NEFT', 'RTGS', 'RTGS', 'SGL-DVP', 'SGL-DVP', 'Others') payment_mode
						FROM contractmaster cm, paymentmode pm
						WHERE Trunc(matdate) = '<%-ASONDATE%>' AND pm.pay_mode_code = cm.paymentmode2 AND Nvl(deletionstatus, 'ND') = 'ND' AND cm.paymentmode1 IS NULL
						AND InStr(portcode,'.') = 0
						GROUP BY pm.payment_mode
						
						UNION
						
						SELECT Count(*) totaltrades, Decode(pm.payment_mode, 'NDS-CCIL', 'NDS-CCIL', 'NEFT', 'NEFT', 'RTGS', 'RTGS', 'SGL-DVP', 'SGL-DVP', 'Others') payment_mode
						FROM contractmaster cm, paymentmode pm
						WHERE Trunc(matdate) = '<%-ASONDATE%>' AND pm.pay_mode_code = cm.paymentmode1 AND Nvl(deletionstatus, 'ND') = 'ND' AND cm.paymentmode2 IS NULL
						AND InStr(portcode,'.') = 0
						GROUP BY pm.payment_mode
						
						UNION
<<<<<<< Updated upstream
=======

						SELECT Count(*) totaltrades, Decode(pm.payment_mode, 'NDS-CCIL', 'NDS-CCIL', 'NEFT', 'NEFT', 'RTGS', 'RTGS', 'SGL-DVP', 'SGL-DVP', 'Others') payment_mode
						FROM contractmaster cm, paymentmode pm
						WHERE Trunc(issdate) = '<%-ASONDATE%>' AND pm.pay_mode_code = cm.paymentmode2 AND Nvl(deletionstatus, 'ND') = 'ND' AND cm.paymentmode1 IS NULL
						AND InStr(portcode,'.') = 0
						AND cm.CONTRACTSTRUCTURE = 'Lending And Borrowing'
						GROUP BY pm.payment_mode
						
						UNION
						
						SELECT Count(*) totaltrades, Decode(pm.payment_mode, 'NDS-CCIL', 'NDS-CCIL', 'NEFT', 'NEFT', 'RTGS', 'RTGS', 'SGL-DVP', 'SGL-DVP', 'Others') payment_mode
						FROM contractmaster cm, paymentmode pm
						WHERE Trunc(issdate) = '<%-ASONDATE%>' AND pm.pay_mode_code = cm.paymentmode1 AND Nvl(deletionstatus, 'ND') = 'ND' AND cm.paymentmode2 IS NULL
						AND InStr(portcode,'.') = 0
						AND cm.CONTRACTSTRUCTURE = 'Lending And Borrowing'
						GROUP BY pm.payment_mode

						UNION
>>>>>>> Stashed changes
						
						SELECT 0 TOTALTRADES, 'NDS-CCIL' PAYMENT_MODE
						FROM dual
						
						UNION
						
						SELECT 0 TOTALTRADES, 'NEFT' PAYMENT_MODE
						FROM dual
						
						UNION
						
						SELECT 0 TOTALTRADES, 'RTGS' PAYMENT_MODE
						FROM dual
						
						UNION
						
						SELECT 0 TOTALTRADES, 'NDS-SGL' PAYMENT_MODE
						FROM dual
						
						UNION
						
						SELECT 0 TOTALTRADES, 'Others' PAYMENT_MODE
						FROM dual
						)
					GROUP BY PAYMENT_MODE
					) total, (
						SELECT Sum(st) st, agency, Sum(ag) ag
						FROM (
							SELECT Count(*) st, payment_mode agency, sum(deal_no) ag
							FROM (
								SELECT Decode(pm.payment_mode, 'NDS-CCIL', 'NDS-CCIL', 'NEFT', 'NEFT', 'RTGS', 'RTGS', 'SGL-DVP', 'SGL-DVP', 'Others') payment_mode, CASE WHEN Count(vm.deal_no) > 0 THEN 1 ELSE 0 END AS deal_no
								FROM cms_banktransaction cms, cms_banktransaction_ref ref, paymentmode pm, ac_voucher_master vm, contractmaster cm, contractmaster cm2
								WHERE 1 = 1 AND REF.settlementid = cms.settlementid AND cm.contractcode(+) = REF.contractcode AND To_Char(cms.settlementid) = To_Char(vm.deal_no(+)) AND Trunc(cms.valuedate) = To_Date('<%-ASONDATE%>') AND To_char(cm.paymentmode2) = To_char(pm.pay_mode_code) AND To_char(cm2.paymentmode1) = To_char(pm.pay_mode_code)
								GROUP BY REF.contractcode, pm.payment_mode
								)
							GROUP BY payment_mode
							
							UNION
							
							SELECT 0 st, 'NDS-CCIL' PAYMENT_MODE, 0 deal_no
							FROM dual
							
							UNION
							
							SELECT 0 st, 'NEFT' PAYMENT_MODE, 0 deal_no
							FROM dual
							
							UNION
							
							SELECT 0 st, 'RTGS' PAYMENT_MODE, 0 deal_no
							FROM dual
							
							UNION
							
							SELECT 0 st, 'NDS-SGL' PAYMENT_MODE, 0 deal_no
							FROM dual
							
							UNION
							
							SELECT 0 st, 'Others' PAYMENT_MODE, 0 deal_no
							FROM dual
							)
						GROUP BY agency
						) pending
				WHERE pending.agency = total.agency`,
				"filter":["ASONDATE"]
			},
			"update":{
			"source":`SELECT total.total "Trade(s) to be settled", total.agency agency, pending.st "Settled trade(s)", pending.ag "Accounting Generated"
				FROM (
					SELECT Sum(TOTALTRADES) total, PAYMENT_MODE agency
					FROM (
						SELECT Count(*) totaltrades, Decode(pm.payment_mode, 'NDS-CCIL', 'NDS-CCIL', 'NEFT', 'NEFT', 'RTGS', 'RTGS', 'SGL-DVP', 'SGL-DVP', 'Others') payment_mode
						FROM contractmaster cm, paymentmode pm
						WHERE Trunc(matdate) = '<%-ASONDATE%>' AND pm.pay_mode_code = cm.paymentmode2 AND Nvl(deletionstatus, 'ND') = 'ND' AND cm.paymentmode1 IS NULL
						AND InStr(portcode,'.') = 0
						GROUP BY pm.payment_mode
						
						UNION
						
						SELECT Count(*) totaltrades, Decode(pm.payment_mode, 'NDS-CCIL', 'NDS-CCIL', 'NEFT', 'NEFT', 'RTGS', 'RTGS', 'SGL-DVP', 'SGL-DVP', 'Others') payment_mode
						FROM contractmaster cm, paymentmode pm
						WHERE Trunc(matdate) = '<%-ASONDATE%>' AND pm.pay_mode_code = cm.paymentmode1 AND Nvl(deletionstatus, 'ND') = 'ND' AND cm.paymentmode2 IS NULL
						AND InStr(portcode,'.') = 0
						GROUP BY pm.payment_mode
<<<<<<< Updated upstream
=======

						UNION

						SELECT Count(*) totaltrades, Decode(pm.payment_mode, 'NDS-CCIL', 'NDS-CCIL', 'NEFT', 'NEFT', 'RTGS', 'RTGS', 'SGL-DVP', 'SGL-DVP', 'Others') payment_mode
						FROM contractmaster cm, paymentmode pm
						WHERE Trunc(issdate) = '<%-ASONDATE%>' AND pm.pay_mode_code = cm.paymentmode2 AND Nvl(deletionstatus, 'ND') = 'ND' AND cm.paymentmode1 IS NULL
						AND InStr(portcode,'.') = 0
						AND cm.CONTRACTSTRUCTURE = 'Lending And Borrowing'
						GROUP BY pm.payment_mode
						
						UNION
						
						SELECT Count(*) totaltrades, Decode(pm.payment_mode, 'NDS-CCIL', 'NDS-CCIL', 'NEFT', 'NEFT', 'RTGS', 'RTGS', 'SGL-DVP', 'SGL-DVP', 'Others') payment_mode
						FROM contractmaster cm, paymentmode pm
						WHERE Trunc(issdate) = '<%-ASONDATE%>' AND pm.pay_mode_code = cm.paymentmode1 AND Nvl(deletionstatus, 'ND') = 'ND' AND cm.paymentmode2 IS NULL
						AND InStr(portcode,'.') = 0
						AND cm.CONTRACTSTRUCTURE = 'Lending And Borrowing'
						GROUP BY pm.payment_mode
>>>>>>> Stashed changes
						
						UNION
						
						SELECT 0 TOTALTRADES, 'NDS-CCIL' PAYMENT_MODE
						FROM dual
						
						UNION
						
						SELECT 0 TOTALTRADES, 'NEFT' PAYMENT_MODE
						FROM dual
						
						UNION
						
						SELECT 0 TOTALTRADES, 'RTGS' PAYMENT_MODE
						FROM dual
						
						UNION
						
						SELECT 0 TOTALTRADES, 'NDS-SGL' PAYMENT_MODE
						FROM dual
						
						UNION
						
						SELECT 0 TOTALTRADES, 'Others' PAYMENT_MODE
						FROM dual
						)
					GROUP BY PAYMENT_MODE
					) total, (
						SELECT Sum(st) st, agency, Sum(ag) ag
						FROM (
							SELECT Count(*) st, payment_mode agency, sum(deal_no) ag
							FROM (
								SELECT Decode(pm.payment_mode, 'NDS-CCIL', 'NDS-CCIL', 'NEFT', 'NEFT', 'RTGS', 'RTGS', 'SGL-DVP', 'SGL-DVP', 'Others') payment_mode, CASE WHEN Count(vm.deal_no) > 0 THEN 1 ELSE 0 END AS deal_no
								FROM cms_banktransaction cms, cms_banktransaction_ref ref, paymentmode pm, ac_voucher_master vm, contractmaster cm, contractmaster cm2
								WHERE 1 = 1 AND REF.settlementid = cms.settlementid AND cm.contractcode(+) = REF.contractcode AND To_Char(cms.settlementid) = To_Char(vm.deal_no(+)) AND Trunc(cms.valuedate) = To_Date('<%-ASONDATE%>') AND To_char(cm.paymentmode2) = To_char(pm.pay_mode_code) AND To_char(cm2.paymentmode1) = To_char(pm.pay_mode_code)
								GROUP BY REF.contractcode, pm.payment_mode
								)
							GROUP BY payment_mode
							
							UNION
							
							SELECT 0 st, 'NDS-CCIL' PAYMENT_MODE, 0 deal_no
							FROM dual
							
							UNION
							
							SELECT 0 st, 'NEFT' PAYMENT_MODE, 0 deal_no
							FROM dual
							
							UNION
							
							SELECT 0 st, 'RTGS' PAYMENT_MODE, 0 deal_no
							FROM dual
							
							UNION
							
							SELECT 0 st, 'NDS-SGL' PAYMENT_MODE, 0 deal_no
							FROM dual
							
							UNION
							
							SELECT 0 st, 'Others' PAYMENT_MODE, 0 deal_no
							FROM dual
							)
						GROUP BY agency
						) pending
				WHERE pending.agency = total.agency`,
				"filter":["ASONDATE"]
			},
			"delete":{
				"source":``,
				"filter":[]
			}
		}
    ]
};

module.exports = jobConfig;